Search.setIndex({"docnames": ["api/augment", "api/benchmarks", "api/chat", "api/coref", "api/corpus", "api/generate", "api/khavee", "api/parse", "api/soundex", "api/spell", "api/summarize", "api/tag", "api/tokenize", "api/tools", "api/translate", "api/transliterate", "api/ulmfit", "api/util", "api/wangchanberta", "api/word_vector", "api/wsd", "index", "notes/FAQ", "notes/command_line", "notes/getting_started", "notes/installation", "notes/license"], "filenames": ["api/augment.rst", "api/benchmarks.rst", "api/chat.rst", "api/coref.rst", "api/corpus.rst", "api/generate.rst", "api/khavee.rst", "api/parse.rst", "api/soundex.rst", "api/spell.rst", "api/summarize.rst", "api/tag.rst", "api/tokenize.rst", "api/tools.rst", "api/translate.rst", "api/transliterate.rst", "api/ulmfit.rst", "api/util.rst", "api/wangchanberta.rst", "api/word_vector.rst", "api/wsd.rst", "index.rst", "notes/FAQ.rst", "notes/command_line.rst", "notes/getting_started.rst", "notes/installation.rst", "notes/license.rst"], "titles": ["pythainlp.augment", "pythainlp.benchmarks", "pythainlp.chat", "pythainlp.coref", "pythainlp.corpus", "pythainlp.generate", "pythainlp.khavee", "pythainlp.parse", "pythainlp.soundex", "pythainlp.spell", "pythainlp.summarize", "pythainlp.tag", "pythainlp.tokenize", "pythainlp.tools", "pythainlp.translate", "pythainlp.transliterate", "pythainlp.ulmfit", "pythainlp.util", "pythainlp.wangchanberta", "pythainlp.word_vector", "pythainlp.wsd", "PyThaiNLP documentation", "FAQ", "Command Line", "Getting Started", "Installation", "License"], "terms": {"The": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24], "textaug": [0, 25], "i": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26], "thai": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25], "text": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 23, 24, 25], "thi": [0, 4, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 24, 25, 26], "function": [0, 1, 4, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 25], "task": [0, 1, 18, 24], "class": [0, 2, 5, 6, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19], "wordnetaug": 0, "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 25, 26], "us": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26], "wordnet": [0, 25], "__init__": [0, 2, 5, 6, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19], "find_synonym": 0, "word": [0, 1, 4, 5, 6, 8, 9, 10, 11, 15, 16, 17, 18, 19, 20, 23, 24, 25], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "po": [0, 4, 7, 11, 12, 18, 23], "none": [0, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20], "postag_corpu": 0, "orchid": [0, 11, 12], "list": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 24], "find": [0, 4, 6, 9, 12, 17, 19, 25], "synonym": [0, 4], "from": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "part": [0, 4, 11, 12, 17, 18, 23], "speech": [0, 4, 11, 17, 18, 23], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25], "postag": 0, "corpu": [0, 5, 9, 10, 11, 12, 14, 17, 18, 21, 23, 25, 26], "name": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 17, 18, 19, 25], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "sentenc": [0, 9, 10, 11, 13, 17, 19, 20, 24], "token": [0, 4, 5, 7, 10, 11, 16, 18, 19, 20, 21, 23, 24, 25], "object": [0, 4, 6, 9, 10, 12, 16, 17, 19, 20], "word_token": [0, 1, 10, 12, 16, 24], "max_syn_s": 0, "int": [0, 4, 5, 6, 8, 9, 10, 11, 12, 16, 17], "6": [0, 4, 8, 13, 17, 25], "bool": [0, 1, 2, 4, 5, 6, 9, 10, 11, 12, 14, 15, 17, 18, 19], "true": [0, 1, 2, 4, 5, 6, 10, 11, 12, 15, 16, 17, 18, 19, 25], "max": [0, 5], "number": [0, 5, 9, 10, 11, 13, 17], "tupl": [0, 4, 9, 10, 11, 17, 18, 19, 20], "exampl": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 23, 24, 25], "import": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 24], "aug": 0, "\u0e40\u0e23\u0e32\u0e0a\u0e2d\u0e1a\u0e44\u0e1b\u0e42\u0e23\u0e07\u0e40\u0e23": 0, "\u0e22\u0e19": [0, 4, 11, 12, 15, 17], "output": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20], "\u0e40\u0e23\u0e32": [0, 11, 24], "\u0e0a\u0e2d\u0e1a": [0, 17], "\u0e44\u0e1b": [0, 4, 11, 17], "\u0e23": [0, 3, 4, 5, 8, 9, 10, 11, 12, 19, 23, 24], "\u0e23\u0e23": 0, "\u0e42\u0e23\u0e07\u0e40\u0e23": [0, 11, 17], "\u0e2d\u0e32\u0e04\u0e32\u0e23\u0e40\u0e23": 0, "\u0e44\u0e1b\u0e22": 0, "\u0e07": [0, 4, 6, 8, 9, 10, 11, 12, 17, 23], "word2vec": [0, 19], "word2vecaug": 0, "model": [0, 2, 3, 4, 5, 7, 10, 11, 12, 14, 16, 18, 19, 20, 25, 26], "file": [0, 4, 12, 16, 17, 23, 25, 26], "path": [0, 4, 5, 12, 13, 17, 23, 25], "moodel": 0, "binari": 0, "modify_s": 0, "sent": [0, 4, 5, 11, 12, 13, 17, 23], "p": [0, 5, 11, 15, 17], "float": [0, 1, 4, 5, 9, 10, 12, 13, 17, 19, 20], "0": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 16, 17, 19, 20, 21, 23, 25, 26], "7": [0, 5, 11, 17, 18], "probabl": [0, 5, 9], "n_sent": 0, "1": [0, 1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 23, 25, 26], "thai2fitaug": 0, "thai2fit": [0, 5, 19, 25], "github": [0, 4, 7, 10, 12, 14, 15, 17, 18, 21, 22], "com": [0, 4, 10, 11, 12, 14, 17, 18], "cstorm125": 0, "load_w2v": 0, "load": [0, 2, 5, 12, 14, 16, 19], "\u0e1c\u0e21\u0e40\u0e23": 0, "2": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 21, 25, 26], "5": [0, 4, 8, 9, 10, 11, 12, 13, 16, 17, 19, 23, 25], "\u0e1e\u0e27\u0e01\u0e40\u0e23\u0e32": [0, 12], "\u0e40\u0e23": [0, 4, 6, 11, 12, 19], "\u0e09": [0, 6, 11, 12, 14, 23], "\u0e19": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 23, 24], "ltw2vaug": 0, "ltw2v": [0, 19], "larg": [0, 10, 12, 19], "thaiword2vec": 0, "\u0e40\u0e02\u0e32": [0, 11, 19], "\u0e22\u0e19\u0e2b\u0e19": 0, "\u0e07\u0e2a": [0, 11, 23], "\u0e2d": [0, 4, 5, 6, 9, 10, 11, 12, 15, 16, 17, 19, 23], "\u0e2a\u0e21": [0, 11], "\u0e04\u0e23\u0e40\u0e23": 0, "lm": 0, "fasttextaug": 0, "model_path": [0, 5, 16], "fasttext": 0, "you": [0, 4, 7, 11, 12, 17, 18, 21, 22, 23, 24, 25, 26], "want": [0, 1, 4, 7, 15, 17, 18], "download": [0, 4, 13, 14, 23, 25], "http": [0, 4, 8, 9, 10, 11, 12, 14, 16, 17, 18, 21, 25, 26], "cc": [0, 4, 11, 26], "doc": [0, 10, 12, 16, 17], "en": [0, 4, 5, 14, 17], "crawl": 0, "vector": [0, 8, 10, 16, 19, 24, 25], "html": [0, 4, 11, 16, 17, 18], "thai2transformersaug": 0, "gener": [0, 2, 4, 12, 15, 17, 21, 25], "num_replace_token": 0, "3": [0, 4, 5, 7, 8, 10, 11, 12, 16, 17, 23, 25], "wangchanberta": [0, 10, 11, 12, 21, 25], "replac": [0, 16, 17], "\u0e0a": [0, 5, 8, 9, 10, 11, 12, 17, 20], "\u0e32\u0e07\u0e21": 0, "\u0e17": [0, 4, 10, 11, 12, 17, 23], "\u0e07\u0e2b\u0e21\u0e14": [0, 11, 17], "50": [0, 3, 5, 17], "\u0e15": [0, 4, 8, 9, 10, 11, 12, 15, 17, 19, 20, 23], "\u0e27": [0, 3, 6, 8, 9, 10, 11, 12, 16, 17, 19, 23], "\u0e1a\u0e19": [0, 11, 20], "\u0e1a\u0e19\u0e42\u0e25\u0e01\u0e43\u0e1a\u0e19": 0, "\u0e1a\u0e19\u0e2a": 0, "\u0e14": [0, 4, 7, 9, 10, 11, 12, 15, 17, 19, 23], "\u0e1a\u0e19\u0e1a\u0e01": 0, "\u0e1a\u0e19\u0e19": 0, "\u0e1a\u0e19\u0e2b": 0, "bpemb_wv": 0, "bpembaug": 0, "lang": [0, 4, 15, 16], "th": [0, 4, 7, 8, 9, 11, 14, 16, 17], "v": [0, 4, 12, 17], "100000": 0, "dim": 0, "300": [0, 19], "bpemb": 0, "bheinzerl": 0, "\u0e1c\u0e21\u0e2a\u0e2d\u0e19": 0, "\u0e1c\u0e21\u0e40\u0e02": 0, "\u0e32\u0e40\u0e23": 0, "contain": [1, 4, 11, 12, 13, 17, 19, 20], "util": [1, 9, 12, 16, 21], "relat": [1, 4, 16, 19], "nlp": [1, 14, 21, 24], "At": 1, "moment": 1, "we": [1, 2, 4, 11, 17, 18, 19, 20, 25], "have": [1, 16, 19, 24, 25], "onli": [1, 2, 4, 5, 8, 10, 11, 12, 15, 17, 19, 25], "other": [1, 2, 3, 5, 10, 11, 15, 17, 19, 24, 26], "ad": [1, 12, 16, 17], "soon": 1, "qualit": 1, "evalu": 1, "compute_stat": 1, "ref_sampl": 1, "raw_sampl": 1, "dict": [1, 3, 4, 9, 11, 12, 15, 16, 17, 20], "comput": [1, 4, 10, 19], "statist": [1, 8], "These": [1, 17], "includ": [1, 4, 10, 11, 12, 16, 17, 24, 26], "charact": [1, 6, 9, 12, 15, 16, 17], "level": [1, 7, 16, 17], "posit": [1, 12, 17, 19], "fals": [1, 2, 4, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 25], "neg": [1, 11, 19], "precis": [1, 17, 23], "recal": [1, 23], "f1": 1, "correct": [1, 6, 9, 12, 17], "indic": [1, 4, 11, 15, 17, 24], "sequenc": [1, 16, 17], "correspod": 1, "correctli": [1, 9], "ground": 1, "truth": 1, "sampl": [1, 12, 23], "metric": [1, 9], "datafram": 1, "performac": 1, "pleas": [1, 4, 10, 21, 26], "see": [1, 4, 10, 12, 15, 16, 17, 20, 25, 26], "being": [1, 17], "row": 1, "x": [1, 11, 17], "col": 1, "len": [1, 4, 11], "panda": 1, "preprocess": [1, 17], "txt": [1, 4, 12, 13, 16, 23], "remove_spac": [1, 16], "clean": [1, 2, 16, 17], "up": [1, 15], "befor": [1, 6, 11, 12, 16, 17, 25], "perform": [1, 4, 12, 24, 25], "whether": 1, "remov": [1, 4, 8, 9, 16, 17], "white": 1, "space": [1, 11, 12, 16, 17, 24], "chatbotmodel": 2, "ai": [2, 12, 14, 16, 18], "reset_chat": 2, "reset": 2, "histori": 2, "load_model": [2, 5, 14], "model_nam": [2, 3, 10, 19], "wangchanglm": [2, 5, 25], "return_dict": [2, 5], "load_in_8bit": [2, 5], "devic": [2, 3, 4, 5, 20], "cuda": [2, 3, 5], "torch_dtyp": [2, 5], "torch": [2, 5, 16], "float16": [2, 5], "offload_fold": [2, 5], "low_cpu_mem_usag": [2, 5], "now": [2, 11, 17], "support": [2, 4, 11, 12, 17, 25], "8bit": [2, 5], "cpu": [2, 3, 5, 18, 20, 25], "offload": [2, 5], "folder": [2, 5], "low": [2, 5], "mem": [2, 5], "usag": [2, 5, 16], "chatbot": 2, "ask": [2, 22], "answer": [2, 5, 7], "corefer": [3, 25], "resolut": 3, "coreference_resolut": [3, 25], "han": 3, "v1": [3, 15, 19], "do": [3, 4, 7, 15, 16, 17, 24], "run": [3, 12, 20], "txet": 3, "option": [3, 4, 7, 8, 10, 11, 12, 14, 15, 17, 19, 25], "default": [3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 25], "corf": 3, "orefer": 3, "print": [3, 4, 6, 7, 11, 17, 20], "bill": 3, "gate": 3, "\u0e44\u0e14": [3, 5, 6, 11, 12, 17], "\u0e1a\u0e27": 3, "\u0e04\u0e0b": 3, "covid": 3, "19": [3, 12], "\u0e40\u0e02": [3, 11, 12], "\u0e21\u0e41\u0e23\u0e01\u0e41\u0e25": 3, "\u0e23\u0e30\u0e1a": 3, "\u0e1c\u0e21\u0e23": [3, 14], "\u0e2a": [3, 4, 9, 10, 11, 12, 17, 23], "\u0e01\u0e2a\u0e1a\u0e32\u0e22\u0e21\u0e32\u0e01": 3, "clusters_str": 3, "\u0e1c\u0e21": [3, 7, 11, 23], "cluster": [3, 12], "10": [3, 4, 10, 11, 17, 19, 21, 25], "52": [3, 8], "provid": [4, 9, 16], "access": [4, 12], "come": 4, "countri": 4, "frozenset": 4, "\u0e41\u0e04\u0e19\u0e32\u0e14\u0e32": 4, "\u0e42\u0e23\u0e21\u0e32\u0e40\u0e19": 4, "\u0e22": [4, 5, 9, 10, 11, 12, 16, 17, 23], "\u0e41\u0e2d\u0e25\u0e08": 4, "\u0e25\u0e32\u0e27": [4, 19], "dev": 4, "countries_th": 4, "rtype": [4, 6, 12, 15, 16], "get_corpu": 4, "filenam": 4, "as_i": 4, "read": [4, 7, 18, 22, 25], "data": [4, 13, 16, 17, 19, 23, 25], "each": [4, 10, 11, 12, 14, 17, 19, 25], "line": [4, 17, 21, 25], "member": [4, 16], "set": [4, 9, 11, 12, 16, 17, 24, 25], "By": [4, 9, 10, 13, 17, 25], "whitespac": [4, 12, 17], "strip": [4, 6], "empti": [4, 16, 17], "valu": [4, 5, 8, 9, 11, 12, 17], "duplic": [4, 5, 17], "If": [4, 7, 9, 10, 12, 13, 15, 17, 18, 19, 20, 21, 25], "modif": 4, "order": [4, 9, 11, 17], "consist": [4, 16], "negations_th": 4, "\u0e41\u0e15": [4, 11, 20], "\u0e44\u0e21": [4, 11, 12, 17, 23], "ttc_freq": [4, 13], "\u0e42\u0e14\u0e22\u0e19": 4, "t1": [4, 5], "\u0e27\u0e1a\u0e17": 4, "t10": 4, "\u0e2b\u0e22": 4, "\u0e1a\u0e22": 4, "t3": [4, 5], "get_corpus_db": 4, "url": [4, 11], "get": [4, 12, 16, 19, 20, 21, 23, 25], "catalog": [4, 23], "server": 4, "get_corpus_db_detail": 4, "version": [4, 11, 12, 25, 26], "detail": [4, 11, 23, 25], "about": [4, 11, 17, 22, 25, 26], "inform": [4, 12, 25, 26], "local": [4, 12, 13, 17, 23], "get_corpus_default_db": 4, "default_db": 4, "json": 4, "doesn": [4, 11], "t": [4, 10, 11, 15, 16, 17], "exist": [4, 9, 12, 13, 16, 25], "edit": [4, 9], "can": [4, 7, 9, 10, 12, 13, 17, 18, 22, 23, 24, 25], "get_corpus_path": 4, "forc": 4, "alreadi": 4, "root": [4, 7, 13, 24], "ha": [4, 11, 17, 24], "been": 4, "yet": [4, 13, 17], "wiki_lm_lstm": 4, "32": [4, 25], "thwiki_lm": 4, "pth": 4, "dl": 4, "05gb": 4, "00": [4, 17], "25": [4, 16, 17], "41": 4, "5mb": 4, "": [4, 9, 11, 12, 15, 16, 17, 18, 23], "thwiki_model_lstm": 4, "avail": [4, 8, 11, 12, 18, 23], "seen": 4, "io": [4, 21], "db": 4, "found": [4, 9, 17], "succesfulli": 4, "otherwis": [4, 11, 12, 17, 18, 19], "26": 4, "114k": 4, "434k": 4, "690kb": 4, "save": [4, 23], "home": [4, 25], "e": [4, 10, 11, 12, 17], "g": [4, 10, 12], "user": [4, 12, 17, 23], "bact": 4, "filenotfounderror": 4, "errno": [4, 25], "No": [4, 7, 11, 15, 24], "directori": [4, 13, 25], "usr": [4, 13], "lib": [4, 13], "python3": [4, 13], "dist": [4, 13], "packag": [4, 13, 24, 25], "provinc": [4, 11], "thailand": [4, 8, 11, 14, 15, 17, 18], "\u0e01\u0e23\u0e30\u0e1a": [4, 9], "\u0e01\u0e23": [4, 10, 11, 23], "\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23": [4, 10], "\u0e01\u0e32\u0e0d\u0e08\u0e19\u0e1a": 4, "\u0e1a\u0e25\u0e23\u0e32\u0e0a\u0e18\u0e32\u0e19": 4, "thailand_provinces_th": 4, "param": [4, 6, 11, 12, 13, 14, 15, 16, 18], "name_th": 4, "\u0e19\u0e19\u0e17\u0e1a": 4, "abbr_th": 4, "\u0e19\u0e1a": [4, 10, 11], "name_en": 4, "nonthaburi": 4, "abbr_en": 4, "nbi": 4, "thai_dict": [4, 20], "dictionari": [4, 9, 10, 12, 15, 16, 17, 20], "wiktionari": [4, 20], "thai_stopword": [4, 10], "stopword": [4, 17], "\u0e21": [4, 6, 9, 10, 11, 12, 17, 23], "\u0e44\u0e07": 4, "\u0e02\u0e13\u0e30": 4, "\u0e01\u0e32\u0e23": [4, 11, 12, 17, 19, 23], "\u0e1b\u0e23\u0e30\u0e01\u0e32\u0e23\u0e2b\u0e19": 4, "stopwords_th": 4, "thesi": [4, 8], "\u0e40\u0e1e": [4, 11], "\u0e0d\u0e28": 4, "\u0e25": [4, 8, 11, 12, 19], "\u0e15\u0e23\u0e30\u0e01": 4, "also": [4, 10, 12, 15, 16, 25], "\u0e01\u0e32\u0e23\u0e40\u0e25": 4, "\u0e2d\u0e01\u0e1b\u0e23\u0e30\u0e42\u0e22\u0e04\u0e2a\u0e33\u0e04": 4, "\u0e0d\u0e43\u0e19\u0e01\u0e32\u0e23\u0e2a\u0e23": 4, "\u0e1b\u0e04\u0e27\u0e32\u0e21\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\u0e42\u0e14\u0e22\u0e43\u0e0a": 4, "\u0e41\u0e1a\u0e1a\u0e08\u0e33\u0e25\u0e2d\u0e07\u0e41\u0e1a\u0e1a\u0e25\u0e33\u0e14": 4, "\u0e1a\u0e0a": 4, "\u0e21\u0e2b\u0e32\u0e27": 4, "\u0e17\u0e22\u0e32\u0e25": 4, "\u0e22\u0e18\u0e23\u0e23\u0e21\u0e28\u0e32\u0e2a\u0e15\u0e23": 4, "2551": 4, "thai_word": [4, 12], "\u0e01\u0e15": 4, "\u0e01\u0e32": [4, 12, 16, 17, 19, 23], "\u0e01\u0e14\u0e14": 4, "\u0e1e": [4, 8, 10, 11, 12, 15, 17, 19, 23], "\u0e29": [4, 10], "\u0e29\u0e20": 4, "words_th": [4, 12], "languag": [4, 6, 7, 8, 11, 12, 14, 15, 16, 17, 18, 21, 24, 26], "thai_wsd_dict": 4, "sens": [4, 20, 24], "disambigu": [4, 20], "thai_orst_word": 4, "royal": [4, 15, 17], "societi": [4, 11], "thai_syl": 4, "syllabl": [4, 6, 7, 12, 17, 23, 25], "\u0e01\u0e23\u0e2d\u0e1a": [4, 6, 20], "\u0e01": [4, 8, 9, 10, 11, 12, 15, 17, 20, 23, 24], "\u0e51": [4, 17], "\u0e42\u0e21\u0e1a": 4, "\u0e42\u0e21\u0e19": 4, "\u0e42\u0e21": 4, "\u0e32": [4, 10, 11, 15, 16, 17, 19, 23], "syllables_th": 4, "kucut": 4, "thai_neg": 4, "negat": [4, 11], "thai_family_nam": 4, "famili": 4, "family_names_th": 4, "thai_female_nam": 4, "femal": 4, "person_names_female_th": 4, "thai_male_nam": 4, "male": 4, "person_names_male_th": 4, "th_en_translit": 4, "get_transliteration_dict": 4, "defaultdict": 4, "transliter": [4, 8, 17, 21, 25], "english": [4, 8, 14, 15, 16, 17], "format": [4, 11, 12, 17, 18], "an": [4, 9, 10, 12, 16, 17, 24, 26], "open": [4, 12, 17], "multilingu": [4, 14, 20], "knowledg": [4, 12], "graph": [4, 12], "commonsens": 4, "conceptnet5": 4, "wiki": [4, 17], "api": 4, "edg": 4, "public": [4, 19, 21, 26], "semant": [4, 20], "network": [4, 12], "design": 4, "help": [4, 17, 23], "understand": [4, 24], "mean": [4, 10, 16, 17, 19, 25], "peopl": 4, "For": [4, 10, 11, 12, 17, 20, 24, 25, 26], "term": [4, 19, 24], "common": [4, 11, 12, 17, 26], "which": [4, 9, 12, 17], "artifici": [4, 14], "intelig": 4, "concepnet": 4, "natur": [4, 21, 24], "intellig": [4, 14], "With": [4, 19, 24, 25], "illustr": 4, "show": [4, 11, 16], "relationship": 4, "repres": [4, 17, 19], "between": [4, 6, 8, 11, 12, 19], "node": [4, 17, 25], "abbrevi": [4, 11, 17], "ja": 4, "japan": [4, 11], "given": [4, 8, 9, 10, 11, 13, 17, 19], "accord": [4, 6, 8, 9, 17], "hello": 4, "id": 4, "r": [4, 10, 12, 17], "isa": 4, "c": [4, 12, 17, 18, 25], "greet": 4, "dataset": [4, 12, 13, 18, 23, 26], "d": [4, 17], "4": [4, 5, 6, 7, 8, 11, 14, 15, 16, 17, 19, 26], "end": [4, 11, 12, 17, 24], "label": [4, 11, 19, 23], "licens": [4, 12, 21], "rel": [4, 11, 17], "activ": [4, 11], "omc": 4, "vote": 4, "contributor": 4, "bmsacr": 4, "test": [4, 14, 16, 23], "start": [4, 17, 21], "surfacetext": 4, "kind": [4, 12, 26], "weight": [4, 16], "4641016151377544": 4, "\u0e2a\u0e27": 4, "\u0e2a\u0e14": 4, "relatedto": 4, "n": [4, 5, 8, 10, 15, 17, 18], "prosper": 4, "sa": [4, 17], "process": [4, 12, 16, 17, 21, 24, 25], "wikiparsec": 4, "resourc": 4, "sense_label": 4, "word_freq": 4, "frequenc": [4, 9, 10, 11, 17], "nation": [4, 5, 9, 11], "tnc_freq": 4, "credit": [4, 12], "korakot": [4, 12, 21], "chaovavanich": [4, 12, 21], "bit": [4, 25], "ly": 4, "3wskzsf": 4, "unigram_word_freq": 4, "unigram": [4, 5, 10], "bigram_word_freq": 4, "bigram": [4, 5, 10], "trigram_word_freq": 4, "trigram": [4, 5], "textbook": [4, 5], "icu": [4, 12, 24, 25], "find_badword": 4, "callabl": [4, 9, 16], "training_data": 4, "iter": [4, 9, 10, 11, 12, 17], "work": [4, 7, 12, 16, 17], "well": [4, 16], "train": [4, 7, 12, 14, 16, 19, 24], "consid": [4, 6, 11], "make": [4, 11, 16, 17, 19, 24], "unwel": 4, "revise_wordset": 4, "orig_word": 4, "revis": [4, 15], "could": [4, 12, 17, 25], "improv": [4, 12], "base": [4, 7, 8, 9, 10, 12, 15, 16, 17, 18, 20], "orign_word": 4, "remain": 4, "ani": [4, 9, 11, 12, 19, 26], "take": [4, 11, 25], "string": [4, 8, 12, 15, 16, 17], "input": [4, 6, 9, 10, 12, 13, 14, 15, 16, 17, 19, 23], "longest": [4, 23], "segment": [4, 12, 18, 24], "base_word": 4, "more_word": 4, "\u0e16\u0e27": 4, "\u0e14\u0e25": [4, 17], "\u0e17\u0e2d\u0e07\u0e2d": 4, "\u0e19\u0e17\u0e23": [4, 8, 11, 17], "\u0e20": [4, 11, 19], "\u0e12\u0e19": 4, "\u0e40\u0e15": [4, 16], "\u0e22\u0e07": [4, 11, 17, 19], "\u0e28": [4, 10, 11, 12, 15, 17, 19], "\u0e02": [4, 11, 12, 17], "\u0e19\u0e18": [4, 8, 17], "\u0e08\u0e33\u0e25\u0e2d\u0e07": 4, "\u0e14\u0e32\u0e27\u0e40\u0e23": 4, "\u0e2d\u0e07": [4, 11, 12, 23], "union": [4, 6, 7, 11, 12, 17, 18, 20], "dict_tri": [4, 12, 17], "trie": [4, 12, 17], "wordlist": 4, "lambda": 4, "revised_word": 4, "revise_newmm_default_wordset": 4, "newmm": [4, 10, 16, 23, 24], "exact": [4, 11], "copi": [4, 12, 15, 26], "nltk": 4, "www": [4, 8, 9, 11, 12, 17, 25, 26], "org": [4, 11, 12, 16, 17, 18, 21, 26], "howto": 4, "synset": 4, "tha": 4, "all": [4, 6, 9, 10, 12, 14, 16, 17, 19, 25, 26], "lemma": 4, "argument": 4, "constrain": [4, 12], "its": [4, 9, 12, 13, 16, 17, 19], "constraint": 4, "noun": [4, 7, 11], "verb": [4, 7, 11], "adject": [4, 11], "satellit": 4, "adverb": [4, 11], "eng": [4, 8], "\u0e17\u0e33\u0e07\u0e32\u0e19": [4, 11], "01": [4, 17], "02": [4, 16, 18], "08": 4, "\u0e1a": [4, 8, 9, 10, 11, 12, 16, 17, 23, 24], "\u0e32\u0e19": [4, 8, 11, 16], "duplex_hous": 4, "dwell": 4, "hous": 4, "03": [4, 17], "14": [4, 11], "07": 4, "when": [4, 10, 19, 24], "specifi": [4, 10, 11, 13, 18, 25], "\u0e41\u0e23\u0e07": [4, 9], "cound": 4, "interpret": 4, "hard": [4, 24], "adj": [4, 11], "accept": 4, "strong": 4, "name_synset": 4, "dog": 4, "chase": 4, "sysset": 4, "difficult": 4, "easi": [4, 10, 24], "requir": [4, 9, 10, 12, 15, 19, 25, 26], "great": 4, "physic": 4, "mental": 4, "effort": [4, 25], "accomplish": 4, "comprehend": 4, "endur": 4, "all_lemma_nam": 4, "tag": [4, 7, 12, 18, 21, 23], "\u0e2d\u0e40\u0e21\u0e23": [4, 19], "\u0e42\u0e01_\u0e40\u0e27\u0e2a\u0e1b": 4, "\u0e0a\u0e0a": 4, "\u0e40\u0e21": [4, 11, 17], "\u0e2d\u0e07\u0e0a": 4, "\u0e40\u0e2d\u0e19\u0e40\u0e19": 4, "\u0e01\u0e32\u0e23\u0e23": 4, "\u0e1a\u0e40\u0e25": 4, "\u0e22\u0e07\u0e1a": 4, "\u0e15\u0e23\u0e1a": 4, "\u0e0d\u0e18\u0e23\u0e23\u0e21": 4, "\u0e1c": [4, 11, 12, 19, 23], "\u0e15\u0e01\u0e41\u0e15": 4, "\u0e07\u0e40\u0e23": 4, "\u0e2d\u0e14": [4, 10], "\u0e27\u0e22\u0e18\u0e07": 4, "\u0e08": [4, 11, 12, 15, 16, 17, 19, 23], "\u0e42\u0e2d\u0e27\u0e32\u0e19\u0e19": 4, "_\u0e40\u0e27\u0e2d\u0e23": 4, "\u0e42\u0e2d": [4, 11, 24], "80508": 4, "\u0e0b": [4, 10, 11, 15, 17], "\u0e07\u0e44\u0e21": 4, "\u0e41\u0e2d\u0e25\u0e01\u0e2d\u0e2e\u0e2d\u0e25": 4, "\u0e07\u0e15\u0e23\u0e07\u0e44\u0e1b\u0e15\u0e23\u0e07\u0e21\u0e32": 4, "\u0e40\u0e2a": [4, 9, 11, 17, 19, 23], "\u0e19\u0e28": 4, "\u0e19\u0e22": [4, 17, 23], "\u0e15\u0e23": [4, 17], "\u0e17\u0e32\u0e07\u0e08": 4, "\u0e15\u0e43\u0e08": 4, "5277": 4, "all_synset": 4, "over": 4, "next": [4, 9], "entiti": [4, 11, 12, 18, 25], "physical_ent": 4, "abstract": 4, "06": [4, 17], "abl": 4, "unabl": 4, "iso": [4, 15], "639": 4, "code": [4, 8, 12, 13, 14, 16, 26], "al": [4, 12], "arb": 4, "bul": 4, "cat": [4, 14], "cmn": 4, "dan": 4, "ell": 4, "eu": 4, "fa": 4, "fin": 4, "fra": 4, "glg": 4, "heb": 4, "hrv": 4, "ind": 4, "ita": 4, "jpn": 4, "nld": 4, "nno": 4, "nob": 4, "pol": 4, "por": 4, "qcn": 4, "slv": 4, "spa": 4, "swe": 4, "zsm": 4, "lamma": 4, "\u0e42\u0e1b\u0e23\u0e14": 4, "like": [4, 9, 11, 17, 18, 24, 25], "\u0e1e\u0e23\u0e30\u0e40\u0e08": [4, 10], "god": 4, "godhead": 4, "father": 4, "\u0e27\u0e19": [4, 10, 11, 12, 17], "roll": 4, "18": [4, 17], "17": [4, 17], "curl": 4, "roll_up": 4, "wind": 4, "11": [4, 8, 11, 12, 17], "practic": 4, "exercis": 4, "drill": 4, "lemma_from_kei": 4, "kei": [4, 9, 17], "similar": [4, 9, 10, 16, 17, 19, 20, 24], "need": [4, 12, 25], "suppli": [4, 12], "instead": [4, 16], "path_similar": 4, "synsets1": 4, "synsets2": 4, "two": [4, 6, 10, 11, 12, 17, 19, 24, 25], "shortest": 4, "distanc": [4, 9, 20], "equat": 4, "follow": [4, 11, 12, 17, 21, 24], "_similar": 4, "_path": 4, "_distanc": 4, "calcul": [4, 17], "connect": 4, "through": [4, 13], "hypernym": 4, "hyponym": 4, "taxonomi": 4, "score": [4, 10, 19], "ranag": 4, "ident": 4, "first": [4, 9, 10, 17, 19], "measur": [4, 11, 20], "second": [4, 17, 19], "obj": [4, 7], "3333333333333333": 4, "07142857142857142": 4, "08333333333333333": 4, "lch_similar": 4, "leacock": 4, "chodorow": 4, "lch": 4, "maximum": [4, 9, 10, 12], "depth": 4, "shown": 4, "below": [4, 17], "log": 4, "_depth": 4, "538973871058276": 4, "9985288301111273": 4, "1526795099383855": 4, "wup_similar": 4, "wu": 4, "palmer": 4, "wup": 4, "least": 4, "subsum": 4, "most": [4, 9, 10, 19, 24], "specif": [4, 8, 12, 16, 19, 26], "ancestor": 4, "13333333333333333": 4, "35294117647058826": 4, "morphi": 4, "form": [4, 11, 17, 19], "possibl": [4, 9, 12, 17], "search": [4, 8, 9, 21], "thiev": 4, "thief": 4, "mix": 4, "custom_lemma": 4, "tab_fil": 4, "custom": [4, 9, 12, 17], "tab": 4, "compl": 4, "hss": 4, "ntu": 4, "edu": [4, 25], "sg": 4, "omw": 4, "map": [4, 11, 19], "share": 4, "tnc": [5, 9, 11], "ttc": 5, "oscar": 5, "gen_sent": 5, "start_seq": 5, "prob": [5, 9], "001": 5, "output_str": 5, "begin": [5, 11, 17], "gen": 5, "\u0e41\u0e21\u0e27": [5, 6, 11, 16, 17], "ouput": 5, "\u0e41\u0e21\u0e27\u0e40\u0e27\u0e25\u0e32\u0e19\u0e30\u0e19": 5, "t2": 5, "\u0e41\u0e21\u0e27\u0e44\u0e21": 5, "\u0e1a\u0e40\u0e0a": 5, "\u0e2d\u0e21": [5, 20], "\u0e07\u0e17\u0e33\u0e15": 5, "\u0e27\u0e40\u0e1b": 5, "\u0e19\u0e40\u0e0b": 5, "\u0e1f\u0e40\u0e27\u0e2d\u0e23": 5, "\u0e04": [5, 8, 9, 11, 12, 17, 20, 23], "\u0e41\u0e04\u0e17\u0e23": 5, "\u0e22\u0e32": 5, "\u0e07\u0e25": 5, "\u0e01\u0e41\u0e2a\u0e14\u0e07": 5, "\u0e13\u0e2b\u0e25\u0e27\u0e07": 5, "is_exclud": 5, "5b": 5, "sft": 5, "shard": 5, "gen_instruct": 5, "max_new_token": 5, "512": 5, "top_p": 5, "95": [5, 11, 12, 17], "temperatur": 5, "9": [5, 9, 10, 11, 16, 17, 18], "top_k": 5, "no_repeat_ngram_s": 5, "typical_p": 5, "thai_onli": 5, "skip_special_token": 5, "instruct": 5, "new": [5, 12, 16, 17, 24, 25], "top": [5, 19], "k": [5, 10], "repeat": [5, 17], "ngram": 5, "size": [5, 12, 16], "typic": 5, "skip": 5, "special": 5, "instruct_gener": 5, "context": [5, 11, 20, 24], "toolkit": [6, 11, 15], "poetri": 6, "\u0e01\u0e27": [6, 11, 19], "khaveeverifi": 6, "verifi": 6, "check_sara": 6, "check": [6, 9, 17], "vowel": [6, 17], "kv": 6, "\u0e40\u0e2d\u0e2d": [6, 11], "check_marttra": 6, "spell": [6, 12, 15, 17, 21, 25], "section": [6, 15], "\u0e2a\u0e32\u0e27": 6, "\u0e40\u0e01\u0e2d\u0e27": 6, "is_sumpu": 6, "word1": [6, 19], "word2": [6, 19], "rhyme": 6, "boolen": 6, "\u0e2a\u0e23\u0e23": 6, "check_karu_lahu": 6, "check_klon": 6, "k_type": 6, "8": [6, 8, 12, 16, 17, 18], "suitabl": [6, 25], "poem": 6, "principl": 6, "\u0e19\u0e0a": [6, 20], "\u0e2d\u0e2b\u0e21": 6, "\u0e19\u0e0a\u0e2d\u0e1a\u0e01": 6, "\u0e19\u0e44\u0e01": 6, "\u0e41\u0e25": [6, 20], "\u0e27\u0e01": 6, "\u0e07\u0e44\u0e25": 6, "\u0e2b\u0e21\u0e32\u0e0a": 6, "\u0e2d\u0e19": [6, 11, 19], "\u0e32\u0e17\u0e2d\u0e07": 6, "\u0e25\u0e04\u0e04\u0e19\u0e40\u0e01": 6, "\u0e40\u0e2d": [6, 11], "\u0e07\u0e40\u0e2d": 6, "\u0e07\u0e04\u0e30\u0e19\u0e2d\u0e07": 6, "\u0e04\u0e19\u0e08": 6, "\u0e1a\u0e08\u0e2d\u0e07": 6, "\u0e40\u0e02\u0e32\u0e0a": 6, "\u0e2d\u0e07\u0e40\u0e18": 6, "\u0e22\u0e23": 6, "\u0e07\u0e40\u0e2a": 6, "\u0e22\u0e07\u0e2b\u0e21\u0e32": 6, "cant": 6, "paragraph": [6, 12], "\u0e2b\u0e21\u0e32": 6, "\u0e08\u0e2d\u0e07": 6, "\u0e17\u0e2d\u0e07": 6, "check_aek_too": 6, "dead_syllable_as_aek": 6, "tonal": 6, "checker": [6, 9], "dead": [6, 17], "aek": 6, "too": 6, "both": [6, 12, 17, 19, 24], "\u0e01\u0e32\u0e23\u0e40\u0e0a": 6, "\u0e04\u0e04\u0e33\u0e40\u0e2d\u0e01\u0e42\u0e17": 6, "\u0e40\u0e2d\u0e07": 6, "\u0e43\u0e0a": [6, 11, 17, 20], "\u0e40\u0e2b\u0e21": [6, 11, 17], "\u0e2d\u0e19\u0e01": [6, 11], "handle_karun_sound_sil": 6, "handl": [6, 12], "sound": [6, 8, 17], "silenc": 6, "karun": 6, "should": [6, 15, 17, 24], "__dict__": [6, 9], "mappingproxi": [6, 9], "__module__": [6, 9], "core": [6, 16, 20], "attribut": [6, 9, 11, 26], "__weakref__": [6, 9], "__doc__": [6, 9], "__annotations__": [6, 9], "depend": [7, 11, 12, 25], "dependency_pars": [7, 25], "engin": [7, 8, 9, 14, 16, 24, 25], "esupar": [7, 25], "transformers_ud": [7, 25], "parser": 7, "conllu": 7, "tagger": [7, 12, 18], "bert": [7, 10, 12], "roberta": 7, "deberta": 7, "spacy_thai": [7, 25], "univers": [7, 8, 11, 14, 16, 26], "transformersud": 7, "ud_goeswith": 7, "goeswith": 7, "subword": [7, 18, 23, 24], "koichiyasuoka": 7, "spm": [7, 10, 18], "upo": 7, "huggingfac": [7, 14], "v2": [7, 11, 18, 20], "pre": [7, 11, 12, 16, 19, 25], "wikipedia": [7, 15, 17], "char": [7, 13, 17], "ud": [7, 11], "head": 7, "pretrain": [7, 14, 16, 18], "detect": 7, "question": [7, 22], "deriv": 7, "th_blackboard": 7, "conll": 7, "\u0e1c\u0e21\u0e40\u0e1b": 7, "\u0e19\u0e04\u0e19\u0e14": 7, "_": [7, 17], "pron": [7, 11], "nsubj": 7, "spaceaft": 7, "\u0e40\u0e1b": [7, 10, 11, 12, 17], "cop": 7, "\u0e04\u0e19": [7, 11, 16, 17], "acl": [7, 12], "ppr": [7, 11], "vsta": [7, 11], "\u0e04\u0e19\u0e14": [7, 17], "ncmn": [7, 11], "udom83": [8, 23], "length": [8, 9, 17], "convert": [8, 15, 17, 19], "phonet": [8, 15, 25], "prefer": 8, "metasound": [8, 23], "prayut_and_somchaip": 8, "algorithm": [8, 9, 10, 11, 12, 17], "propos": 8, "vichit": 8, "lorchirachoonkul": 8, "lk82": [8, 23], "wanne": 8, "udompanich": 8, "combin": [8, 12, 19], "metaphon": 8, "snae": 8, "br\u00fcckner": 8, "cross": [8, 12], "retriev": 8, "techniqu": [8, 10, 12, 24], "\u0e23100000": 8, "\u0e231000": 8, "\u0e25100": 8, "\u0e23100": 8, "\u0e01\u0e29": 8, "\u0e23\u0e13\u0e01\u0e32\u0e23": 8, "\u0e1a931900": 8, "\u0e1ae419": 8, "\u0e1a551": 8, "\u0e1b": [8, 9, 11, 15, 16, 17, 19], "\u0e08\u0e08": [8, 17], "\u0e1b775300": 8, "\u0e1b3e54": 8, "\u0e1b223": 8, "vp": [8, 11], "\u0e1a5515": 8, "mactch": 8, "call": [8, 10, 17, 25], "wa": [8, 12, 17], "develop": [8, 12, 17, 25], "\u0e1a55150": 8, "king": [8, 17], "word_approxim": 8, "list_word": [8, 9], "approxim": [8, 17], "smaller": [8, 12], "closer": 8, "\u0e23\u0e16": 8, "\u0e23\u0e14": 8, "\u0e23\u0e2a": 8, "\u0e23\u0e21": 8, "\u0e33": [8, 16, 19], "875": 8, "375": 8, "audio_vector": 8, "audio": 8, "featur": [8, 12, 16], "panphon": 8, "word2audio": 8, "ipa": [8, 17, 25], "tone": [8, 15, 17], "a\u02d0": [8, 15], "m": [8, 15, 17, 18], "2009": 8, "novel": 8, "match": [8, 11, 12, 17], "ontologi": 8, "analys": 8, "astrologi": 8, "1983": 8, "alik": 8, "homonym": 8, "approach": [8, 12, 25], "master": 8, "chulalongkorn": 8, "\u0e2b\u0e25": [8, 15], "\u0e2d\u0e08": 8, "\u0e23\u0e30\u0e0a": 8, "\u0e13\u0e2b": 8, "\u0e41\u0e25\u0e30": [8, 11, 12, 17, 23], "\u0e40\u0e08\u0e23": [8, 10], "\u0e0d": [8, 11, 19], "\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21\u0e01\u0e32\u0e23\u0e2a": 8, "\u0e1a\u0e04": [8, 15], "\u0e19\u0e04\u0e33\u0e44\u0e17\u0e22\u0e15\u0e32\u0e21\u0e40\u0e2a": 8, "\u0e22\u0e07\u0e2d": 8, "prayut": 8, "suwanvisat": 8, "somchai": 8, "prasitjutrakul": 8, "In": [8, 12, 17, 24], "1998": 8, "cite": [8, 12, 18, 21], "2022": [8, 17], "sep": 8, "cp": 8, "chula": [8, 9], "ac": [8, 9, 11], "spj": 8, "paper": 8, "thaitext": 8, "ncsec98": 8, "clir": 8, "pdf": [8, 12], "closest": 9, "pn": 9, "peter": 9, "norvig": 9, "phunspel": [9, 25], "A": [9, 10, 12, 14, 15, 16, 17, 24, 25], "spyll": 9, "port": 9, "hunspel": 9, "symspellpi": [9, 25], "python": [9, 12, 17, 21, 24, 25], "symspel": 9, "v6": 9, "\u0e19\u0e15\u0e23\u0e1a": 9, "\u0e19\u0e15\u0e23\u0e07": 9, "\u0e04\u0e23": [9, 11], "\u0e07\u0e40\u0e01\u0e15": 9, "\u0e01\u0e23\u0e30\u0e1b": 9, "\u0e01\u0e30\u0e1b": 9, "\u0e40\u0e2b\u0e15\u0e01\u0e32\u0e23\u0e13": 9, "\u0e40\u0e2b\u0e15": [9, 17, 23], "\u0e01\u0e32\u0e23\u0e13": [9, 17], "correct_s": 9, "\u0e40\u0e14": [9, 10, 17], "\u0e19\u0e2d\u0e23": 9, "\u0e40\u0e19": [9, 11, 20], "\u0e19\u0e40\u0e17\u0e2d\u0e23": [9, 20], "ar": [9, 10, 11, 12, 15, 16, 17, 19, 25, 26], "incur": 9, "result": [9, 11, 17, 23], "sort": [9, 17], "occurr": 9, "descend": [9, 17], "tltk": [9, 11, 12], "wrapper": [9, 11, 12, 16], "within": [9, 11, 12, 16, 25], "\u0e27\u0e23": 9, "\u0e1b\u0e23": 9, "\u0e1a\u0e23": 9, "\u0e04\u0e25": [9, 11], "spell_sent": 9, "norvigspellcheck": 9, "custom_dict": [9, 12, 20], "min_freq": 9, "min_len": [9, 17], "max_len": 9, "40": [9, 12, 17], "dict_filt": 9, "_is_thai_and_not_num": 9, "initi": [9, 12, 16], "basic": [9, 18], "choos": [9, 10, 11, 12, 17], "give": [9, 17], "candid": 9, "Then": [9, 10, 19], "select": [9, 10, 17], "highest": [9, 10], "just": [9, 17], "without": [9, 11, 12, 15, 17, 26], "case": [9, 16], "assign": [9, 12], "everi": [9, 17], "around": [9, 16], "000": [9, 11], "minimum": [9, 10], "keep": [9, 12, 13], "func": [9, 10, 16], "filter": [9, 10, 12, 16], "non": [9, 17], "itemsview": 9, "current": [9, 12, 25], "instanc": [9, 10, 11, 17], "\u0e2b\u0e27\u0e32\u0e19": 9, "30": [9, 11, 17], "\u0e21\u0e30\u0e19\u0e32\u0e27": 9, "\u0e41\u0e2d\u0e1a": 9, "3223": 9, "dict_item": 9, "known": [9, 24], "thei": [9, 12, 17], "intersect": 9, "\u0e40\u0e1e\u0e22\u0e19": 9, "\u0e40\u0e1e\u0e25": 9, "\u0e40\u0e1e\u0e25\u0e07": 9, "\u0e22\u0e01\u0e44": 9, "\u0e44\u0e1f\u0e25": 9, "0006959172792052158": 9, "\u0e32\u0e23": [9, 17], "482306849763902e": 9, "05": [9, 13, 17], "freq": 9, "\u0e0d\u0e0d\u0e32": [9, 16], "3639": 9, "\u0e0d\u0e0a\u0e32": 9, "whose": 9, "decreas": 9, "method": [9, 15, 16], "exactli": 9, "one": [9, 10, 12, 15, 17, 19, 25], "itself": 9, "look": [9, 15, 25], "expand": 9, "And": 9, "still": 9, "fail": [9, 25], "\u0e0d\u0e2b\u0e32": 9, "\u0e15\u0e23\u0e20\u0e32\u0e1a": 9, "\u0e15\u0e23\u0e20\u0e32\u0e1e": 9, "default_spell_check": 9, "standard": [9, 17], "art": [9, 12], "ling": 9, "2007": 9, "how": [9, 15, 16, 25], "write": [9, 12, 17, 24, 26], "corrector": 9, "under": [10, 12, 25, 26], "hood": 10, "sent_token": [10, 12], "normal": [10, 11, 16, 17], "frequnci": 10, "less": [10, 24], "than": [10, 12], "greater": 10, "out": [10, 12, 16, 17, 19, 24], "final": 10, "pick": [10, 19], "sum": [10, 16], "appear": 10, "summari": 10, "effect": [10, 15], "refer": [10, 12], "mt5": [10, 25], "small": 10, "xl": 10, "xxl": 10, "cpe": 10, "kmutt": 10, "\u0e17\u0e33\u0e40\u0e19": 10, "\u0e22\u0e1a\u0e17": 10, "\u0e32\u0e0a": 10, "\u0e32\u0e07": [10, 11, 23], "\u0e2b\u0e23": [10, 11], "\u0e07\u0e16\u0e19\u0e19\u0e1e\u0e23\u0e30\u0e2d\u0e32\u0e17": 10, "\u0e15\u0e22": [10, 17], "\u0e07\u0e2d\u0e22": 10, "\u0e1a\u0e19\u0e16\u0e19\u0e19\u0e1e\u0e23\u0e30\u0e2d\u0e32\u0e17": 10, "\u0e40\u0e02\u0e15\u0e1e\u0e23\u0e30\u0e19\u0e04\u0e23": 10, "\u0e21\u0e40\u0e1b": 10, "\u0e32\u0e19\u0e02\u0e2d\u0e07\u0e40\u0e08": 10, "\u0e32\u0e1e\u0e23\u0e30\u0e22\u0e32\u0e21\u0e2b\u0e32\u0e42\u0e22\u0e18\u0e32": 10, "\u0e17\u0e2d\u0e40\u0e23": 10, "\u0e22\u0e30": 10, "\u0e04\u0e0a\u0e40\u0e2a\u0e19": 10, "\u0e15\u0e23\u0e40\u0e08": 10, "\u0e32\u0e1e\u0e23\u0e30\u0e22\u0e32\u0e21\u0e2b\u0e32\u0e42\u0e22\u0e18\u0e32\u0e19\u0e23\u0e32\u0e18": 10, "\u0e1a\u0e14": 10, "\u0e28\u0e23": 10, "\u0e22\u0e13\u0e23\u0e07\u0e04": 10, "\u0e1e\u0e0d\u0e32\u0e40\u0e08": 10, "\u0e19\u0e2a\u0e01": 10, "\u0e25\u0e04\u0e0a\u0e40\u0e2a\u0e19": 10, "\u0e40\u0e0a": [10, 11], "\u0e2d\u0e2a\u0e32\u0e22\u0e21\u0e2d\u0e0d": 10, "\u0e40\u0e08": 10, "\u0e19\u0e1b": [10, 17], "\u0e02\u0e2d\u0e07\u0e40\u0e08": 10, "\u0e32\u0e08\u0e2d\u0e21\u0e21\u0e32\u0e23\u0e14\u0e32\u0e01\u0e25": 10, "\u0e19\u0e43\u0e19\u0e1e\u0e23\u0e30\u0e1a\u0e32\u0e17\u0e2a\u0e21\u0e40\u0e14": 10, "\u0e08\u0e1e\u0e23\u0e30\u0e08\u0e2d\u0e21\u0e40\u0e01\u0e25": 10, "\u0e32\u0e40\u0e08": 10, "\u0e32\u0e2d\u0e22": [10, 11], "\u0e2b": [10, 11, 12, 15, 17], "\u0e41\u0e25\u0e30\u0e40\u0e1b": 10, "\u0e19\u0e21\u0e23\u0e14\u0e01\u0e15\u0e01\u0e17\u0e2d\u0e14\u0e21\u0e32\u0e16": 10, "\u0e32\u0e1a\u0e23\u0e21\u0e27\u0e07\u0e28": 10, "\u0e40\u0e18\u0e2d": [10, 11], "\u0e01\u0e23\u0e21\u0e1e\u0e23\u0e30\u0e19\u0e40\u0e23\u0e28\u0e23\u0e27\u0e23\u0e24\u0e17\u0e18": 10, "\u0e1e\u0e23\u0e30\u0e2d\u0e07\u0e04": 10, "\u0e32\u0e01\u0e24\u0e14\u0e32\u0e20": 10, "\u0e2b\u0e32\u0e23": 10, "\u0e2d\u0e21\u0e32\u0e43\u0e19\u0e23": 10, "\u0e0a\u0e2a\u0e21": 10, "\u0e22\u0e1e\u0e23\u0e30\u0e1a\u0e32\u0e17\u0e2a\u0e21\u0e40\u0e14": 10, "\u0e08\u0e1e\u0e23\u0e30\u0e08": 10, "\u0e25\u0e08\u0e2d\u0e21\u0e40\u0e01\u0e25": 10, "\u0e27\u0e42\u0e1b\u0e23\u0e14\u0e40\u0e01\u0e25": 10, "\u0e32\u0e2f": 10, "\u0e43\u0e2b": [10, 11], "\u0e2a\u0e23": [10, 17], "\u0e32\u0e07\u0e15\u0e33\u0e2b\u0e19": 10, "\u0e19\u0e17": [10, 11, 12, 17], "\u0e1b\u0e23\u0e30\u0e17": 10, "\u0e1a\u0e02\u0e2d\u0e07\u0e1e\u0e23\u0e30\u0e40\u0e08": 10, "\u0e01\u0e23\u0e21\u0e1e\u0e23\u0e30\u0e19\u0e40\u0e23\u0e28\u0e27\u0e23\u0e24\u0e17": 10, "\u0e18": [10, 15, 17], "\u0e41\u0e25\u0e30\u0e40\u0e08": 10, "\u0e32\u0e08\u0e2d\u0e21\u0e21\u0e32\u0e23\u0e14\u0e32": 10, "\u0e2d\u0e21\u0e32\u0e40\u0e23": 10, "\u0e22\u0e01\u0e2d\u0e32\u0e04\u0e32\u0e23\u0e2b\u0e25": 10, "\u0e01\u0e19": [10, 11], "\u0e15\u0e33\u0e2b\u0e19": 10, "\u0e01\u0e40\u0e14": 10, "extra_id_0": 10, "\u0e2f\u0e25\u0e2f": 10, "\u0e07\u0e19": [10, 17, 19], "\u0e2d\u0e22": [10, 11, 12, 16, 17], "\u0e25\u0e1b\u0e27": 10, "\u0e12\u0e19\u0e18\u0e23\u0e23\u0e21": 10, "\u0e16": [10, 11, 17, 24], "\u0e32\u0e1e": 10, "\u0e14\u0e16": 10, "\u0e07\u0e02\u0e19\u0e21\u0e2b\u0e27\u0e32\u0e19\u0e43\u0e19\u0e15\u0e33\u0e19\u0e32\u0e19\u0e17": 10, "\u0e19\u0e43\u0e08\u0e17": 10, "\u0e14\u0e41\u0e25": 10, "\u0e27\u0e25\u0e30\u0e01": 10, "\u0e2d\u0e07\u0e44\u0e21": 10, "\u0e33\u0e41\u0e02": 10, "\u0e07\u0e43\u0e2a": 10, "\u0e41\u0e19": 10, "\u0e46": [10, 17, 20], "\u0e40\u0e1e\u0e23\u0e32\u0e30\u0e27": [10, 11], "\u0e32\u0e40\u0e1b": 10, "\u0e19\u0e2d\u0e30\u0e44\u0e23\u0e17": 10, "\u0e19\u0e43\u0e08\u0e2a": 10, "\u0e14\u0e46": 10, "\u0e32\u0e41\u0e02": 10, "\u0e07\u0e43\u0e2a\u0e40\u0e1b": 10, "extract_keyword": 10, "keyphrase_ngram_rang": 10, "max_keyword": 10, "min_df": 10, "stop_word": 10, "relev": 10, "keyphras": 10, "document": [10, 16, 17, 26], "mai": [10, 11, 12, 17, 25, 26], "produc": 10, "complet": 10, "differ": [10, 11, 12, 24], "so": [10, 25], "care": [10, 17], "note": [10, 11, 12, 16, 17, 19, 25], "expens": 10, "repetit": [10, 16], "creat": [10, 11, 12, 13, 17, 24, 25, 26], "highli": 10, "recommend": [10, 25], "unit": [10, 11, 12, 17], "defin": [10, 12], "vari": 10, "w": [10, 12, 17, 23], "tokenizer_engin": 10, "\u0e40\u0e2a\u0e32": 10, "\u0e44\u0e1f\u0e1f": 10, "consecut": 10, "\u0e40\u0e2a\u0e32\u0e44\u0e1f\u0e1f": 10, "stop": 10, "ignor": [10, 17], "\u0e2d\u0e32\u0e2b\u0e32\u0e23": [10, 11], "\u0e2b\u0e21\u0e32\u0e22\u0e16": 10, "\u0e02\u0e2d\u0e07\u0e41\u0e02": 10, "\u0e07\u0e2b\u0e23": 10, "\u0e2d\u0e02\u0e2d\u0e07\u0e40\u0e2b\u0e25\u0e27": 10, "\u0e19\u0e2b\u0e23": 10, "\u0e21\u0e40\u0e02": 10, "\u0e32\u0e2a": [10, 17], "\u0e32\u0e07\u0e01\u0e32\u0e22\u0e41\u0e25": 10, "\u0e08\u0e30\u0e17\u0e33\u0e43\u0e2b": 10, "\u0e40\u0e01": [10, 11, 12, 17], "\u0e14\u0e1e\u0e25": 10, "\u0e07\u0e07\u0e32\u0e19\u0e41\u0e25\u0e30\u0e04\u0e27\u0e32\u0e21\u0e23": 10, "\u0e2d\u0e19\u0e41\u0e01": 10, "\u0e32\u0e07\u0e01\u0e32\u0e22": 10, "\u0e17\u0e33\u0e43\u0e2b": 10, "\u0e32\u0e07\u0e01\u0e32\u0e22\u0e40\u0e08\u0e23": 10, "\u0e0d\u0e40\u0e15": 10, "\u0e1a\u0e42\u0e15": 10, "\u0e2d\u0e21\u0e41\u0e0b\u0e21\u0e2a": 10, "\u0e27\u0e19\u0e17": 10, "\u0e01\u0e2b\u0e23\u0e2d": 10, "\u0e04\u0e27\u0e1a\u0e04": 10, "\u0e21\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e25": 10, "\u0e22\u0e19\u0e41\u0e1b\u0e25\u0e07\u0e15": 10, "\u0e32\u0e07\u0e46": [10, 11], "\u0e43\u0e19\u0e23": [10, 17], "\u0e27\u0e22\u0e17\u0e33\u0e43\u0e2b": 10, "\u0e2d\u0e27": [10, 12], "\u0e22\u0e27\u0e30\u0e15": 10, "\u0e17\u0e33\u0e07\u0e32\u0e19\u0e44\u0e14": 10, "\u0e32\u0e07\u0e1b\u0e01\u0e15": 10, "\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e08\u0e30\u0e15": 10, "\u0e29\u0e41\u0e25\u0e30\u0e44\u0e21": 10, "\u0e14\u0e42\u0e17\u0e29\u0e15": 10, "\u0e2d\u0e23": 10, "\u0e22\u0e19\u0e41\u0e1b\u0e25\u0e07": 10, "\u0e29\u0e41\u0e25\u0e30": 10, "\u0e14\u0e42\u0e17\u0e29": 10, "minim": 10, "re": [10, 17], "implement": [10, 12, 17], "leverag": 10, "embed": [10, 16], "maartengr": 10, "airesearch": [10, 14], "att": [10, 18], "uncas": [10, 18], "return_similar": 10, "kb": 10, "3228477063109462": 10, "31320597838000375": 10, "29115434699705506": 10, "2678430841321016": 10, "24996827960821494": 10, "23876962942443258": 10, "23191285218852364": 10, "22425422716846247": 10, "22162962875299588": 10, "20773497763458507": 10, "emb": [10, 16], "ndarrai": [10, 16, 19], "averag": [10, 11, 16], "last": 10, "hidden": [10, 17], "layer": 10, "mark": [11, 12, 17, 24], "linguist": [11, 19], "annot": 11, "ne": 11, "three": 11, "lst20": 11, "tabl": 11, "\u0e43\u0e2b\u0e21": [11, 16], "\u0e40\u0e28\u0e29": 11, "\u0e21\u0e32\u0e01": [11, 17], "adp": 11, "adposit": 11, "\u0e41\u0e21": [11, 19], "\u0e02\u0e2d\u0e07": [11, 12], "\u0e2a\u0e33\u0e2b\u0e23": 11, "adv": 11, "\u0e40\u0e25": [11, 12], "\u0e40\u0e25\u0e22": 11, "aux": 11, "auxiliari": 11, "\u0e32\u0e22": [11, 17, 19], "cconj": 11, "coordin": 11, "conjunct": 11, "det": 11, "determin": 11, "\u0e2b\u0e25\u0e32\u0e22": 11, "intj": 11, "interject": 11, "\u0e01\u0e33\u0e21": 11, "\u0e1e\u0e27\u0e01": 11, "\u0e2a\u0e19\u0e32\u0e21": 11, "\u0e2c\u0e32": 11, "\u0e0d\u0e0a": 11, "num": 11, "numer": [11, 12, 17], "103": 11, "2004": 11, "\u0e2b\u0e19": [11, 15, 16, 17], "particl": 11, "\u0e21\u0e32": [11, 17], "pronoun": 11, "\u0e27\u0e40\u0e2d\u0e07": 11, "\u0e43\u0e04\u0e23": 11, "propn": 11, "proper": 11, "\u0e42\u0e2d\u0e1a\u0e32\u0e21\u0e32": 11, "\u0e41\u0e04\u0e1b": 11, "\u0e15\u0e2d\u0e25\u0e2e": 11, "\u0e42\u0e2d\u0e1e": 11, "\u0e44\u0e21\u0e40\u0e04": 11, "punct": 11, "punctuat": [11, 17], "sconj": 11, "subordin": 11, "\u0e2b\u0e32\u0e01": 11, "\u0e40\u0e1c\u0e0a": 11, "nprp": 11, "\u0e19\u0e42\u0e14\u0e27\u0e2a": 11, "\u0e42\u0e04\u0e42\u0e23\u0e19": 11, "\u0e42\u0e04": 11, "ncnm": 11, "cardin": 11, "\u0e2a\u0e2d\u0e07": [11, 17], "\u0e2a\u0e32\u0e21": 11, "nonm": 11, "ordin": 11, "nlbl": 11, "b": [11, 16, 17], "\u0e2d\u0e32\u0e04\u0e32\u0e23": 11, "nttl": 11, "titl": [11, 12], "\u0e1e\u0e25\u0e40\u0e2d\u0e01": 11, "person": [11, 12], "\u0e13": [11, 12, 14], "pdmn": 11, "demonstr": 11, "pntr": 11, "interrog": 11, "\u0e2d\u0e30\u0e44\u0e23": 11, "\u0e32\u0e07\u0e44\u0e23": 11, "prel": 11, "vact": 11, "\u0e2d\u0e07\u0e40\u0e1e\u0e25\u0e07": 11, "stativ": 11, "\u0e40\u0e2b": [11, 15], "vatt": 11, "\u0e2a\u0e27\u0e22": 11, "xvbm": 11, "\u0e2d\u0e1a": [11, 23], "\u0e01\u0e33\u0e25": 11, "xvam": 11, "after": [11, 12, 16, 17], "xvmm": 11, "\u0e04\u0e27\u0e23": [11, 23], "\u0e40\u0e04\u0e22": 11, "xvbb": 11, "imper": 11, "mood": 11, "\u0e13\u0e32": 11, "\u0e08\u0e07": 11, "\u0e32\u0e21": 11, "xvae": 11, "post": [11, 12, 14, 16], "ddan": 11, "definit": [11, 20], "classifi": 11, "\u0e42\u0e19": 11, "ddac": 11, "allow": [11, 12], "ddbq": 11, "preced": 11, "quantit": 11, "express": [11, 12, 24, 26], "ddaq": 11, "\u0e1e\u0e2d\u0e14": 11, "diac": 11, "indefinit": 11, "\u0e44\u0e2b\u0e19": 11, "dibq": 11, "\u0e1a\u0e32\u0e07": 11, "\u0e1b\u0e23\u0e30\u0e21\u0e32\u0e13": 11, "diaq": 11, "dcnm": 11, "donm": 11, "\u0e14\u0e17": 11, "\u0e2a\u0e22": 11, "advn": 11, "\u0e33\u0e40\u0e2a\u0e21\u0e2d": 11, "advi": 11, "\u0e27\u0e46": 11, "\u0e40\u0e2a\u0e17\u0e2d\u0e46": 11, "\u0e32\u0e46": 11, "advp": 11, "prefix": [11, 17], "\u0e42\u0e14\u0e22\u0e40\u0e23": 11, "sententi": 11, "\u0e42\u0e14\u0e22\u0e1b\u0e01\u0e15": 11, "\u0e18\u0e23\u0e23\u0e21\u0e14\u0e32": 11, "cnit": 11, "cltv": 11, "collect": [11, 12, 16, 17], "\u0e01\u0e25": 11, "\u0e1d": [11, 19], "\u0e17\u0e32\u0e07": 11, "\u0e41\u0e1a\u0e1a": 11, "cmtr": 11, "\u0e42\u0e25\u0e01\u0e23": 11, "\u0e41\u0e01": 11, "\u0e27\u0e42\u0e21\u0e07": 11, "cfqc": 11, "\u0e40\u0e17": 11, "\u0e22\u0e27": 11, "cvbl": 11, "verbal": 11, "jcrg": 11, "jcmp": 11, "compar": [11, 19], "\u0e32\u0e01": 11, "jsbr": 11, "\u0e2d\u0e07\u0e08\u0e32\u0e01": 11, "rpre": 11, "preposit": 11, "\u0e08\u0e32\u0e01": 11, "\u0e25\u0e30": 11, "\u0e43\u0e15": [11, 19], "fixn": 11, "nomin": 11, "\u0e04\u0e27\u0e32\u0e21": [11, 12], "\u0e2a\u0e19": 11, "\u0e19\u0e2a\u0e19\u0e32\u0e19": 11, "fixv": 11, "adverbi": 11, "eaff": 11, "affirm": 11, "\u0e30": 11, "\u0e19\u0e30": 11, "\u0e40\u0e16\u0e2d\u0e30": 11, "eitt": 11, "\u0e40\u0e2b\u0e23\u0e2d": 11, "\u0e44\u0e2b\u0e21": 11, "punc": 11, "thu": 11, "corespond": 11, "aj": 11, "av": 11, "ax": 11, "cl": 11, "fx": 11, "ij": 11, "nn": 11, "nu": 11, "pa": 11, "pr": 11, "pu": 11, "vv": 11, "xx": [11, 14], "insid": 11, "outsid": 11, "beggin": 11, "iob": [11, 18], "chunk": [11, 12], "intermedi": 11, "o": [11, 15], "doe": [11, 12, 13, 16, 17, 24, 25], "belong": 11, "\u0e1a\u0e32\u0e23": 11, "\u0e42\u0e2d\u0e1a\u0e32\u0e21\u0e32\u0e40\u0e1b": 11, "\u0e19\u0e1b\u0e23\u0e30\u0e18\u0e32\u0e19\u0e18": 11, "\u0e1b\u0e14": 11, "would": [11, 12, 24], "\u0e1b\u0e23\u0e30\u0e18\u0e32\u0e19\u0e32\u0e18": 11, "respect": [11, 19], "date": [11, 12, 17], "21": [11, 12, 17], "16": 11, "time": [11, 12, 17, 25], "email": [11, 12], "info": [11, 23], "nrpsc": 11, "\u0e42\u0e25\u0e40\u0e21\u0e15\u0e23": 11, "\u0e01\u0e21": 11, "locat": [11, 12, 13, 17, 25], "\u0e44\u0e17\u0e22": [11, 15, 19], "\u0e1b\u0e23\u0e32\u0e08": 11, "\u0e01\u0e33\u0e41\u0e1e\u0e07\u0e40\u0e1e\u0e0a\u0e23": 11, "organ": [11, 12], "\u0e01\u0e23\u0e21\u0e27": 11, "\u0e17\u0e22\u0e32\u0e28\u0e32\u0e2a\u0e15\u0e23": 11, "\u0e01\u0e32\u0e23\u0e41\u0e1e\u0e17\u0e22": 11, "\u0e08\u0e23": 11, "\u0e19\u0e32\u0e07\u0e1b\u0e23\u0e30\u0e19\u0e2d\u0e21": 11, "\u0e17\u0e2d\u0e07\u0e08": 11, "phone": [11, 12], "1200": 11, "2670": 11, "8888": 11, "bangkokhealth": 11, "zip": 11, "10400": 11, "11130": 11, "monei": [11, 17], "\u0e32\u0e19\u0e1a\u0e32\u0e17": 11, "\u0e1a\u0e32\u0e17": [11, 12, 17], "law": [11, 12, 26], "\u0e42\u0e23\u0e04\u0e23\u0e30\u0e1a\u0e32\u0e14": 11, "2499": 11, "\u0e10\u0e18\u0e23\u0e23\u0e21\u0e19": 11, "pos_tag": 11, "It": [11, 12, 14, 17, 24, 25], "chang": [11, 12, 17], "academ": 11, "articl": 11, "orchid_ud": 11, "blackboard": [11, 12], "treebank": [11, 12], "blackboard_ud": 11, "universaldepend": 11, "pud": 11, "parallel": 11, "nativ": [11, 17, 24], "\u0e23\u0e2d\u0e14": 11, "\u0e43\u0e19": [11, 17, 23], "\u0e2b\u0e25\u0e1a\u0e20": 11, "\u0e19\u0e32\u0e22\u0e01": [11, 19], "\u0e40\u0e0a\u0e2d\u0e23": 11, "\u0e32\u0e2d": 11, "\u0e08\u0e33\u0e19\u0e27\u0e19": [11, 17], "\u0e02\u0e32": 11, "equal": [11, 15], "pos_tag_s": 11, "\u0e19\u0e01": [11, 16, 19], "tag_provinc": 11, "recogn": 11, "reutrn": 11, "ner": [11, 12, 18], "\u0e2b\u0e19\u0e2d\u0e07\u0e04\u0e32\u0e22": 11, "chunk_pars": 11, "crf": [11, 12], "orchidpp": 11, "pars": [11, 21, 25], "phrase": [11, 12], "structur": 11, "tokens_po": 11, "np": 11, "thainer": [11, 18, 23], "load_engin": 11, "entitii": [11, 18], "associ": [11, 18], "\u0e17\u0e14\u0e2a\u0e2d\u0e1a\u0e19\u0e32\u0e22\u0e27\u0e23\u0e23\u0e13\u0e1e\u0e07\u0e29": 11, "\u0e17\u0e17": 11, "\u0e22\u0e44\u0e1e\u0e1a": 11, "\u0e25\u0e22": 11, "\u0e17\u0e14\u0e2a\u0e2d\u0e1a": 11, "\u0e19\u0e32\u0e22": 11, "\u0e27\u0e23\u0e23\u0e13": [11, 23], "\u0e1e\u0e07\u0e29": 11, "\u0e44\u0e1e\u0e1a": 11, "\u0e19\u0e32\u0e22\u0e27\u0e23\u0e23\u0e13\u0e1e\u0e07\u0e29": 11, "nner": 11, "thai_nner": 11, "nest": 11, "recognit": [11, 18, 25], "named_ent": [11, 12], "\u0e41\u0e21\u0e27\u0e17\u0e33\u0e2d\u0e30\u0e44\u0e23\u0e15\u0e2d\u0e19\u0e2b": 11, "\u0e32\u0e42\u0e21\u0e07\u0e40\u0e0a": 11, "\u0e15\u0e2d\u0e19": 11, "\u0e42\u0e21\u0e07": 11, "span": 11, "entity_typ": 11, "thainametagg": [11, 18], "defualt": 11, "thainer14": 11, "get_ner": [11, 18], "15": [11, 16, 17, 19], "61": 11, "\u0e17\u0e14\u0e2a\u0e2d\u0e1a\u0e23\u0e30\u0e1a\u0e1a\u0e40\u0e27\u0e25\u0e32": 11, "49": 11, "To": 11, "exclud": [11, 17], "\u0e23\u0e30\u0e1a\u0e1a": 11, "\u0e40\u0e27\u0e25\u0e32": [11, 17], "\u0e40\u0e02\u0e32\u0e40\u0e23": 11, "\u0e22\u0e19\u0e17": 11, "\u0e22\u0e19\u0e19\u0e32\u0e07\u0e23\u0e2d\u0e07": 11, "l": [11, 17, 18], "\u0e19\u0e32\u0e07\u0e23\u0e2d\u0e07": 11, "account": 11, "virach": 11, "sornlertlamvanich": 11, "naoto": 11, "takahashi": 11, "hitoshi": 11, "isahara": 11, "2000": [11, 12], "build": [11, 20, 25], "Of": [11, 23], "journal": [11, 15], "acoust": 11, "vol": 11, "20": [11, 14], "pp": [11, 12], "189": 11, "198": 11, "1999": 11, "prachya": 11, "boonkwan": 11, "vorapon": 11, "luantangsrisuk": 11, "sitthaa": 11, "phaholphinyo": 11, "kanyanat": 11, "kriengket": 11, "dhanon": 11, "leenoi": 11, "charun": 11, "phrombut": 11, "monthika": 11, "boriboon": 11, "krit": 11, "kosawat": 11, "thepchai": 11, "supnithi": 11, "2020": [11, 12], "guidelin": 11, "arxiv": [11, 18], "2008": 11, "05055": 11, "multipl": [12, 16, 17, 19], "desir": 12, "clause_token": 12, "claus": 12, "split": 12, "claue": 12, "\u0e19\u0e2d\u0e19": 12, "\u0e2d\u0e16": [12, 17], "\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21": 12, "keep_whitespac": 12, "among": 12, "newlin": [12, 16, 17], "splite": 12, "ted": 12, "thaisum": 12, "nakhun": 12, "chumpolsathien": 12, "wtp": 12, "wtpsplitax": 12, "mani": [12, 17], "mini": 12, "tini": 12, "canin": 12, "1l": 12, "12l": 12, "specifiaclli": 12, "regex": 12, "pattern": 12, "sentence_1": 12, "\u0e19\u0e44\u0e1b\u0e1b\u0e23\u0e30\u0e0a": 12, "\u0e21\u0e40\u0e21": 12, "\u0e19\u0e32\u0e04\u0e21": [12, 17], "sentence_2": 12, "\u0e32\u0e23\u0e32\u0e0a\u0e01\u0e32\u0e23\u0e44\u0e14": 12, "\u0e1a\u0e01\u0e32\u0e23\u0e2b\u0e21": 12, "\u0e19\u0e40\u0e27": 12, "\u0e22\u0e19\u0e40\u0e1b": 12, "\u0e19\u0e23\u0e30\u0e22\u0e30": 12, "\u0e41\u0e25\u0e30\u0e44\u0e14": 12, "\u0e1a\u0e21\u0e2d\u0e1a\u0e2b\u0e21\u0e32\u0e22\u0e43\u0e2b": 12, "\u0e1b\u0e23\u0e30\u0e08\u0e33\u0e43\u0e19\u0e23\u0e30\u0e14": 12, "\u0e1a\u0e20": 12, "\u0e20\u0e32\u0e04": 12, "n\u0e41\u0e25\u0e30\u0e44\u0e14": 12, "\u0e41\u0e25\u0e30\u0e40\u0e02\u0e32\u0e44\u0e14": 12, "paragraph_token": 12, "paragraph_threshold": 12, "\u0e1a\u0e17\u0e04\u0e27\u0e32\u0e21\u0e19": 12, "\u0e22\u0e19\u0e2a": 12, "\u0e07\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b": 12, "\u0e19\u0e21\u0e32\u0e08\u0e32\u0e01\u0e1c\u0e25\u0e07\u0e32\u0e19\u0e27": 12, "\u0e22\u0e17": 12, "\u0e40\u0e04\u0e22\u0e17\u0e33\u0e21\u0e32\u0e43\u0e19\u0e2d\u0e14": 12, "\u0e17\u0e33\u0e01\u0e32\u0e23\u0e28": 12, "\u0e01\u0e29\u0e32\u0e04": 12, "\u0e19\u0e04\u0e27": 12, "\u0e32\u0e43\u0e2b\u0e21": 12, "\u0e32\u0e07\u0e01\u0e27": 12, "\u0e32\u0e07\u0e02\u0e27\u0e32\u0e07\u0e41\u0e15": 12, "\u0e32\u0e07\u0e43\u0e14": 12, "\u0e07\u0e43\u0e04\u0e23": 12, "\u0e02\u0e2d\u0e2d\u0e20": 12, "\u0e22\u0e43\u0e19\u0e04\u0e27\u0e32\u0e21\u0e1a\u0e01\u0e1e\u0e23": 12, "\u0e2d\u0e07\u0e17": [12, 23], "\u0e07\u0e1b\u0e27\u0e07\u0e21\u0e32": 12, "subword_token": 12, "insepar": 12, "contigu": 12, "separ": [12, 23], "further": 12, "\u0e08\u0e30": 12, "\u0e1d\u0e32": 12, "appli": [12, 15, 16, 17], "rule": [12, 15, 16, 17, 24], "smallest": 12, "\u0e02\u0e19\u0e21\u0e0a": 12, "enhanc": 12, "inrut": 12, "et": 12, "2001": 12, "ssg": [12, 25], "theeramunkong": 12, "tcc_p": 12, "sentencepiec": [12, 18], "text_1": 12, "\u0e04\u0e40\u0e23": 12, "\u0e21\u0e41\u0e23\u0e01\u0e02\u0e2d\u0e07": 12, "\u0e23\u0e32\u0e0a\u0e27\u0e07\u0e28": 12, "\u0e2b\u0e21": [12, 17, 23], "text_2": 12, "\u0e04\u0e27\u0e32\u0e21\u0e41\u0e1b\u0e25\u0e01\u0e41\u0e22\u0e01\u0e41\u0e25\u0e30\u0e1e": 12, "\u0e12\u0e19\u0e32\u0e01\u0e32\u0e23": 12, "\u0e41\u0e23": 12, "\u0e23\u0e32": [12, 15], "\u0e27\u0e32": 12, "\u0e41\u0e1b": 12, "\u0e41\u0e22": 12, "\u0e12": [12, 19], "\u0e19\u0e32": 12, "\u0e04\u0e27\u0e32\u0e21\u0e41\u0e1b\u0e25\u0e01\u0e41\u0e22\u0e01\u0e41\u0e25\u0e30": 12, "\u0e19\u0e32\u0e01\u0e32\u0e23": 12, "\u0e21\u0e41\u0e23\u0e01": 12, "\u0e41\u0e1b\u0e25\u0e01": [12, 17], "\u0e41\u0e22\u0e01": 12, "join_broken_num": 12, "omit": 12, "rejoin": 12, "wrongli": 12, "learn": [12, 15, 16], "intern": [12, 13, 15, 25, 26], "compon": [12, 15, 25], "unicod": [12, 15, 17, 25], "mm": 12, "multi": [12, 24], "cut": 12, "maxim": 12, "boundari": 12, "same": 12, "safe": 12, "mechan": 12, "avoid": 12, "long": [12, 17], "continu": 12, "ambigu": 12, "break": 12, "point": [12, 17], "adapt": 12, "rust": 12, "5x": 12, "faster": 12, "domain": [12, 26], "stack": 12, "sefr": 12, "ensembl": 12, "refin": 12, "colloc": 12, "\u0e42\u0e2d\u0e40\u0e04\u0e1a": [12, 24], "\u0e1e\u0e27\u0e01\u0e40\u0e23\u0e32\u0e23": 12, "\u0e01\u0e20\u0e32\u0e29\u0e32\u0e1a": 12, "\u0e32\u0e19\u0e40\u0e01": 12, "\u0e42\u0e2d\u0e40\u0e04": [12, 24], "\u0e20\u0e32\u0e29\u0e32": [12, 24], "\u0e27\u0e23\u0e23\u0e13\u0e01\u0e23\u0e23\u0e21": 12, "\u0e20\u0e32\u0e1e\u0e27\u0e32\u0e14": 12, "\u0e41\u0e25\u0e30\u0e01\u0e32\u0e23\u0e41\u0e2a\u0e14\u0e07\u0e07": 12, "\u0e01\u0e32\u0e23\u0e41\u0e2a\u0e14\u0e07": 12, "join": [12, 13], "broken": 12, "decim": [12, 17], "ip": 12, "address": 12, "\u0e40\u0e07": 12, "\u0e191": 12, "234\u0e1a\u0e32\u0e1719": 12, "32\u0e19": 12, "127": 12, "234": 12, "\u0e19\u0e42\u0e0b": 12, "\u0e2d\u0e32\u0e40\u0e1a\u0e30": 12, "\u0e19\u0e22\u0e32\u0e22\u0e19": 12, "\u0e42\u0e0b": 12, "\u0e2d\u0e32": [12, 17], "\u0e40\u0e1a\u0e30": 12, "custom_dict_japanese_nam": 12, "add": [12, 16, 17, 19], "dict_sourc": [12, 17], "word_detoken": 12, "detoken": 12, "along": 12, "encapsul": 12, "them": [12, 17, 24, 25], "singl": [12, 19], "instanti": 12, "custom_words_list": 12, "\u0e2d\u0e30\u0e40\u0e1f\u0e40\u0e0b": 12, "aphasia": 12, "\u0e19\u0e2d\u0e32\u0e01\u0e32\u0e23\u0e1c": 12, "\u0e14\u0e1b\u0e01\u0e15": 12, "\u0e02\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e1e": 12, "_token": 12, "\u0e2d\u0e32\u0e01\u0e32\u0e23": 12, "\u0e2d\u0e30": 12, "\u0e40\u0e1f\u0e40\u0e0b": 12, "explicitli": 12, "path_to_custom_dictionari": 12, "custom_dictionari": 12, "txtt": 12, "encod": [12, 16, 17], "utf": [12, 17], "f": [12, 17], "naphasia": 12, "n\u0e1c": 12, "n\u0e1b\u0e01\u0e15": 12, "init": 12, "\u0e1b\u0e01\u0e15": 12, "set_tokenizer_engin": 12, "\u0e19\u0e2d\u0e32\u0e01\u0e32\u0e23": 12, "vocaburai": 12, "main": 12, "set_tokenize_engin": 12, "condit": [12, 26], "random": 12, "field": [12, 17, 24], "accuraci": 12, "87": 12, "state": 12, "zhou": 12, "2016": [12, 21, 26], "aclweb": 12, "anthologi": 12, "c16": 12, "1031": 12, "82": 12, "notebook": [12, 16, 18, 21, 26], "vistec": [12, 14, 18], "ted_crawl": 12, "due": [12, 17], "unreli": 12, "extract_featur": 12, "window": [12, 19, 25], "max_n_gram": 12, "extract": 12, "slide": 12, "n_gram": 12, "gram": 12, "fed": 12, "origin": [12, 17], "nakhunchumpolsathien": 12, "mastersthesi": 12, "chumpolsathien_2020": 12, "distil": 12, "keyword": 12, "neural": 12, "lingual": 12, "summar": [12, 21, 25], "author": 12, "year": [12, 17], "school": 12, "beij": 12, "institut": [12, 14, 15, 18], "technologi": [12, 14], "copyright": [12, 26], "apach": [12, 21, 26], "except": [12, 26], "complianc": [12, 26], "obtain": [12, 17, 19, 26], "unless": [12, 26], "applic": [12, 26], "agre": [12, 26], "softwar": [12, 21, 26], "distribut": [12, 17, 25, 26], "AS": [12, 26], "basi": [12, 24, 26], "warranti": [12, 26], "OR": [12, 26], "OF": [12, 26], "either": [12, 19, 26], "impli": [12, 26], "govern": [12, 13, 26], "permiss": [12, 25, 26], "limit": [12, 26], "list_to_str": 12, "middle_cut": 12, "thaisentencesegmentor": 12, "split_into_sent": 12, "ismiddlecut": 12, "fast": [12, 16, 25], "reason": 12, "accur": [12, 17, 25], "repositori": 12, "attacuttoken": 12, "sc": 12, "librari": [12, 17, 21, 24, 25], "1d": 12, "convolut": 12, "instal": [12, 19, 21], "tensorflow": 12, "themselv": [12, 17], "facebook": [12, 14], "gist": 12, "latticestr": 12, "in_dict": 12, "mmcut": 12, "default_word_dict_tri": 12, "find_all_seg": 12, "variat": 12, "load_dict": 12, "file_path": 12, "dict_nam": 12, "memori": 12, "throught": 12, "overrid": 12, "uniqu": 12, "_67a47bf9": 12, "safe_mod": 12, "parallel_mod": 12, "bind": 12, "reduc": 12, "chanc": 12, "multithread": 12, "mode": [12, 25], "patorn": 12, "utenpattanun": 12, "longestmatchtoken": 12, "breakiter": 12, "wannaphong": [12, 15, 21], "phatthiyaphaibun": [12, 21], "taglist": 12, "parm": 12, "ws1000": 12, "framework": 12, "baselin": 12, "2021": [12, 18], "heurist": [12, 17], "exponenti": 12, "wait": 12, "colab": [12, 18], "research": [12, 14, 18, 24], "googl": [12, 18], "fileid": 12, "1v1z657_5eswpo8rlfvrwa0a5e4vkg7si": 12, "drive": 12, "14ibg": 12, "ngzxj15rkwjnwozlot32fqborbx": 12, "scrollto": 12, "myz7nzar7dmw": 12, "accorind": 12, "purpos": 12, "jakkrit": 12, "techo": 12, "grammar": 12, "wittawat": 12, "jitkrittum": 12, "link": [12, 17], "tcc_po": 12, "automodul": 12, "reli": [12, 17], "1utqgxxmrxor9jp1b1jcq1frbnvorhtbq": 12, "jeeragon": 12, "patiroop": 12, "yuanghirun": 12, "sarayut": 12, "paludkong": 12, "supot": 12, "nitsuwat": 12, "para": 12, "limmaneepraserth": 12, "forward": 12, "backward": 12, "symposium": 12, "commun": 12, "iscit": 12, "37": 12, "concept": 12, "present": 12, "miscellan": 13, "get_full_data_path": 13, "full": [13, 17, 25], "get_pythainlp_data_path": 13, "where": [13, 16, 17, 24, 25], "environ": [13, 25], "variabl": [13, 25], "pythainlp_data_dir": [13, 25], "get_pythainlp_path": 13, "misspel": 13, "ratio": 13, "simul": 13, "some": [13, 23, 25], "mispel": 13, "per": 13, "100": [13, 14, 17], "\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\u0e1b\u0e23\u0e32\u0e01\u0e0f\u0e04\u0e23": 13, "\u0e07\u0e41\u0e23\u0e01\u0e43\u0e19\u0e1e": 13, "\u0e17\u0e18\u0e28": 13, "\u0e01\u0e23\u0e32\u0e0a": 13, "1826": 13, "\u0e07\u0e41\u0e23\u0e01\u0e43\u0e19\u0e01": 13, "1727": 13, "machin": [14, 25], "src_lang": 14, "target_lang": 14, "use_gpu": 14, "target": [14, 17], "gpu": [14, 18], "zh": [14, 15], "chines": [14, 24], "fr": 14, "french": [14, 24], "th2en": 14, "\u0e19\u0e23": 14, "\u0e01\u0e41\u0e21\u0e27": 14, "love": 14, "small100": 14, "cover": 14, "en_th": 14, "download_model_al": 14, "advanc": [14, 25], "enthtransl": 14, "depa": [14, 18], "websit": [14, 21], "releas": [14, 26], "enth": 14, "thentransl": 14, "zh_th": 14, "thzhtranslat": 14, "lalita": [14, 21], "marianmt": 14, "zh_cn": 14, "builder": 14, "lalitadeelert": 14, "mt": 14, "zhth": 14, "web": 14, "aibuildersx": 14, "166736255494822": 14, "thzh": 14, "\u0e01\u0e04": 14, "\u6211\u7231\u4f60": 14, "zhthtranslat": 14, "\u0e13\u0e19\u0e30": 14, "th_fr": 14, "thfrtranslat": 14, "helsinki": 14, "opu": 14, "group": [14, 18], "bleu": 14, "co": 14, "thfr": 14, "\u0e17\u0e14\u0e2a\u0e2d\u0e1a\u0e23\u0e30\u0e1a\u0e1a": 14, "du": 14, "syst\u00e8m": 14, "turn": 15, "put": [15, 17], "simpli": [15, 17], "fallback_engin": 15, "render": 15, "latin": 15, "alphabet": [15, 17, 25], "system": [15, 17, 24, 25], "transcript": [15, 17], "rtg": [15, 17], "offici": 15, "publish": 15, "\u0e16\u0e2d\u0e14\u0e40\u0e2a": 15, "\u0e22\u0e07\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\u0e40\u0e1b": 15, "\u0e19\u0e2d": [15, 17], "\u0e01\u0e29\u0e23\u0e25\u0e30\u0e15": 15, "One": 15, "thai2rom_onnx": 15, "lookup": 15, "more": [15, 17, 20, 25, 26], "issu": [15, 24], "deep": 15, "pytorch": 15, "onnx": 15, "runtim": 15, "compil": [15, 25], "\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16": [15, 17], "samant": 15, "samat": 15, "\u0e20\u0e32\u0e1e\u0e22\u0e19\u0e15\u0e23": 15, "phapn": 15, "phapphayon": 15, "\u0e2d\u0e1b\u0e1b": 15, "pronounc": 15, "graphem": 15, "phonem": [15, 17], "pyicu": [15, 25], "epitran": 15, "tltk_g2p": 15, "11940": 15, "tltk_ipa": 15, "\u0101m\u0101rt": 15, "h": [15, 17], "sa\u02d0ma\u02d0rot": 15, "sa\u02d05": 15, "ma\u02d0t3": 15, "saa4": 15, "maat2": 15, "h\u0101phyntr": 15, "p\u02b0a\u02d0pjanot": 15, "p\u02b0": 15, "j": [15, 17], "pronunci": [15, 17], "w2p": 15, "letter": [15, 24], "\u0e2a\u0e32": 15, "\u0e21\u0e32\u0e14": 15, "\u0e1e\u0e32\u0e1a": 15, "\u0e1e\u0e30": 15, "puan": 15, "show_pronunci": 15, "spooner": 15, "\u0e19\u0e32\u0e23": 15, "\u0e19\u0e23\u0e32": 15, "wunsen": 15, "wunsentransliter": 15, "japanes": [15, 24], "korean": 15, "mandarin": 15, "vietnames": 15, "jp_input": 15, "zh_sandhi": 15, "third": 15, "sandhi": 15, "jp": 15, "hepburn": 15, "ko": [15, 17], "vi": 15, "script": [15, 17], "hanyu": 15, "pinyin": 15, "diacrit": 15, "macron": 15, "ors61": 15, "\u0e01\u0e40\u0e01\u0e13\u0e11": 15, "\u0e01\u0e32\u0e23\u0e17": 15, "\u0e1a\u0e28": 15, "\u0e1e\u0e17": 15, "\u0e20\u0e32\u0e29\u0e32\u0e0d": 15, "\u0e2a\u0e33\u0e19": 15, "\u0e01\u0e07\u0e32\u0e19\u0e23\u0e32\u0e0a\u0e1a": 15, "\u0e13\u0e11": 15, "\u0e15\u0e22\u0e2a\u0e20\u0e32": 15, "2561": 15, "ri35": 15, "\u0e23\u0e32\u0e0a\u0e1a": 15, "\u0e15\u0e22\u0e2a\u0e16\u0e32\u0e19": 15, "2535": 15, "ri49": 15, "\u0e20\u0e32\u0e29\u0e32\u0e08": 15, "2549": 15, "thc43": 15, "\u0e40\u0e01\u0e13\u0e11": 15, "\u0e01\u0e32\u0e23\u0e16": 15, "\u0e32\u0e22\u0e17\u0e2d\u0e14\u0e40\u0e2a": 15, "\u0e22\u0e07\u0e20\u0e32\u0e29\u0e32\u0e08": 15, "\u0e19\u0e41\u0e21\u0e19\u0e14\u0e32\u0e23": 15, "\u0e27\u0e22\u0e2d": 15, "\u0e01\u0e02\u0e23\u0e27": 15, "\u0e04\u0e13\u0e30\u0e01\u0e23\u0e23\u0e21\u0e01\u0e32\u0e23\u0e2a": 15, "\u0e19\u0e1b\u0e23\u0e30\u0e27": 15, "\u0e28\u0e32\u0e2a\u0e15\u0e23": 15, "\u0e44\u0e17\u0e22\u0e43\u0e19\u0e40\u0e2d\u0e01\u0e2a\u0e32\u0e23": 15, "2543": 15, "wt": 15, "ohay\u014d": 15, "\u0e42\u0e2d\u0e2e\u0e32\u0e42\u0e22": 15, "ohay": 15, "\u0e42\u0e2d\u0e30\u0e2e\u0e30\u0e42\u0e22": 15, "annyeonghaseyo": 15, "\u0e19\u0e19\u0e22": 15, "\u0e2d\u0e07\u0e2e\u0e32\u0e40\u0e0b\u0e42\u0e22": 15, "xin": 15, "ch\u00e0o": 15, "\u0e32\u0e27": 15, "ni3": 15, "hao3": 15, "internaiton": 15, "trans_list": 15, "xsampa_list": 15, "nitaya": 15, "kanchanawan": 15, "2006": 15, "global": 15, "fine": 16, "tune": 16, "classif": [16, 17, 24, 25], "thaitoken": 16, "frozen": 16, "fastai": 16, "basetoken": 16, "transform": [16, 17, 18, 20], "static": 16, "dictonari": 16, "meth": 16, "\u0e2d\u0e32\u0e20\u0e23\u0e13": 16, "\u0e19\u0e15\u0e21\u0e22\u0e1b": 16, "\u0e20\u0e32\u0e27\u0e19\u0e32\u0e21\u0e22\u0e1b": 16, "\u0e15\u0e21": 16, "add_special_cas": 16, "tok": 16, "document_vector": 16, "agg": 16, "400": [16, 17], "dimens": [16, 19], "bunch": 16, "learner": 16, "aggreg": [16, 19], "avial": 16, "numpi": [16, 19], "arrai": [16, 19], "document_vectorr": 16, "load_data": 16, "thwiki_lm_data": 16, "pkl": 16, "language_model_learn": 16, "config": [16, 25], "emb_sz": 16, "n_hid": 16, "1550": 16, "n_layer": 16, "pad_token": 16, "qrnn": 16, "tie_weight": 16, "out_bia": 16, "output_p": 16, "hidden_p": 16, "input_p": 16, "embed_p": 16, "weight_p": 16, "trn_arg": 16, "drop_mult": 16, "clip": 16, "12": [16, 17], "alpha": 16, "beta": 16, "awd_lstm": 16, "\u0e19\u0e19": 16, "\u0e19\u0e14": [16, 17], "jupyt": 16, "fix_html": 16, "anbsp": 16, "amp": 16, "nbsp": 16, "lowercase_al": 16, "lowercas": 16, "don": 16, "usual": 16, "nuanc": 16, "capit": 16, "merge_wgt": 16, "em_sz": 16, "wgt": 16, "itos_pr": 16, "itos_new": 16, "insert": 16, "vocab": 16, "updat": 16, "merg": 16, "randn": 16, "\u0e1b\u0e25\u0e32": 16, "tensor": 16, "5952": 16, "4453": 16, "0011": 16, "encoder_dp": 16, "decod": 16, "process_thai": 16, "pre_rul": 16, "reorder_vowel": [16, 17], "spec_add_spac": 16, "rm_useless_spac": 16, "rm_useless_newlin": 16, "rm_bracket": 16, "replace_url": 16, "replace_rep_nonum": 16, "tok_func": 16, "bound": 16, "post_rul": 16, "ungroup_emoji": 16, "replace_wrep_post_nonum": 16, "spars": [16, 19], "\u0e32\u0e19\u0e19\u0e19\u0e19\u0e19": 16, "\u0e19\u0e32\u0e19\u0e19\u0e32\u0e19\u0e19\u0e32\u0e19": 16, "xxrep": 16, "xxwrep": 16, "\u0e19\u0e32\u0e19": 16, "modifi": [16, 17], "arug": 16, "replace_rep_aft": 16, "replace_wrep_post": 16, "bracket": 16, "artifact": 16, "bag": 16, "done": 16, "prevent": 16, "\u0e2d\u0e22\u0e22\u0e22\u0e22\u0e22\u0e22\u0e22\u0e22": 16, "becom": 16, "retain": 16, "counter": [16, 17], "\u0e01\u0e32\u0e32\u0e32\u0e32\u0e32\u0e32\u0e32": 16, "\u0e01\u0e32xxrep7": 16, "reptit": 16, "replace_wrep": 16, "front": [16, 17], "ungroup": 16, "zero": [16, 17, 26], "width": [16, 17], "joiner": [16, 17], "zvj": 16, "emoji": [16, 17], "emojipedia": 16, "zwj": 16, "convers": 17, "arabic_digit_to_thai_digit": 17, "arab": 17, "digit": 17, "\u0e53": 17, "\u0e51\u0e50": 17, "\u0e52": 17, "\u0e19\u0e08\u0e33\u0e19\u0e27\u0e19": 17, "123": 17, "\u0e51\u0e52\u0e53": 17, "\u0e54\u0e50\u0e50": 17, "\u0e52\u0e55": 17, "bahttext": 17, "suffix": 17, "baht": 17, "fix": [17, 25], "place": 17, "fit": 17, "\u0e2a\u0e15\u0e32\u0e07\u0e04": 17, "satang": 17, "microsoft": [17, 25], "excel": 17, "currenc": 17, "amount": 17, "\u0e07\u0e1a\u0e32\u0e17\u0e16": 17, "\u0e1a\u0e40\u0e2d": 17, "\u0e14\u0e1a\u0e32\u0e17\u0e16": 17, "200": 17, "\u0e2a\u0e2d\u0e07\u0e23": 17, "\u0e2d\u0e22\u0e1a\u0e32\u0e17\u0e16": 17, "convert_year": 17, "src": 17, "buddhist": 17, "calendar": 17, "anno": 17, "domini": 17, "rattanakosin": 17, "era": 17, "ah": 17, "hejira": 17, "warn": 17, "properli": 17, "1941": 17, "becaus": [17, 24], "travel": 17, "historian": 17, "collat": 17, "revers": 17, "almost": 17, "symbol": 17, "ascend": 17, "\u0e44\u0e01": 17, "\u0e01\u0e32\u0e25": 17, "count_thai_char": 17, "count": 17, "conson": 17, "lead_vowel": 17, "follow_vowel": 17, "above_vowel": 17, "below_vowel": 17, "tonemark": 17, "sign": 17, "thai_digit": 17, "non_thai": 17, "\u0e17\u0e14\u0e2a\u0e2d\u0e1a\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22": 17, "countthai": 17, "ignore_char": 17, "x0b": 17, "x0c0123456789": 17, "proport": 17, "puntuat": 17, "percent": 17, "\u0e44\u0e17\u0e22\u0e40\u0e2d": 17, "\u0e19\u0e41\u0e2d\u0e25\u0e1e": 17, "\u0e07\u0e32\u0e19": [17, 20, 23], "digit_to_text": 17, "\u0e54": 17, "display_thai_char": 17, "ch": 17, "underscor": 17, "high": 17, "eas": 17, "readabl": 17, "emoji_to_thai": 17, "delimit": 17, "\u0e08\u0e30\u0e21\u0e32\u0e19": 17, "\u0e07\u0e23\u0e16\u0e40\u0e21\u0e25": 17, "\u0e2d\u0e19\u0e1c\u0e21\u0e01": 17, "\u0e19\u0e30\u0e04\u0e23": 17, "\u0e43\u0e01\u0e25": 17, "\u0e14\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e0a\u0e19\u0e14": 17, "\u0e21\u0e22": 17, "\u0e07\u0e1f": 17, "\u0e27\u0e02": 17, "\u0e32\u0e27\u0e2d\u0e22\u0e32\u0e01\u0e01": 17, "\u0e19\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e0d": 17, "\u0e2d\u0e18\u0e07\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e44\u0e17\u0e22": 17, "\u0e18\u0e07_\u0e44\u0e17\u0e22": 17, "eng_to_thai": 17, "incorrectli": 17, "u": 17, "qwerti": 17, "keyboard": 17, "layout": 17, "intend": 17, "kedmane": 17, "incorrect": 17, "intention": 17, "\u0e18\u0e19\u0e32\u0e04\u0e32\u0e23\u0e41\u0e2b": 17, "\u0e07\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e44\u0e17\u0e22": 17, "got": 17, "tok8kicsj": 17, "xitgmlwmp": 17, "find_keyword": 17, "word_list": 17, "mininum": 17, "pair": 17, "raw": 17, "\u0e25\u0e32\u0e22\u0e25": 17, "\u0e01\u0e29\u0e13": 17, "\u0e01\u0e29\u0e23": 17, "\u0e01\u0e29\u0e23\u0e41\u0e25\u0e30": 17, "ipa_to_rtg": 17, "kluaj": 17, "kluai": 17, "is_native_thai": 17, "\u0e04\u0e33\u0e44\u0e17\u0e22\u0e41\u0e17": 17, "simpl": 17, "cannot": 17, "entir": 17, "reliabl": 17, "avocado": 17, "\u0e21\u0e30\u0e21": 17, "\u0e27\u0e07": 17, "\u0e15\u0e30\u0e27": 17, "\u0e22\u0e32\u0e20\u0e23\u0e13": 17, "isthai": 17, "\u0e01\u0e32\u0e25\u0e40\u0e27\u0e25\u0e32": 17, "66": 17, "01234567890": 17, "isthaichar": 17, "characttr": 17, "kai": 17, "\u0e55": 17, "five": 17, "maiyamok": 17, "\u0e01\u0e46\u0e0a\u0e2d\u0e1a\u0e44\u0e1b\u0e42\u0e23\u0e07\u0e40\u0e23": 17, "\u0e17\u0e33\u0e44\u0e21": 17, "\u0e17\u0e33": [17, 23], "nectec_to_ipa": 17, "nectec": 17, "kl": 17, "uua": 17, "pornpimon": 17, "palingoon": 17, "sumonma": 17, "thatphithakkul": 17, "chapter": 17, "handbook": 17, "electron": 17, "1st": 17, "ed": 17, "122": 17, "56": 17, "reorder": 17, "dangl": 17, "remove_zw": 17, "remove_dup_spac": 17, "remove_repeat_vowel": 17, "remove_dangl": 17, "those": 17, "unicodedata": 17, "fule": 17, "\u0e40\u0e40\u0e1b\u0e25\u0e01": 17, "sara": 17, "\u0e19\u0e32\u0e19\u0e32\u0e32\u0e32": 17, "\u0e19\u0e32\u0e19\u0e32": 17, "now_reign_year": 17, "reign": 17, "10th": 17, "chakri": 17, "dynasti": 17, "reign_year": 17, "\u0e0a\u0e01\u0e32\u0e25\u0e1b": 17, "\u0e0a\u0e01\u0e32\u0e23\u0e1b": 17, "num_to_thaiword": 17, "integ": 17, "rank": 17, "exclude_stopword": 17, "frequeci": 17, "reign_year_to_ad": 17, "reigh": 17, "7th": 17, "4th": 17, "2019": 17, "rama": 17, "ix": 17, "1946": 17, "typo": 17, "especi": 17, "visual": [17, 25], "who": 17, "accident": 17, "abov": 17, "AND": 17, "sure": 17, "doubl": 17, "ae": 17, "remove_tone_ipa": 17, "delet": 17, "la\u02d0": 17, "maj": 17, "remove_tonemark": 17, "four": 17, "down": [17, 24], "\u0e40\u0e2d\u0e01": 17, "fall": 17, "\u0e42\u0e17": 17, "rise": 17, "\u0e15\u0e27\u0e32": 17, "wrong": 17, "mistak": 17, "\u0e2a\u0e2d\u0e07\u0e1e": 17, "\u0e19\u0e2b\u0e19": 17, "\u0e07\u0e23": 17, "\u0e2d\u0e22\u0e2a": 17, "\u0e1a\u0e40\u0e08": 17, "\u0e32\u0e19\u0e2a": 17, "\u0e41\u0e2a\u0e19\u0e41\u0e1b\u0e14\u0e2b\u0e21": 17, "\u0e19\u0e2a\u0e32\u0e21\u0e1e": 17, "\u0e19\u0e2b\u0e01\u0e23": 17, "\u0e07\u0e23\u0e2d\u0e22\u0e2a": 17, "\u0e14\u0e25\u0e32\u0e19\u0e2a": 17, "\u0e19\u0e2b\u0e01\u0e23\u0e2d\u0e22\u0e2a": 17, "visibl": 17, "caus": 17, "unexpect": 17, "view": 17, "robust": 17, "zwsp": 17, "zwjp": 17, "logic": 17, "nikhahit": 17, "aa": 17, "am": 17, "sound_syl": 17, "live": 17, "\u0e40\u0e25\u0e02": 17, "syllable_length": 17, "short": 17, "\u0e04\u0e30": 17, "syllable_open_close_detector": 17, "close": 17, "detector": 17, "text_to_arabic_digit": 17, "\u0e41\u0e1b\u0e14": 17, "text_to_num": 17, "\u0e2d\u0e22\u0e41\u0e1b\u0e14\u0e2a": 17, "\u0e1a\u0e08": 17, "\u0e14\u0e40\u0e01": 17, "\u0e32\u0e2b": 17, "\u0e32\u0e1a\u0e32\u0e17\u0e19": 17, "\u0e2d\u0e08\u0e33\u0e19\u0e27\u0e19\u0e17": 17, "980": 17, "\u0e1a\u0e25": 17, "\u0e32\u0e19\u0e2a\u0e2d\u0e07\u0e2b\u0e21": 17, "\u0e07\u0e1e": 17, "\u0e19\u0e41\u0e1b\u0e14\u0e23": 17, "\u0e1a\u0e40\u0e01": [17, 20], "\u0e32\u0e1a\u0e32\u0e17": 17, "10021889": 17, "text_to_thai_digit": 17, "\u0e50": 17, "\u0e58": 17, "\u0e59": 17, "thai_digit_to_arabic_digit": 17, "thai_strftim": 17, "dt_obj": 17, "datetim": 17, "fmt": 17, "y": 17, "thaidigit": 17, "direct": 17, "datatim": 17, "strrftime": 17, "weekdai": 17, "\u0e1e\u0e24": 17, "\u0e19\u0e08": 17, "\u0e07\u0e04\u0e32\u0e23": 17, "\u0e19\u0e40\u0e2a\u0e32\u0e23": 17, "\u0e19\u0e2d\u0e32\u0e17": 17, "month": 17, "\u0e21\u0e01\u0e23\u0e32\u0e04\u0e21": 17, "\u0e21\u0e20\u0e32\u0e1e": 17, "\u0e1e\u0e24\u0e28\u0e08": 17, "\u0e01\u0e32\u0e22\u0e19": 17, "\u0e19\u0e27\u0e32\u0e04\u0e21": 17, "centuri": 17, "2556": 17, "2410": 17, "represent": [17, 19], "2519": 17, "2562": 17, "27": [17, 18, 21], "2555": 17, "pass": 17, "strftime": 17, "BE": 17, "543": 17, "certainli": 17, "dai": 17, "meant": 17, "interrim": 17, "solut": 17, "sinc": 17, "th_th": 17, "setlocal": 17, "lc_time": 17, "try": [17, 25], "platform": 17, "independ": 17, "extent": 17, "extens": 17, "posix": 17, "bsd": 17, "gnu": 17, "libc": 17, "strptime": 17, "behavior": 17, "cplusplu": 17, "ctime": 17, "metacpan": 17, "pod": 17, "linux": 17, "die": 17, "net": 17, "man": 17, "openbsd": 17, "freebsd": 17, "unix": 17, "page": [17, 21], "maco": 17, "appl": 17, "archiv": 17, "conceptu": 17, "manpages_iphoneo": 17, "man3": 17, "php": 17, "secur": 17, "manual": 17, "javascript": 17, "samsonj": 17, "quick": [17, 24], "instantiatetd": 17, "datetime_obj": 17, "hour": 17, "minut": 17, "59": 17, "microsecond": 17, "09": 17, "\u0e19\u0e32\u0e22\u0e19": 17, "pad": 17, "62": [17, 25], "_d": 17, "0d": 17, "\u0e19\u0e32\u0e2c": 17, "\u0e19\u0e32\u0e17": 17, "\u0e55\u0e59": 17, "thai_strptim": 17, "add_year": 17, "tzinfo": 17, "backport": 17, "zoneinfo": 17, "asia": 17, "bangkok": 17, "isanno": 17, "31": 17, "2566": 17, "2023": [17, 26], "23": [17, 18], "2565": 17, "thai_to_eng": 17, "bank": 17, "\u0e1f": [17, 23], "\u0e1f\u0e23\u0e2a\u0e1f": 17, "thai_word_tone_detector": 17, "thaiword_to_d": 17, "\u0e1e\u0e23": [17, 19], "tomorrow": 17, "thaiword_to_num": 17, "actual": 17, "correspond": 17, "\u0e2a\u0e2d\u0e07\u0e25": 17, "\u0e32\u0e19\u0e2a\u0e32\u0e21\u0e41\u0e2a\u0e19\u0e2b\u0e01\u0e23": 17, "\u0e1a\u0e2a\u0e2d\u0e07": 17, "2300612": 17, "thaiword_to_tim": 17, "\u0e32\u0e22\u0e42\u0e21\u0e07\u0e04\u0e23": 17, "13": [17, 25], "time_to_thaiword": 17, "time_data": 17, "24h": 17, "24": 17, "clock": 17, "6h": 17, "m6h": 17, "alwai": 17, "\u0e41\u0e1b\u0e14\u0e19\u0e32\u0e2c": 17, "\u0e01\u0e32\u0e2a": 17, "\u0e14\u0e19\u0e32\u0e17": 17, "\u0e2a\u0e2d\u0e07\u0e42\u0e21\u0e07\u0e40\u0e0a": 17, "\u0e41\u0e1b\u0e14\u0e42\u0e21\u0e07\u0e2a": 17, "\u0e2b\u0e01\u0e42\u0e21\u0e07\u0e04\u0e23": 17, "\u0e1a\u0e2a\u0e2d\u0e07\u0e19\u0e32\u0e2c": 17, "\u0e01\u0e32\u0e2a\u0e32\u0e21\u0e19\u0e32\u0e17": 17, "tis620_to_utf8": 17, "ti": 17, "620": 17, "\u00e3\u00f0": 17, "\u00e3\u00e7": 17, "\u00ed\u00f8\u00b5\u00ea\u00f2\u00eb": 17, "\u00e3\u00e3\u00e1": 17, "\u0e01\u0e23\u0e30\u0e17\u0e23\u0e27\u0e07\u0e2d": 17, "\u0e15\u0e2a\u0e32\u0e2b\u0e01\u0e23\u0e23\u0e21": 17, "tone_detector": 17, "words_to_num": 17, "spell_word": 17, "spell_syl": 17, "\u0e21\u0e2d": 17, "\u0e27\u0e2d": 17, "\u0e41\u0e2d": 17, "\u0e04\u0e2d": 17, "\u0e14\u0e2d": 17, "children": 17, "noth": 17, "finetun": 18, "thai2transform": 18, "speed": 18, "benchmark": [18, 21, 23, 25], "89": 18, "312": 18, "64": [18, 25], "65": 18, "namedentityrecognit": 18, "power": 18, "dataset_nam": 18, "grouped_ent": 18, "lowphansirikul": [18, 21], "polpanuma": [18, 21], "jantrakulchai": 18, "nutanong": 18, "210109635": 18, "internet": 18, "jan": 18, "feb": 18, "ab": 18, "2101": 18, "09635": 18, "gensim": 19, "wordvector": 19, "thai2fit_wv": [19, 23], "v0": 19, "ltw2v_v1": 19, "0_15_window": 19, "0_5_window": 19, "load_wordvector": 19, "get_model": 19, "keyedvector": 19, "word2veckeyedvector": 19, "doesnt_match": 19, "mostli": 19, "unrel": 19, "rais": 19, "keyerror": 19, "vocabulari": 19, "strt": 19, "\u0e01\u0e44\u0e17\u0e22": 19, "food": 19, "meal": 19, "\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e40\u0e0a": 19, "\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e40\u0e17": 19, "\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e40\u0e22": 19, "wv": 19, "vehicl": 19, "occup": 19, "\u0e44\u0e0b\u0e19": 19, "\u0e40\u0e19\u0e2d\u0e23": 19, "\u0e1e\u0e19": 19, "\u0e01\u0e07\u0e32\u0e19\u0e40\u0e07": 19, "\u0e19\u0e40\u0e14": 19, "\u0e2b\u0e21\u0e2d": 19, "most_similar_cosmul": 19, "omer": 19, "levi": 19, "yoav": 19, "goldberg": 19, "omerlevy_yoavgoldberg_2014": 19, "directli": [19, 23, 25], "substract": 19, "most_similar": 19, "list_posit": 19, "list_neg": 19, "\u0e25\u0e33\u0e19": 19, "8206598162651062": 19, "\u0e17\u0e30\u0e40\u0e25\u0e2a\u0e32\u0e1a": 19, "775945782661438": 19, "\u0e21\u0e19": 19, "7490593194961548": 19, "\u0e04\u0e25\u0e2d\u0e07": 19, "7471904754638672": 19, "\u0e1b\u0e32\u0e01\u0e41\u0e21": 19, "7354257106781006": 19, "\u0e07\u0e41\u0e21": 19, "7120099067687988": 19, "\u0e17\u0e30\u0e40\u0e25": 19, "7030453681945801": 19, "\u0e21\u0e41\u0e21": 19, "7015200257301331": 19, "\u0e41\u0e2b\u0e25": 19, "6997432112693787": 19, "6960948705673218": 19, "\u0e10\u0e21\u0e19\u0e15\u0e23": 19, "\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28": 19, "\u0e23\u0e2d\u0e07\u0e19\u0e32\u0e22\u0e01\u0e23": 19, "2730445861816406": 19, "\u0e40\u0e2d\u0e01\u0e2d": 19, "\u0e04\u0e23\u0e23\u0e32\u0e0a\u0e17": 19, "26500266790390015": 19, "\u0e19\u0e32\u0e22\u0e01\u0e23": 19, "2649088203907013": 19, "\u0e32\u0e23\u0e32\u0e0a\u0e01\u0e32\u0e23\u0e08": 19, "\u0e07\u0e2b\u0e27": 19, "25119125843048096": 19, "\u0e32\u0e01\u0e32\u0e23": 19, "2510434687137604": 19, "\u0e40\u0e25\u0e02\u0e32\u0e18": 19, "24824175238609314": 19, "2453523576259613": 19, "\u0e1b\u0e23\u0e30\u0e18\u0e32\u0e19\u0e01\u0e23\u0e23\u0e21\u0e01\u0e32\u0e23": 19, "24147476255893707": 19, "\u0e23\u0e2d\u0e07\u0e1b\u0e23\u0e30\u0e18\u0e32\u0e19": 19, "24123257398605347": 19, "\u0e2a\u0e21\u0e32\u0e0a": 19, "\u0e2a\u0e20\u0e32": 19, "2405330240726471": 19, "\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e08": 19, "22022421658039093": 19, "\u0e40\u0e01\u0e32\u0e2b\u0e25": 19, "2196873426437378": 19, "\u0e2a\u0e2b\u0e23": 19, "\u0e10\u0e2d\u0e40\u0e21\u0e23": 19, "21660110354423523": 19, "\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e0d": 19, "21205860376358032": 19, "\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e44\u0e17\u0e22": 19, "21159221231937408": 19, "20321202278137207": 19, "\u0e07\u0e01\u0e24\u0e29": 19, "19610872864723206": 19, "\u0e2e": 19, "\u0e2d\u0e07\u0e01\u0e07": 19, "1928885132074356": 19, "\u0e1d\u0e23": 19, "\u0e07\u0e40\u0e28\u0e2a": 19, "18383873999118805": 19, "\u0e1e\u0e21": 19, "18369348347187042": 19, "3278159201145172": 19, "3201899230480194": 19, "31755179166793823": 19, "30845439434051514": 19, "306713730096817": 19, "3003999888896942": 19, "2995176911354065": 19, "\u0e04\u0e19\u0e44\u0e17\u0e22": 19, "2885020673274994": 19, "\u0e40\u0e27": [19, 20], "\u0e22\u0e14\u0e19\u0e32\u0e21": 19, "2878379821777344": 19, "\u0e0a\u0e32\u0e27\u0e44\u0e17\u0e22": 19, "28480708599090576": 19, "\u0e40\u0e21\u0e19": 19, "\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e44\u0e17\u0e22": 19, "computa": 19, "cosin": 19, "consin": 19, "\u0e23\u0e16\u0e44\u0e1f": 19, "\u0e23\u0e16\u0e44\u0e1f\u0e1f": 19, "electr": 19, "43387136": 19, "\u0e2d\u0e14\u0e32\u0e27": 19, "leopard": 19, "04300258": 19, "sentence_vector": 19, "use_mean": 19, "aggregatesd": 19, "calul": 19, "summat": 19, "\u0e27\u0e19\u0e40\u0e2a": 19, "\u0e22\u0e27\u0e40\u0e02": 19, "\u0e14\u0e41\u0e04\u0e27": 19, "\u0e43\u0e19\u0e1b": 19, "735": 19, "meanthod": 19, "00421414": 19, "08881307": 19, "05081136": 19, "05632929": 19, "06607185": 19, "03059357": 19, "113882": 19, "00074836": 19, "05035743": 19, "02914307": 19, "02893357": 19, "11327957": 19, "04562086": 19, "05015393": 19, "11641257": 19, "32304936": 19, "05054322": 19, "03639471": 19, "06531371": 19, "05048079": 19, "05899798": 19, "24338295": 19, "711359": 19, "78861002": 19, "92500597": 19, "42831": 19, "59434797": 19, "01047703": 19, "705004": 19, "40800299": 19, "40506999": 19, "58591403": 19, "63869202": 19, "702155": 19, "62977601": 19, "52269109": 19, "70760502": 19, "50952601": 19, "914392": 19, "70673105": 19, "2014": 19, "regular": 19, "explicit": 19, "get_sens": 20, "custom_token": 20, "idea": 20, "awar": 20, "unsupervis": 20, "paraphras": 20, "mpnet": 20, "\u0e40\u0e02\u0e32\u0e01\u0e33\u0e25": 20, "\u0e07\u0e2d\u0e1a\u0e02\u0e19\u0e21\u0e04": 20, "\u0e01\u0e01": 20, "\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21\u0e04\u0e2d\u0e21\u0e1e": 20, "\u0e27\u0e40\u0e15\u0e2d\u0e23": 20, "\u0e43\u0e19\u0e17\u0e32\u0e07\u0e2d": 20, "\u0e15\u0e2a\u0e33\u0e2b\u0e23": 20, "\u0e1a\u0e02": 20, "\u0e25\u0e02\u0e2d\u0e07\u0e1c": 20, "0974416732788086": 20, "\u0e2d\u0e02\u0e19\u0e21\u0e0a\u0e19": 20, "\u0e14\u0e2b\u0e19": 20, "\u0e07\u0e08\u0e33\u0e1e\u0e27\u0e01\u0e02\u0e19\u0e21\u0e40\u0e04": 20, "\u0e17\u0e33\u0e40\u0e1b": 20, "\u0e19\u0e40\u0e25": 20, "\u0e41\u0e1a\u0e19": 20, "\u0e27\u0e2d\u0e1a\u0e43\u0e2b": 20, "09319090843200684": 20, "\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e04": 20, "\u0e43\u0e19\u0e01\u0e32\u0e23\u0e17\u0e33\u0e07\u0e32\u0e19": 20, "1005704402923584": 20, "12473666667938232": 20, "faq": 21, "command": [21, 25], "tutori": 21, "augment": [21, 25], "chat": 21, "coref": 21, "khave": 21, "soundex": [21, 23], "tool": [21, 25], "translat": [21, 24, 25], "ulmfit": [21, 25], "word_vector": 21, "wsd": [21, 25], "index": 21, "modul": 21, "your": [21, 25], "project": [21, 26], "charin": 21, "arthit": 21, "suriyawongkul": 21, "pattarawat": 21, "chormai": 21, "jun": 21, "zenodo": 21, "doi": 21, "5281": 21, "3519354": 21, "maintain": 21, "team": 21, "frequent": 22, "pythainlp": [22, 23, 24, 25, 26], "thainlp": [23, 25], "nw": 23, "attacut": [23, 25], "\u0e2a\u0e20\u0e32\u0e1e\u0e01\u0e32\u0e23\u0e08": 23, "\u0e32\u0e07\u0e41\u0e25\u0e30\u0e2a\u0e20\u0e32\u0e1e\u0e01\u0e32\u0e23\u0e17\u0e33\u0e07\u0e32\u0e19": 23, "\u0e2a\u0e20\u0e32\u0e1e": 23, "\u0e01\u0e32\u0e23\u0e17\u0e33\u0e07\u0e32\u0e19": 23, "\u0e20\u0e32": 23, "\u0e07\u0e32": 23, "\u0e41\u0e23\u0e07\u0e07\u0e32\u0e19\u0e01\u0e30\u0e14": 23, "\u0e19\u0e40\u0e1f": 23, "\u0e07\u0e2b\u0e21": 23, "\u0e19\u0e43\u0e19\u0e04\u0e33": 23, "\u0e19\u0e21": 23, "\u0e40\u0e04\u0e2d\u0e23": 23, "\u0e41\u0e23\u0e07\u0e07\u0e32\u0e19": 23, "\u0e01\u0e30": 23, "\u0e04\u0e33": 23, "\u0e1c\u0e25": 23, "\u0e2d\u0e1e": 23, "\u0e01\u0e40\u0e09": 23, "\u0e2b\u0e25\u0e32\u0e22\u0e1b": 23, "\u0e32\u0e19\u0e21\u0e32": 23, "\u0e0a\u0e32\u0e27\u0e0a": 23, "\u0e21\u0e0a\u0e19\u0e42\u0e04\u0e01\u0e22\u0e32\u0e27\u0e2b\u0e25\u0e32\u0e22\u0e04\u0e19\u0e44\u0e14": 23, "\u0e1e\u0e32\u0e01": 23, "\u0e32\u0e22\u0e2d\u0e2d\u0e01": 23, "\u0e32\u0e07\u0e01": 23, "\u0e22\u0e0a": 23, "\u0e1a\u0e32\u0e07\u0e04\u0e19\u0e16": 23, "\u0e01\u0e08\u0e33\u0e04": 23, "\u0e01\u0e43\u0e19\u0e02": 23, "\u0e01\u0e1b": 23, "\u0e32\u0e2b\u0e23": 23, "\u0e2d\u0e41\u0e21": 23, "\u0e01\u0e23\u0e30\u0e17": 23, "\u0e0d\u0e2b\u0e32\u0e22": 23, "tagg": 23, "\u0e40\u0e1c": 23, "\u0e27330000": 23, "\u0e274000": 23, "manag": 23, "rm": 23, "user1": 23, "crfcut": 23, "g2p": 23, "36": 23, "wisesight": 23, "1000": 23, "deepcut": 23, "against": 23, "993": 23, "total": 23, "char_level": 23, "tp": 23, "17654": 23, "0000": 23, "fn": 23, "1153": 23, "tn": 23, "50755": 23, "fp": 23, "1478": 23, "9227": 23, "9387": 23, "word_level": 23, "total_words_in_sampl": 23, "19132": 23, "total_words_in_ref_sampl": 23, "18807": 23, "correctly_tokenised_word": 23, "15637": 23, "8173": 23, "8314": 23, "\u0e40\u0e23\u0e32\u0e23": 24, "\u0e01\u0e20\u0e32\u0e29\u0e32\u0e16": 24, "\u0e20\u0e32\u0e29\u0e32\u0e16": 24, "\u0e40\u0e04": 24, "histor": 24, "face": 24, "lot": 24, "challeng": 24, "arguabl": 24, "biggest": 24, "problem": [24, 25], "lack": 24, "eo": 24, "prong": 24, "comma": 24, "period": 24, "habit": 24, "connector": 24, "etc": [24, 25], "often": 24, "even": 24, "decid": 24, "boil": 24, "asian": 24, "degre": 24, "extrem": 24, "potato": 24, "pomm": 24, "de": 24, "terr": 24, "best": 24, "\u0e15\u0e32": 24, "\u0e01\u0e25\u0e21": 24, "\u0e15\u0e32\u0e01": 24, "\u0e25\u0e21": 24, "As": 24, "recent": 24, "captur": 24, "seem": 24, "pois": 24, "overcom": 24, "stabl": 25, "pip": 25, "upgrad": 25, "extra": 25, "extra1": 25, "extra2": 25, "ml": 25, "thai2rom": 25, "learnt": 25, "roman": 25, "umlfit": 25, "oskut": 25, "nlpo3": 25, "esolut": 25, "everyth": 25, "setup": 25, "py": 25, "built": 25, "wheel": 25, "lfd": 25, "uci": 25, "gohlk": 25, "pythonlib": 25, "architectur": 25, "win32": 25, "amd64": 25, "xxx": 25, "cp36": 25, "cp36m": 25, "whl": 25, "technic": 25, "skill": 25, "thing": 25, "accommod": 25, "icu_vers": 25, "obvious": 25, "good": 25, "side": 25, "optim": 25, "better": 25, "databas": 25, "store": 25, "automat": 25, "pythainlp_read_mod": 25, "q": 25, "crfsuit": 25, "executor": 25, "permissionerror": 25, "deni": 25, "corpora": 26, "creativ": 26, "dedic": 26, "cc0": 26, "advis": 26}, "objects": {"pythainlp.augment": [[0, 0, 1, "", "WordNetAug"]], "pythainlp.augment.WordNetAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "find_synonyms"]], "pythainlp.augment.lm": [[0, 0, 1, "", "FastTextAug"], [0, 0, 1, "", "Thai2transformersAug"]], "pythainlp.augment.lm.FastTextAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "modify_sent"], [0, 1, 1, "", "tokenize"]], "pythainlp.augment.lm.Thai2transformersAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "generate"]], "pythainlp.augment.word2vec": [[0, 0, 1, "", "LTW2VAug"], [0, 0, 1, "", "Thai2fitAug"], [0, 0, 1, "", "Word2VecAug"]], "pythainlp.augment.word2vec.LTW2VAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "load_w2v"], [0, 1, 1, "", "tokenizer"]], "pythainlp.augment.word2vec.Thai2fitAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "load_w2v"], [0, 1, 1, "", "tokenizer"]], "pythainlp.augment.word2vec.Word2VecAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "modify_sent"]], "pythainlp.augment.word2vec.bpemb_wv": [[0, 0, 1, "", "BPEmbAug"]], "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "load_w2v"], [0, 1, 1, "", "tokenizer"]], "pythainlp.benchmarks.word_tokenization": [[1, 2, 1, "", "benchmark"], [1, 2, 1, "", "compute_stats"], [1, 2, 1, "", "preprocessing"]], "pythainlp.chat": [[2, 0, 1, "", "ChatBotModel"]], "pythainlp.chat.ChatBotModel": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "chat"], [2, 1, 1, "", "load_model"], [2, 1, 1, "", "reset_chat"]], "pythainlp.coref": [[3, 2, 1, "", "coreference_resolution"]], "pythainlp.corpus.conceptnet": [[4, 2, 1, "", "edges"]], "pythainlp.corpus": [[4, 2, 1, "", "countries"], [4, 2, 1, "", "download"], [4, 2, 1, "", "get_corpus"], [4, 2, 1, "", "get_corpus_db"], [4, 2, 1, "", "get_corpus_db_detail"], [4, 2, 1, "", "get_corpus_default_db"], [4, 2, 1, "", "get_corpus_path"], [4, 2, 1, "", "provinces"], [4, 2, 1, "", "remove"], [4, 2, 1, "", "thai_dict"], [4, 2, 1, "", "thai_family_names"], [4, 2, 1, "", "thai_female_names"], [4, 2, 1, "", "thai_male_names"], [4, 2, 1, "", "thai_negations"], [4, 2, 1, "", "thai_orst_words"], [4, 2, 1, "", "thai_stopwords"], [4, 2, 1, "", "thai_syllables"], [4, 2, 1, "", "thai_words"], [4, 2, 1, "", "thai_wsd_dict"]], "pythainlp.corpus.oscar": [[4, 2, 1, "", "unigram_word_freqs"], [4, 2, 1, "", "word_freqs"]], "pythainlp.corpus.th_en_translit": [[4, 2, 1, "", "get_transliteration_dict"]], "pythainlp.corpus.tnc": [[4, 2, 1, "", "bigram_word_freqs"], [4, 2, 1, "", "trigram_word_freqs"], [4, 2, 1, "", "unigram_word_freqs"], [4, 2, 1, "", "word_freqs"]], "pythainlp.corpus.ttc": [[4, 2, 1, "", "unigram_word_freqs"], [4, 2, 1, "", "word_freqs"]], "pythainlp.corpus.util": [[4, 2, 1, "", "find_badwords"], [4, 2, 1, "", "revise_newmm_default_wordset"], [4, 2, 1, "", "revise_wordset"]], "pythainlp.corpus.wordnet": [[4, 2, 1, "", "all_lemma_names"], [4, 2, 1, "", "all_synsets"], [4, 2, 1, "", "custom_lemmas"], [4, 2, 1, "", "langs"], [4, 2, 1, "", "lch_similarity"], [4, 2, 1, "", "lemma"], [4, 2, 1, "", "lemma_from_key"], [4, 2, 1, "", "lemmas"], [4, 2, 1, "", "morphy"], [4, 2, 1, "", "path_similarity"], [4, 2, 1, "", "synset"], [4, 2, 1, "", "synsets"], [4, 2, 1, "", "wup_similarity"]], "pythainlp.generate": [[5, 0, 1, "", "Bigram"], [5, 0, 1, "", "Trigram"], [5, 0, 1, "", "Unigram"]], "pythainlp.generate.Bigram": [[5, 1, 1, "", "__init__"], [5, 1, 1, "", "gen_sentence"], [5, 1, 1, "", "prob"]], "pythainlp.generate.Trigram": [[5, 1, 1, "", "__init__"], [5, 1, 1, "", "gen_sentence"], [5, 1, 1, "", "prob"]], "pythainlp.generate.Unigram": [[5, 1, 1, "", "__init__"], [5, 1, 1, "", "gen_sentence"]], "pythainlp.generate.thai2fit": [[5, 2, 1, "", "gen_sentence"]], "pythainlp.generate.wangchanglm": [[5, 0, 1, "", "WangChanGLM"]], "pythainlp.generate.wangchanglm.WangChanGLM": [[5, 1, 1, "", "__init__"], [5, 1, 1, "", "gen_instruct"], [5, 1, 1, "", "instruct_generate"], [5, 1, 1, "", "is_exclude"], [5, 1, 1, "", "load_model"]], "pythainlp.khavee": [[6, 0, 1, "", "KhaveeVerifier"]], "pythainlp.khavee.KhaveeVerifier": [[6, 3, 1, "", "__dict__"], [6, 1, 1, "", "__init__"], [6, 3, 1, "", "__module__"], [6, 1, 1, "", "check_aek_too"], [6, 1, 1, "", "check_karu_lahu"], [6, 1, 1, "", "check_klon"], [6, 1, 1, "", "check_marttra"], [6, 1, 1, "", "check_sara"], [6, 1, 1, "", "handle_karun_sound_silence"], [6, 1, 1, "", "is_sumpus"]], "pythainlp.parse": [[7, 2, 1, "", "dependency_parsing"]], "pythainlp.soundex": [[8, 2, 1, "", "lk82"], [8, 2, 1, "", "metasound"], [8, 2, 1, "", "prayut_and_somchaip"], [8, 2, 1, "", "soundex"], [8, 2, 1, "", "udom83"]], "pythainlp.soundex.sound": [[8, 2, 1, "", "audio_vector"], [8, 2, 1, "", "word2audio"], [8, 2, 1, "", "word_approximation"]], "pythainlp.spell": [[9, 4, 1, "", "DEFAULT_SPELL_CHECKER"], [9, 0, 1, "", "NorvigSpellChecker"], [9, 2, 1, "", "correct"], [9, 2, 1, "", "correct_sent"], [9, 2, 1, "", "spell"], [9, 2, 1, "", "spell_sent"]], "pythainlp.spell.NorvigSpellChecker": [[9, 3, 1, "", "__dict__"], [9, 1, 1, "", "__init__"], [9, 3, 1, "", "__module__"], [9, 1, 1, "", "correct"], [9, 1, 1, "", "dictionary"], [9, 1, 1, "", "freq"], [9, 1, 1, "", "known"], [9, 1, 1, "", "prob"], [9, 1, 1, "", "spell"]], "pythainlp.summarize": [[10, 2, 1, "", "extract_keywords"], [10, 5, 0, "-", "keybert"], [10, 2, 1, "", "summarize"]], "pythainlp.summarize.keybert": [[10, 0, 1, "id0", "KeyBERT"]], "pythainlp.summarize.keybert.KeyBERT": [[10, 1, 1, "id5", "__init__"], [10, 1, 1, "id9", "embed"], [10, 1, 1, "id6", "extract_keywords"]], "pythainlp.tag": [[11, 0, 1, "", "NER"], [11, 0, 1, "", "NNER"], [11, 2, 1, "", "chunk_parse"], [11, 2, 1, "", "pos_tag"], [11, 2, 1, "", "pos_tag_sents"], [11, 2, 1, "", "tag_provinces"]], "pythainlp.tag.NER": [[11, 1, 1, "", "__init__"], [11, 1, 1, "", "load_engine"], [11, 1, 1, "", "tag"]], "pythainlp.tag.NNER": [[11, 1, 1, "", "__init__"], [11, 1, 1, "", "load_engine"], [11, 1, 1, "", "tag"]], "pythainlp.tag.thainer": [[11, 0, 1, "", "ThaiNameTagger"]], "pythainlp.tag.thainer.ThaiNameTagger": [[11, 1, 1, "", "__init__"], [11, 1, 1, "", "get_ner"]], "pythainlp.tag.tltk": [[11, 2, 1, "", "get_ner"]], "pythainlp.tokenize": [[12, 0, 1, "", "Tokenizer"], [12, 5, 0, "-", "attacut"], [12, 2, 1, "", "clause_tokenize"], [12, 5, 0, "-", "crfcut"], [12, 5, 0, "-", "deepcut"], [12, 5, 0, "-", "etcc"], [12, 5, 0, "-", "longest"], [12, 5, 0, "-", "multi_cut"], [12, 5, 0, "-", "nercut"], [12, 5, 0, "-", "newmm"], [12, 5, 0, "-", "nlpo3"], [12, 5, 0, "-", "oskut"], [12, 2, 1, "", "paragraph_tokenize"], [12, 5, 0, "-", "pyicu"], [12, 5, 0, "-", "sefr_cut"], [12, 2, 1, "", "sent_tokenize"], [12, 2, 1, "", "subword_tokenize"], [12, 5, 0, "-", "tcc"], [12, 5, 0, "-", "thaisumcut"], [12, 2, 1, "", "word_detokenize"], [12, 2, 1, "", "word_tokenize"]], "pythainlp.tokenize.Tokenizer": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "set_tokenize_engine"], [12, 1, 1, "", "word_tokenize"]], "pythainlp.tokenize.attacut": [[12, 0, 1, "id9", "AttacutTokenizer"], [12, 2, 1, "", "segment"]], "pythainlp.tokenize.attacut.AttacutTokenizer": [[12, 1, 1, "id10", "__init__"], [12, 1, 1, "id11", "tokenize"]], "pythainlp.tokenize.crfcut": [[12, 2, 1, "id0", "extract_features"], [12, 2, 1, "id3", "segment"]], "pythainlp.tokenize.deepcut": [[12, 2, 1, "", "segment"]], "pythainlp.tokenize.etcc": [[12, 2, 1, "id32", "segment"]], "pythainlp.tokenize.longest": [[12, 0, 1, "", "LongestMatchTokenizer"], [12, 2, 1, "id20", "segment"]], "pythainlp.tokenize.longest.LongestMatchTokenizer": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "tokenize"]], "pythainlp.tokenize.multi_cut": [[12, 0, 1, "", "LatticeString"], [12, 2, 1, "id15", "find_all_segment"], [12, 2, 1, "", "mmcut"], [12, 2, 1, "id14", "segment"]], "pythainlp.tokenize.multi_cut.LatticeString": [[12, 1, 1, "", "__init__"]], "pythainlp.tokenize.nercut": [[12, 2, 1, "id23", "segment"]], "pythainlp.tokenize.newmm": [[12, 2, 1, "id28", "segment"]], "pythainlp.tokenize.nlpo3": [[12, 2, 1, "id17", "load_dict"], [12, 2, 1, "id18", "segment"]], "pythainlp.tokenize.oskut": [[12, 2, 1, "", "segment"]], "pythainlp.tokenize.pyicu": [[12, 2, 1, "", "segment"]], "pythainlp.tokenize.sefr_cut": [[12, 2, 1, "", "segment"]], "pythainlp.tokenize.tcc": [[12, 2, 1, "id29", "segment"], [12, 2, 1, "id30", "tcc"], [12, 2, 1, "id31", "tcc_pos"]], "pythainlp.tokenize.tcc_p": [[12, 2, 1, "", "segment"], [12, 2, 1, "", "tcc"], [12, 2, 1, "", "tcc_pos"]], "pythainlp.tokenize.thaisumcut": [[12, 0, 1, "id6", "ThaiSentenceSegmentor"], [12, 2, 1, "id4", "list_to_string"], [12, 2, 1, "id5", "middle_cut"]], "pythainlp.tokenize.thaisumcut.ThaiSentenceSegmentor": [[12, 1, 1, "id7", "split_into_sentences"]], "pythainlp.tools": [[13, 2, 1, "", "get_full_data_path"], [13, 2, 1, "", "get_pythainlp_data_path"], [13, 2, 1, "", "get_pythainlp_path"]], "pythainlp.tools.misspell": [[13, 2, 1, "", "misspell"]], "pythainlp.translate": [[14, 0, 1, "", "Translate"]], "pythainlp.translate.Translate": [[14, 1, 1, "", "__init__"], [14, 1, 1, "", "load_model"], [14, 1, 1, "", "translate"]], "pythainlp.translate.en_th": [[14, 0, 1, "", "EnThTranslator"], [14, 0, 1, "", "ThEnTranslator"], [14, 2, 1, "", "download_model_all"]], "pythainlp.translate.en_th.EnThTranslator": [[14, 1, 1, "", "__init__"], [14, 1, 1, "", "translate"]], "pythainlp.translate.en_th.ThEnTranslator": [[14, 1, 1, "", "__init__"], [14, 1, 1, "", "translate"]], "pythainlp.translate.th_fr": [[14, 0, 1, "", "ThFrTranslator"]], "pythainlp.translate.th_fr.ThFrTranslator": [[14, 1, 1, "", "__init__"], [14, 1, 1, "", "translate"]], "pythainlp.translate.zh_th": [[14, 0, 1, "", "ThZhTranslator"], [14, 0, 1, "", "ZhThTranslator"]], "pythainlp.translate.zh_th.ThZhTranslator": [[14, 1, 1, "", "__init__"], [14, 1, 1, "", "translate"]], "pythainlp.translate.zh_th.ZhThTranslator": [[14, 1, 1, "", "__init__"], [14, 1, 1, "", "translate"]], "pythainlp.transliterate": [[15, 5, 0, "-", "ipa"], [15, 5, 0, "-", "iso_11940"], [15, 2, 1, "", "pronunciate"], [15, 2, 1, "", "puan"], [15, 5, 0, "-", "pyicu"], [15, 2, 1, "", "romanize"], [15, 2, 1, "", "transliterate"]], "pythainlp.transliterate.ipa": [[15, 2, 1, "id5", "trans_list"], [15, 2, 1, "id4", "transliterate"], [15, 2, 1, "id6", "xsampa_list"]], "pythainlp.transliterate.iso_11940": [[15, 2, 1, "", "transliterate"]], "pythainlp.transliterate.pyicu": [[15, 2, 1, "id0", "transliterate"]], "pythainlp.transliterate.royin": [[15, 5, 0, "-", "romanize"]], "pythainlp.transliterate.thai2rom": [[15, 5, 0, "-", "romanize"]], "pythainlp.transliterate.thaig2p": [[15, 2, 1, "", "transliterate"], [15, 5, 0, "-", "transliterate"]], "pythainlp.transliterate.tltk": [[15, 2, 1, "", "romanize"], [15, 2, 1, "", "tltk_g2p"], [15, 2, 1, "", "tltk_ipa"]], "pythainlp.transliterate.wunsen": [[15, 0, 1, "", "WunsenTransliterate"]], "pythainlp.transliterate.wunsen.WunsenTransliterate": [[15, 1, 1, "", "__init__"], [15, 1, 1, "", "transliterate"]], "pythainlp.ulmfit": [[16, 0, 1, "", "ThaiTokenizer"], [16, 2, 1, "", "document_vector"], [16, 2, 1, "", "fix_html"], [16, 2, 1, "", "lowercase_all"], [16, 2, 1, "", "merge_wgts"], [16, 2, 1, "", "process_thai"], [16, 2, 1, "", "remove_space"], [16, 2, 1, "", "replace_rep_after"], [16, 2, 1, "", "replace_rep_nonum"], [16, 2, 1, "", "replace_wrep_post"], [16, 2, 1, "", "replace_wrep_post_nonum"], [16, 2, 1, "", "rm_brackets"], [16, 2, 1, "", "rm_useless_newlines"], [16, 2, 1, "", "rm_useless_spaces"], [16, 2, 1, "", "spec_add_spaces"], [16, 2, 1, "", "ungroup_emoji"]], "pythainlp.ulmfit.ThaiTokenizer": [[16, 1, 1, "", "__init__"], [16, 1, 1, "", "add_special_cases"], [16, 1, 1, "", "tokenizer"]], "pythainlp.util": [[17, 0, 1, "", "Trie"], [17, 2, 1, "", "arabic_digit_to_thai_digit"], [17, 2, 1, "", "bahttext"], [17, 2, 1, "", "collate"], [17, 2, 1, "", "convert_years"], [17, 2, 1, "", "count_thai_chars"], [17, 2, 1, "", "countthai"], [17, 2, 1, "", "dict_trie"], [17, 2, 1, "", "digit_to_text"], [17, 2, 1, "", "display_thai_char"], [17, 2, 1, "", "emoji_to_thai"], [17, 2, 1, "", "eng_to_thai"], [17, 2, 1, "", "find_keyword"], [17, 2, 1, "", "ipa_to_rtgs"], [17, 2, 1, "", "is_native_thai"], [17, 2, 1, "", "isthai"], [17, 2, 1, "", "isthaichar"], [17, 2, 1, "", "maiyamok"], [17, 2, 1, "", "nectec_to_ipa"], [17, 2, 1, "", "normalize"], [17, 2, 1, "", "now_reign_year"], [17, 2, 1, "", "num_to_thaiword"], [17, 2, 1, "", "rank"], [17, 2, 1, "", "reign_year_to_ad"], [17, 2, 1, "", "remove_dangling"], [17, 2, 1, "", "remove_dup_spaces"], [17, 2, 1, "", "remove_repeat_vowels"], [17, 2, 1, "", "remove_tone_ipa"], [17, 2, 1, "", "remove_tonemark"], [17, 2, 1, "", "remove_zw"], [17, 2, 1, "", "reorder_vowels"], [17, 2, 1, "", "sound_syllable"], [17, 2, 1, "", "syllable_length"], [17, 2, 1, "", "syllable_open_close_detector"], [17, 2, 1, "", "text_to_arabic_digit"], [17, 2, 1, "", "text_to_num"], [17, 2, 1, "", "text_to_thai_digit"], [17, 2, 1, "", "thai_digit_to_arabic_digit"], [17, 2, 1, "", "thai_strftime"], [17, 2, 1, "", "thai_strptime"], [17, 2, 1, "", "thai_to_eng"], [17, 2, 1, "", "thai_word_tone_detector"], [17, 2, 1, "", "thaiword_to_date"], [17, 2, 1, "", "thaiword_to_num"], [17, 2, 1, "", "thaiword_to_time"], [17, 2, 1, "", "time_to_thaiword"], [17, 2, 1, "", "tis620_to_utf8"], [17, 2, 1, "", "tone_detector"], [17, 2, 1, "", "words_to_num"]], "pythainlp.util.Trie": [[17, 0, 1, "", "Node"], [17, 1, 1, "", "__init__"], [17, 1, 1, "", "add"], [17, 1, 1, "", "prefixes"], [17, 1, 1, "", "remove"]], "pythainlp.util.Trie.Node": [[17, 1, 1, "", "__init__"], [17, 3, 1, "", "children"], [17, 3, 1, "", "end"]], "pythainlp.util.spell_words": [[17, 2, 1, "", "spell_syllable"], [17, 2, 1, "", "spell_word"]], "pythainlp.wangchanberta": [[18, 0, 1, "", "NamedEntityRecognition"], [18, 0, 1, "", "ThaiNameTagger"], [18, 2, 1, "", "segment"]], "pythainlp.wangchanberta.NamedEntityRecognition": [[18, 1, 1, "", "__init__"], [18, 1, 1, "", "get_ner"]], "pythainlp.wangchanberta.ThaiNameTagger": [[18, 1, 1, "", "__init__"], [18, 1, 1, "", "get_ner"]], "pythainlp.word_vector": [[19, 0, 1, "", "WordVector"]], "pythainlp.word_vector.WordVector": [[19, 1, 1, "", "__init__"], [19, 1, 1, "", "doesnt_match"], [19, 1, 1, "", "get_model"], [19, 1, 1, "", "load_wordvector"], [19, 1, 1, "", "most_similar_cosmul"], [19, 1, 1, "", "sentence_vectorizer"], [19, 1, 1, "", "similarity"]], "pythainlp.wsd": [[20, 2, 1, "", "get_sense"]], "": [[25, 6, 1, "-", "PYTHAINLP_DATA_DIR"], [25, 6, 1, "-", "PYTHAINLP_READ_MODE"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:data", "5": "py:module", "6": "std:envvar"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "data", "Python data"], "5": ["py", "module", "Python module"], "6": ["std", "envvar", "environment variable"]}, "titleterms": {"pythainlp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "augment": 0, "modul": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "benchmark": 1, "token": [1, 12], "qualiti": 1, "chat": 2, "coref": 3, "corpu": 4, "conceptnet": 4, "tnc": 4, "ttc": 4, "oscar": 4, "util": [4, 17], "wordnet": 4, "definit": 4, "gener": 5, "khave": 6, "pars": 7, "soundex": 8, "refer": [8, 9, 11, 15, 17, 18, 19, 21], "spell": 9, "summar": 10, "keyword": 10, "extract": 10, "engin": [10, 11, 12, 15], "keybert": 10, "tag": 11, "tagger": 11, "perceptron": 11, "unigram": 11, "sentenc": 12, "level": 12, "crfcut": 12, "thaisumcut": 12, "word": 12, "attacut": 12, "deepcut": 12, "multi_cut": 12, "nlpo3": 12, "longest": 12, "pyicu": 12, "nercut": 12, "sefr_cut": 12, "oskut": 12, "newmm": 12, "subword": 12, "tcc": 12, "etcc": 12, "tool": 13, "translat": 14, "transliter": 15, "roman": 15, "thai2rom": 15, "royin": 15, "icu": 15, "ipa": 15, "thaig2p": 15, "tltk": 15, "iso_11940": 15, "ulmfit": 16, "wangchanberta": 18, "word_vector": 19, "depend": 19, "wsd": 20, "document": 21, "note": 21, "packag": 21, "indic": 21, "tabl": 21, "citat": 21, "faq": [22, 25], "command": 23, "line": 23, "get": 24, "start": 24, "tutori": 24, "notebook": 24, "instal": 25, "runtim": 25, "configur": 25, "licens": 26}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"pythainlp.augment": [[0, "pythainlp-augment"]], "Modules": [[0, "modules"], [1, "modules"], [3, "modules"], [4, "modules"], [5, "modules"], [6, "modules"], [7, "modules"], [8, "modules"], [9, "modules"], [10, "modules"], [11, "modules"], [12, "modules"], [13, "modules"], [14, "modules"], [15, "modules"], [16, "modules"], [17, "modules"], [18, "modules"], [19, "modules"], [20, "modules"]], "pythainlp.benchmarks": [[1, "pythainlp-benchmarks"]], "Tokenization": [[1, "tokenization"]], "Quality": [[1, "quality"]], "pythainlp.chat": [[2, "pythainlp-chat"]], "pythainlp.coref": [[3, "pythainlp-coref"]], "pythainlp.corpus": [[4, "pythainlp-corpus"]], "ConceptNet": [[4, "conceptnet"]], "TNC": [[4, "tnc"]], "TTC": [[4, "ttc"]], "OSCAR": [[4, "oscar"]], "Util": [[4, "util"]], "WordNet": [[4, "wordnet"]], "Definition": [[4, "definition"]], "pythainlp.generate": [[5, "pythainlp-generate"]], "pythainlp.khavee": [[6, "pythainlp-khavee"]], "pythainlp.parse": [[7, "pythainlp-parse"]], "pythainlp.soundex": [[8, "pythainlp-soundex"]], "References": [[8, "references"], [9, "references"], [11, "references"], [15, "references"], [17, "references"], [18, "references"], [19, "references"]], "pythainlp.spell": [[9, "pythainlp-spell"]], "pythainlp.summarize": [[10, "pythainlp-summarize"]], "Keyword Extraction Engines": [[10, "keyword-extraction-engines"]], "KeyBERT": [[10, "module-pythainlp.summarize.keybert"]], "pythainlp.tag": [[11, "pythainlp-tag"]], "Tagger Engines": [[11, "tagger-engines"]], "perceptron": [[11, "perceptron"]], "unigram": [[11, "unigram"]], "pythainlp.tokenize": [[12, "pythainlp-tokenize"]], "Tokenization Engines": [[12, "tokenization-engines"]], "Sentence level": [[12, "sentence-level"]], "crfcut": [[12, "module-pythainlp.tokenize.crfcut"]], "thaisumcut": [[12, "module-pythainlp.tokenize.thaisumcut"]], "Word level": [[12, "word-level"]], "attacut": [[12, "id8"]], "deepcut": [[12, "id12"]], "multi_cut": [[12, "module-pythainlp.tokenize.multi_cut"]], "nlpo3": [[12, "id16"]], "longest": [[12, "module-pythainlp.tokenize.longest"]], "pyicu": [[12, "id21"]], "nercut": [[12, "module-pythainlp.tokenize.nercut"]], "sefr_cut": [[12, "module-pythainlp.tokenize.sefr_cut"]], "oskut": [[12, "id26"]], "newmm": [[12, "newmm"]], "Subword level": [[12, "subword-level"]], "tcc": [[12, "module-pythainlp.tokenize.tcc"]], "etcc": [[12, "module-pythainlp.tokenize.etcc"]], "pythainlp.tools": [[13, "pythainlp-tools"]], "pythainlp.translate": [[14, "pythainlp-translate"]], "pythainlp.transliterate": [[15, "pythainlp-transliterate"]], "Romanize Engines": [[15, "romanize-engines"]], "thai2rom": [[15, "module-pythainlp.transliterate.thai2rom.romanize"]], "royin": [[15, "module-pythainlp.transliterate.royin.romanize"]], "Transliterate Engines": [[15, "transliterate-engines"]], "icu": [[15, "module-pythainlp.transliterate.pyicu"]], "ipa": [[15, "module-pythainlp.transliterate.ipa"]], "thaig2p": [[15, "module-pythainlp.transliterate.thaig2p.transliterate"]], "tltk": [[15, "id7"]], "iso_11940": [[15, "module-pythainlp.transliterate.iso_11940"]], "pythainlp.ulmfit": [[16, "pythainlp-ulmfit"]], "pythainlp.util": [[17, "pythainlp-util"]], "pythainlp.wangchanberta": [[18, "pythainlp-wangchanberta"]], "pythainlp.word_vector": [[19, "pythainlp-word-vector"]], "Dependencies": [[19, "dependencies"]], "pythainlp.wsd": [[20, "pythainlp-wsd"]], "PyThaiNLP documentation": [[21, "pythainlp-documentation"]], "Notes": [[21, null]], "Package reference:": [[21, null]], "Indices and tables": [[21, "indices-and-tables"]], "Citations": [[21, "citations"]], "FAQ": [[22, "faq"], [25, "faq"]], "Command Line": [[23, "command-line"]], "Getting Started": [[24, "getting-started"]], "Tutorial Notebooks": [[24, "tutorial-notebooks"]], "Installation": [[25, "installation"]], "Runtime Configurations": [[25, "runtime-configurations"]], "License": [[26, "license"]]}, "indexentries": {"bpembaug (class in pythainlp.augment.word2vec.bpemb_wv)": [[0, "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug"]], "fasttextaug (class in pythainlp.augment.lm)": [[0, "pythainlp.augment.lm.FastTextAug"]], "ltw2vaug (class in pythainlp.augment.word2vec)": [[0, "pythainlp.augment.word2vec.LTW2VAug"]], "thai2fitaug (class in pythainlp.augment.word2vec)": [[0, "pythainlp.augment.word2vec.Thai2fitAug"]], "thai2transformersaug (class in pythainlp.augment.lm)": [[0, "pythainlp.augment.lm.Thai2transformersAug"]], "word2vecaug (class in pythainlp.augment.word2vec)": [[0, "pythainlp.augment.word2vec.Word2VecAug"]], "wordnetaug (class in pythainlp.augment)": [[0, "pythainlp.augment.WordNetAug"]], "__init__() (pythainlp.augment.wordnetaug method)": [[0, "pythainlp.augment.WordNetAug.__init__"]], "__init__() (pythainlp.augment.lm.fasttextaug method)": [[0, "pythainlp.augment.lm.FastTextAug.__init__"]], "__init__() (pythainlp.augment.lm.thai2transformersaug method)": [[0, "pythainlp.augment.lm.Thai2transformersAug.__init__"]], "__init__() (pythainlp.augment.word2vec.ltw2vaug method)": [[0, "pythainlp.augment.word2vec.LTW2VAug.__init__"]], "__init__() (pythainlp.augment.word2vec.thai2fitaug method)": [[0, "pythainlp.augment.word2vec.Thai2fitAug.__init__"]], "__init__() (pythainlp.augment.word2vec.word2vecaug method)": [[0, "pythainlp.augment.word2vec.Word2VecAug.__init__"]], "__init__() (pythainlp.augment.word2vec.bpemb_wv.bpembaug method)": [[0, "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug.__init__"]], "augment() (pythainlp.augment.wordnetaug method)": [[0, "pythainlp.augment.WordNetAug.augment"]], "augment() (pythainlp.augment.lm.fasttextaug method)": [[0, "pythainlp.augment.lm.FastTextAug.augment"]], "augment() (pythainlp.augment.lm.thai2transformersaug method)": [[0, "pythainlp.augment.lm.Thai2transformersAug.augment"]], "augment() (pythainlp.augment.word2vec.ltw2vaug method)": [[0, "pythainlp.augment.word2vec.LTW2VAug.augment"]], "augment() (pythainlp.augment.word2vec.thai2fitaug method)": [[0, "pythainlp.augment.word2vec.Thai2fitAug.augment"]], "augment() (pythainlp.augment.word2vec.word2vecaug method)": [[0, "pythainlp.augment.word2vec.Word2VecAug.augment"]], "augment() (pythainlp.augment.word2vec.bpemb_wv.bpembaug method)": [[0, "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug.augment"]], "find_synonyms() (pythainlp.augment.wordnetaug method)": [[0, "pythainlp.augment.WordNetAug.find_synonyms"]], "generate() (pythainlp.augment.lm.thai2transformersaug method)": [[0, "pythainlp.augment.lm.Thai2transformersAug.generate"]], "load_w2v() (pythainlp.augment.word2vec.ltw2vaug method)": [[0, "pythainlp.augment.word2vec.LTW2VAug.load_w2v"]], "load_w2v() (pythainlp.augment.word2vec.thai2fitaug method)": [[0, "pythainlp.augment.word2vec.Thai2fitAug.load_w2v"]], "load_w2v() (pythainlp.augment.word2vec.bpemb_wv.bpembaug method)": [[0, "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug.load_w2v"]], "modify_sent() (pythainlp.augment.lm.fasttextaug method)": [[0, "pythainlp.augment.lm.FastTextAug.modify_sent"]], "modify_sent() (pythainlp.augment.word2vec.word2vecaug method)": [[0, "pythainlp.augment.word2vec.Word2VecAug.modify_sent"]], "tokenize() (pythainlp.augment.lm.fasttextaug method)": [[0, "pythainlp.augment.lm.FastTextAug.tokenize"]], "tokenizer() (pythainlp.augment.word2vec.ltw2vaug method)": [[0, "pythainlp.augment.word2vec.LTW2VAug.tokenizer"]], "tokenizer() (pythainlp.augment.word2vec.thai2fitaug method)": [[0, "pythainlp.augment.word2vec.Thai2fitAug.tokenizer"]], "tokenizer() (pythainlp.augment.word2vec.bpemb_wv.bpembaug method)": [[0, "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug.tokenizer"]], "benchmark() (in module pythainlp.benchmarks.word_tokenization)": [[1, "pythainlp.benchmarks.word_tokenization.benchmark"]], "compute_stats() (in module pythainlp.benchmarks.word_tokenization)": [[1, "pythainlp.benchmarks.word_tokenization.compute_stats"]], "preprocessing() (in module pythainlp.benchmarks.word_tokenization)": [[1, "pythainlp.benchmarks.word_tokenization.preprocessing"]], "chatbotmodel (class in pythainlp.chat)": [[2, "pythainlp.chat.ChatBotModel"]], "__init__() (pythainlp.chat.chatbotmodel method)": [[2, "pythainlp.chat.ChatBotModel.__init__"]], "chat() (pythainlp.chat.chatbotmodel method)": [[2, "pythainlp.chat.ChatBotModel.chat"]], "load_model() (pythainlp.chat.chatbotmodel method)": [[2, "pythainlp.chat.ChatBotModel.load_model"]], "reset_chat() (pythainlp.chat.chatbotmodel method)": [[2, "pythainlp.chat.ChatBotModel.reset_chat"]], "coreference_resolution() (in module pythainlp.coref)": [[3, "pythainlp.coref.coreference_resolution"]], "all_lemma_names() (in module pythainlp.corpus.wordnet)": [[4, "pythainlp.corpus.wordnet.all_lemma_names"]], "all_synsets() (in module pythainlp.corpus.wordnet)": [[4, "pythainlp.corpus.wordnet.all_synsets"]], "bigram_word_freqs() (in module pythainlp.corpus.tnc)": [[4, "pythainlp.corpus.tnc.bigram_word_freqs"]], "countries() (in module pythainlp.corpus)": [[4, "pythainlp.corpus.countries"]], "custom_lemmas() (in module pythainlp.corpus.wordnet)": [[4, "pythainlp.corpus.wordnet.custom_lemmas"]], "download() (in module pythainlp.corpus)": [[4, "pythainlp.corpus.download"]], "edges() (in module pythainlp.corpus.conceptnet)": [[4, "pythainlp.corpus.conceptnet.edges"]], "find_badwords() (in module pythainlp.corpus.util)": [[4, "pythainlp.corpus.util.find_badwords"]], "get_corpus() (in module pythainlp.corpus)": [[4, "pythainlp.corpus.get_corpus"]], "get_corpus_db() (in module pythainlp.corpus)": [[4, "pythainlp.corpus.get_corpus_db"]], "get_corpus_db_detail() (in module pythainlp.corpus)": [[4, "pythainlp.corpus.get_corpus_db_detail"]], "get_corpus_default_db() (in module pythainlp.corpus)": [[4, "pythainlp.corpus.get_corpus_default_db"]], "get_corpus_path() (in module pythainlp.corpus)": [[4, "pythainlp.corpus.get_corpus_path"]], "get_transliteration_dict() (in module pythainlp.corpus.th_en_translit)": [[4, "pythainlp.corpus.th_en_translit.get_transliteration_dict"]], "langs() (in module pythainlp.corpus.wordnet)": [[4, "pythainlp.corpus.wordnet.langs"]], "lch_similarity() (in module pythainlp.corpus.wordnet)": [[4, "pythainlp.corpus.wordnet.lch_similarity"]], "lemma() (in module pythainlp.corpus.wordnet)": [[4, "pythainlp.corpus.wordnet.lemma"]], "lemma_from_key() (in module pythainlp.corpus.wordnet)": [[4, "pythainlp.corpus.wordnet.lemma_from_key"]], "lemmas() (in module pythainlp.corpus.wordnet)": [[4, "pythainlp.corpus.wordnet.lemmas"]], "morphy() (in module pythainlp.corpus.wordnet)": [[4, "pythainlp.corpus.wordnet.morphy"]], "path_similarity() (in module pythainlp.corpus.wordnet)": [[4, "pythainlp.corpus.wordnet.path_similarity"]], "provinces() (in module pythainlp.corpus)": [[4, "pythainlp.corpus.provinces"]], "remove() (in module pythainlp.corpus)": [[4, "pythainlp.corpus.remove"]], "revise_newmm_default_wordset() (in module pythainlp.corpus.util)": [[4, "pythainlp.corpus.util.revise_newmm_default_wordset"]], "revise_wordset() (in module pythainlp.corpus.util)": [[4, "pythainlp.corpus.util.revise_wordset"]], "synset() (in module pythainlp.corpus.wordnet)": [[4, "pythainlp.corpus.wordnet.synset"]], "synsets() (in module pythainlp.corpus.wordnet)": [[4, "pythainlp.corpus.wordnet.synsets"]], "thai_dict() (in module pythainlp.corpus)": [[4, "pythainlp.corpus.thai_dict"]], "thai_family_names() (in module pythainlp.corpus)": [[4, "pythainlp.corpus.thai_family_names"]], "thai_female_names() (in module pythainlp.corpus)": [[4, "pythainlp.corpus.thai_female_names"]], "thai_male_names() (in module pythainlp.corpus)": [[4, "pythainlp.corpus.thai_male_names"]], "thai_negations() (in module pythainlp.corpus)": [[4, "pythainlp.corpus.thai_negations"]], "thai_orst_words() (in module pythainlp.corpus)": [[4, "pythainlp.corpus.thai_orst_words"]], "thai_stopwords() (in module pythainlp.corpus)": [[4, "pythainlp.corpus.thai_stopwords"]], "thai_syllables() (in module pythainlp.corpus)": [[4, "pythainlp.corpus.thai_syllables"]], "thai_words() (in module pythainlp.corpus)": [[4, "pythainlp.corpus.thai_words"]], "thai_wsd_dict() (in module pythainlp.corpus)": [[4, "pythainlp.corpus.thai_wsd_dict"]], "trigram_word_freqs() (in module pythainlp.corpus.tnc)": [[4, "pythainlp.corpus.tnc.trigram_word_freqs"]], "unigram_word_freqs() (in module pythainlp.corpus.oscar)": [[4, "pythainlp.corpus.oscar.unigram_word_freqs"]], "unigram_word_freqs() (in module pythainlp.corpus.tnc)": [[4, "pythainlp.corpus.tnc.unigram_word_freqs"]], "unigram_word_freqs() (in module pythainlp.corpus.ttc)": [[4, "pythainlp.corpus.ttc.unigram_word_freqs"]], "word_freqs() (in module pythainlp.corpus.oscar)": [[4, "pythainlp.corpus.oscar.word_freqs"]], "word_freqs() (in module pythainlp.corpus.tnc)": [[4, "pythainlp.corpus.tnc.word_freqs"]], "word_freqs() (in module pythainlp.corpus.ttc)": [[4, "pythainlp.corpus.ttc.word_freqs"]], "wup_similarity() (in module pythainlp.corpus.wordnet)": [[4, "pythainlp.corpus.wordnet.wup_similarity"]], "bigram (class in pythainlp.generate)": [[5, "pythainlp.generate.Bigram"]], "trigram (class in pythainlp.generate)": [[5, "pythainlp.generate.Trigram"]], "unigram (class in pythainlp.generate)": [[5, "pythainlp.generate.Unigram"]], "wangchanglm (class in pythainlp.generate.wangchanglm)": [[5, "pythainlp.generate.wangchanglm.WangChanGLM"]], "__init__() (pythainlp.generate.bigram method)": [[5, "pythainlp.generate.Bigram.__init__"]], "__init__() (pythainlp.generate.trigram method)": [[5, "pythainlp.generate.Trigram.__init__"]], "__init__() (pythainlp.generate.unigram method)": [[5, "pythainlp.generate.Unigram.__init__"]], "__init__() (pythainlp.generate.wangchanglm.wangchanglm method)": [[5, "pythainlp.generate.wangchanglm.WangChanGLM.__init__"]], "gen_instruct() (pythainlp.generate.wangchanglm.wangchanglm method)": [[5, "pythainlp.generate.wangchanglm.WangChanGLM.gen_instruct"]], "gen_sentence() (in module pythainlp.generate.thai2fit)": [[5, "pythainlp.generate.thai2fit.gen_sentence"]], "gen_sentence() (pythainlp.generate.bigram method)": [[5, "pythainlp.generate.Bigram.gen_sentence"]], "gen_sentence() (pythainlp.generate.trigram method)": [[5, "pythainlp.generate.Trigram.gen_sentence"]], "gen_sentence() (pythainlp.generate.unigram method)": [[5, "pythainlp.generate.Unigram.gen_sentence"]], "instruct_generate() (pythainlp.generate.wangchanglm.wangchanglm method)": [[5, "pythainlp.generate.wangchanglm.WangChanGLM.instruct_generate"]], "is_exclude() (pythainlp.generate.wangchanglm.wangchanglm method)": [[5, "pythainlp.generate.wangchanglm.WangChanGLM.is_exclude"]], "load_model() (pythainlp.generate.wangchanglm.wangchanglm method)": [[5, "pythainlp.generate.wangchanglm.WangChanGLM.load_model"]], "prob() (pythainlp.generate.bigram method)": [[5, "pythainlp.generate.Bigram.prob"]], "prob() (pythainlp.generate.trigram method)": [[5, "pythainlp.generate.Trigram.prob"]], "khaveeverifier (class in pythainlp.khavee)": [[6, "pythainlp.khavee.KhaveeVerifier"]], "__dict__ (pythainlp.khavee.khaveeverifier attribute)": [[6, "pythainlp.khavee.KhaveeVerifier.__dict__"]], "__init__() (pythainlp.khavee.khaveeverifier method)": [[6, "pythainlp.khavee.KhaveeVerifier.__init__"]], "__module__ (pythainlp.khavee.khaveeverifier attribute)": [[6, "pythainlp.khavee.KhaveeVerifier.__module__"]], "check_aek_too() (pythainlp.khavee.khaveeverifier method)": [[6, "pythainlp.khavee.KhaveeVerifier.check_aek_too"]], "check_karu_lahu() (pythainlp.khavee.khaveeverifier method)": [[6, "pythainlp.khavee.KhaveeVerifier.check_karu_lahu"]], "check_klon() (pythainlp.khavee.khaveeverifier method)": [[6, "pythainlp.khavee.KhaveeVerifier.check_klon"]], "check_marttra() (pythainlp.khavee.khaveeverifier method)": [[6, "pythainlp.khavee.KhaveeVerifier.check_marttra"]], "check_sara() (pythainlp.khavee.khaveeverifier method)": [[6, "pythainlp.khavee.KhaveeVerifier.check_sara"]], "handle_karun_sound_silence() (pythainlp.khavee.khaveeverifier method)": [[6, "pythainlp.khavee.KhaveeVerifier.handle_karun_sound_silence"]], "is_sumpus() (pythainlp.khavee.khaveeverifier method)": [[6, "pythainlp.khavee.KhaveeVerifier.is_sumpus"]], "dependency_parsing() (in module pythainlp.parse)": [[7, "pythainlp.parse.dependency_parsing"]], "audio_vector() (in module pythainlp.soundex.sound)": [[8, "pythainlp.soundex.sound.audio_vector"]], "lk82() (in module pythainlp.soundex)": [[8, "pythainlp.soundex.lk82"]], "metasound() (in module pythainlp.soundex)": [[8, "pythainlp.soundex.metasound"]], "prayut_and_somchaip() (in module pythainlp.soundex)": [[8, "pythainlp.soundex.prayut_and_somchaip"]], "soundex() (in module pythainlp.soundex)": [[8, "pythainlp.soundex.soundex"]], "udom83() (in module pythainlp.soundex)": [[8, "pythainlp.soundex.udom83"]], "word2audio() (in module pythainlp.soundex.sound)": [[8, "pythainlp.soundex.sound.word2audio"]], "word_approximation() (in module pythainlp.soundex.sound)": [[8, "pythainlp.soundex.sound.word_approximation"]], "default_spell_checker (in module pythainlp.spell)": [[9, "pythainlp.spell.DEFAULT_SPELL_CHECKER"]], "norvigspellchecker (class in pythainlp.spell)": [[9, "pythainlp.spell.NorvigSpellChecker"]], "__dict__ (pythainlp.spell.norvigspellchecker attribute)": [[9, "pythainlp.spell.NorvigSpellChecker.__dict__"]], "__init__() (pythainlp.spell.norvigspellchecker method)": [[9, "pythainlp.spell.NorvigSpellChecker.__init__"]], "__module__ (pythainlp.spell.norvigspellchecker attribute)": [[9, "pythainlp.spell.NorvigSpellChecker.__module__"]], "correct() (in module pythainlp.spell)": [[9, "pythainlp.spell.correct"]], "correct() (pythainlp.spell.norvigspellchecker method)": [[9, "pythainlp.spell.NorvigSpellChecker.correct"]], "correct_sent() (in module pythainlp.spell)": [[9, "pythainlp.spell.correct_sent"]], "dictionary() (pythainlp.spell.norvigspellchecker method)": [[9, "pythainlp.spell.NorvigSpellChecker.dictionary"]], "freq() (pythainlp.spell.norvigspellchecker method)": [[9, "pythainlp.spell.NorvigSpellChecker.freq"]], "known() (pythainlp.spell.norvigspellchecker method)": [[9, "pythainlp.spell.NorvigSpellChecker.known"]], "prob() (pythainlp.spell.norvigspellchecker method)": [[9, "pythainlp.spell.NorvigSpellChecker.prob"]], "spell() (in module pythainlp.spell)": [[9, "pythainlp.spell.spell"]], "spell() (pythainlp.spell.norvigspellchecker method)": [[9, "pythainlp.spell.NorvigSpellChecker.spell"]], "spell_sent() (in module pythainlp.spell)": [[9, "pythainlp.spell.spell_sent"]], "keybert (class in pythainlp.summarize.keybert)": [[10, "id0"], [10, "pythainlp.summarize.keybert.KeyBERT"]], "__init__() (pythainlp.summarize.keybert.keybert method)": [[10, "id5"], [10, "pythainlp.summarize.keybert.KeyBERT.__init__"]], "embed() (pythainlp.summarize.keybert.keybert method)": [[10, "id9"], [10, "pythainlp.summarize.keybert.KeyBERT.embed"]], "extract_keywords() (in module pythainlp.summarize)": [[10, "pythainlp.summarize.extract_keywords"]], "extract_keywords() (pythainlp.summarize.keybert.keybert method)": [[10, "id6"], [10, "pythainlp.summarize.keybert.KeyBERT.extract_keywords"]], "module": [[10, "module-pythainlp.summarize.keybert"], [12, "module-pythainlp.tokenize.attacut"], [12, "module-pythainlp.tokenize.crfcut"], [12, "module-pythainlp.tokenize.deepcut"], [12, "module-pythainlp.tokenize.etcc"], [12, "module-pythainlp.tokenize.longest"], [12, "module-pythainlp.tokenize.multi_cut"], [12, "module-pythainlp.tokenize.nercut"], [12, "module-pythainlp.tokenize.newmm"], [12, "module-pythainlp.tokenize.nlpo3"], [12, "module-pythainlp.tokenize.oskut"], [12, "module-pythainlp.tokenize.pyicu"], [12, "module-pythainlp.tokenize.sefr_cut"], [12, "module-pythainlp.tokenize.tcc"], [12, "module-pythainlp.tokenize.thaisumcut"], [15, "module-pythainlp.transliterate.ipa"], [15, "module-pythainlp.transliterate.iso_11940"], [15, "module-pythainlp.transliterate.pyicu"], [15, "module-pythainlp.transliterate.royin.romanize"], [15, "module-pythainlp.transliterate.thai2rom.romanize"], [15, "module-pythainlp.transliterate.thaig2p.transliterate"]], "pythainlp.summarize.keybert": [[10, "module-pythainlp.summarize.keybert"]], "summarize() (in module pythainlp.summarize)": [[10, "pythainlp.summarize.summarize"]], "ner (class in pythainlp.tag)": [[11, "pythainlp.tag.NER"]], "nner (class in pythainlp.tag)": [[11, "pythainlp.tag.NNER"]], "thainametagger (class in pythainlp.tag.thainer)": [[11, "pythainlp.tag.thainer.ThaiNameTagger"]], "__init__() (pythainlp.tag.ner method)": [[11, "pythainlp.tag.NER.__init__"]], "__init__() (pythainlp.tag.nner method)": [[11, "pythainlp.tag.NNER.__init__"]], "__init__() (pythainlp.tag.thainer.thainametagger method)": [[11, "pythainlp.tag.thainer.ThaiNameTagger.__init__"]], "chunk_parse() (in module pythainlp.tag)": [[11, "pythainlp.tag.chunk_parse"]], "get_ner() (in module pythainlp.tag.tltk)": [[11, "pythainlp.tag.tltk.get_ner"]], "get_ner() (pythainlp.tag.thainer.thainametagger method)": [[11, "pythainlp.tag.thainer.ThaiNameTagger.get_ner"]], "load_engine() (pythainlp.tag.ner method)": [[11, "pythainlp.tag.NER.load_engine"]], "load_engine() (pythainlp.tag.nner method)": [[11, "pythainlp.tag.NNER.load_engine"]], "pos_tag() (in module pythainlp.tag)": [[11, "pythainlp.tag.pos_tag"]], "pos_tag_sents() (in module pythainlp.tag)": [[11, "pythainlp.tag.pos_tag_sents"]], "tag() (pythainlp.tag.ner method)": [[11, "pythainlp.tag.NER.tag"]], "tag() (pythainlp.tag.nner method)": [[11, "pythainlp.tag.NNER.tag"]], "tag_provinces() (in module pythainlp.tag)": [[11, "pythainlp.tag.tag_provinces"]], "attacuttokenizer (class in pythainlp.tokenize.attacut)": [[12, "id9"], [12, "pythainlp.tokenize.attacut.AttacutTokenizer"]], "latticestring (class in pythainlp.tokenize.multi_cut)": [[12, "pythainlp.tokenize.multi_cut.LatticeString"]], "longestmatchtokenizer (class in pythainlp.tokenize.longest)": [[12, "pythainlp.tokenize.longest.LongestMatchTokenizer"]], "thaisentencesegmentor (class in pythainlp.tokenize.thaisumcut)": [[12, "id6"], [12, "pythainlp.tokenize.thaisumcut.ThaiSentenceSegmentor"]], "tokenizer (class in pythainlp.tokenize)": [[12, "pythainlp.tokenize.Tokenizer"]], "__init__() (pythainlp.tokenize.tokenizer method)": [[12, "pythainlp.tokenize.Tokenizer.__init__"]], "__init__() (pythainlp.tokenize.attacut.attacuttokenizer method)": [[12, "id10"], [12, "pythainlp.tokenize.attacut.AttacutTokenizer.__init__"]], "__init__() (pythainlp.tokenize.longest.longestmatchtokenizer method)": [[12, "pythainlp.tokenize.longest.LongestMatchTokenizer.__init__"]], "__init__() (pythainlp.tokenize.multi_cut.latticestring method)": [[12, "pythainlp.tokenize.multi_cut.LatticeString.__init__"]], "clause_tokenize() (in module pythainlp.tokenize)": [[12, "pythainlp.tokenize.clause_tokenize"]], "extract_features() (in module pythainlp.tokenize.crfcut)": [[12, "id0"], [12, "pythainlp.tokenize.crfcut.extract_features"]], "find_all_segment() (in module pythainlp.tokenize.multi_cut)": [[12, "id15"], [12, "pythainlp.tokenize.multi_cut.find_all_segment"]], "list_to_string() (in module pythainlp.tokenize.thaisumcut)": [[12, "id4"], [12, "pythainlp.tokenize.thaisumcut.list_to_string"]], "load_dict() (in module pythainlp.tokenize.nlpo3)": [[12, "id17"], [12, "pythainlp.tokenize.nlpo3.load_dict"]], "middle_cut() (in module pythainlp.tokenize.thaisumcut)": [[12, "id5"], [12, "pythainlp.tokenize.thaisumcut.middle_cut"]], "mmcut() (in module pythainlp.tokenize.multi_cut)": [[12, "pythainlp.tokenize.multi_cut.mmcut"]], "paragraph_tokenize() (in module pythainlp.tokenize)": [[12, "pythainlp.tokenize.paragraph_tokenize"]], "pythainlp.tokenize.attacut": [[12, "module-pythainlp.tokenize.attacut"]], "pythainlp.tokenize.crfcut": [[12, "module-pythainlp.tokenize.crfcut"]], "pythainlp.tokenize.deepcut": [[12, "module-pythainlp.tokenize.deepcut"]], "pythainlp.tokenize.etcc": [[12, "module-pythainlp.tokenize.etcc"]], "pythainlp.tokenize.longest": [[12, "module-pythainlp.tokenize.longest"]], "pythainlp.tokenize.multi_cut": [[12, "module-pythainlp.tokenize.multi_cut"]], "pythainlp.tokenize.nercut": [[12, "module-pythainlp.tokenize.nercut"]], "pythainlp.tokenize.newmm": [[12, "module-pythainlp.tokenize.newmm"]], "pythainlp.tokenize.nlpo3": [[12, "module-pythainlp.tokenize.nlpo3"]], "pythainlp.tokenize.oskut": [[12, "module-pythainlp.tokenize.oskut"]], "pythainlp.tokenize.pyicu": [[12, "module-pythainlp.tokenize.pyicu"]], "pythainlp.tokenize.sefr_cut": [[12, "module-pythainlp.tokenize.sefr_cut"]], "pythainlp.tokenize.tcc": [[12, "module-pythainlp.tokenize.tcc"]], "pythainlp.tokenize.thaisumcut": [[12, "module-pythainlp.tokenize.thaisumcut"]], "segment() (in module pythainlp.tokenize.attacut)": [[12, "pythainlp.tokenize.attacut.segment"]], "segment() (in module pythainlp.tokenize.crfcut)": [[12, "id3"], [12, "pythainlp.tokenize.crfcut.segment"]], "segment() (in module pythainlp.tokenize.deepcut)": [[12, "pythainlp.tokenize.deepcut.segment"]], "segment() (in module pythainlp.tokenize.etcc)": [[12, "id32"], [12, "pythainlp.tokenize.etcc.segment"]], "segment() (in module pythainlp.tokenize.longest)": [[12, "id20"], [12, "pythainlp.tokenize.longest.segment"]], "segment() (in module pythainlp.tokenize.multi_cut)": [[12, "id14"], [12, "pythainlp.tokenize.multi_cut.segment"]], "segment() (in module pythainlp.tokenize.nercut)": [[12, "id23"], [12, "pythainlp.tokenize.nercut.segment"]], "segment() (in module pythainlp.tokenize.newmm)": [[12, "id28"], [12, "pythainlp.tokenize.newmm.segment"]], "segment() (in module pythainlp.tokenize.nlpo3)": [[12, "id18"], [12, "pythainlp.tokenize.nlpo3.segment"]], "segment() (in module pythainlp.tokenize.oskut)": [[12, "pythainlp.tokenize.oskut.segment"]], "segment() (in module pythainlp.tokenize.pyicu)": [[12, "pythainlp.tokenize.pyicu.segment"]], "segment() (in module pythainlp.tokenize.sefr_cut)": [[12, "pythainlp.tokenize.sefr_cut.segment"]], "segment() (in module pythainlp.tokenize.tcc)": [[12, "id29"], [12, "pythainlp.tokenize.tcc.segment"]], "segment() (in module pythainlp.tokenize.tcc_p)": [[12, "pythainlp.tokenize.tcc_p.segment"]], "sent_tokenize() (in module pythainlp.tokenize)": [[12, "pythainlp.tokenize.sent_tokenize"]], "set_tokenize_engine() (pythainlp.tokenize.tokenizer method)": [[12, "pythainlp.tokenize.Tokenizer.set_tokenize_engine"]], "split_into_sentences() (pythainlp.tokenize.thaisumcut.thaisentencesegmentor method)": [[12, "id7"], [12, "pythainlp.tokenize.thaisumcut.ThaiSentenceSegmentor.split_into_sentences"]], "subword_tokenize() (in module pythainlp.tokenize)": [[12, "pythainlp.tokenize.subword_tokenize"]], "tcc() (in module pythainlp.tokenize.tcc)": [[12, "id30"], [12, "pythainlp.tokenize.tcc.tcc"]], "tcc() (in module pythainlp.tokenize.tcc_p)": [[12, "pythainlp.tokenize.tcc_p.tcc"]], "tcc_pos() (in module pythainlp.tokenize.tcc)": [[12, "id31"], [12, "pythainlp.tokenize.tcc.tcc_pos"]], "tcc_pos() (in module pythainlp.tokenize.tcc_p)": [[12, "pythainlp.tokenize.tcc_p.tcc_pos"]], "tokenize() (pythainlp.tokenize.attacut.attacuttokenizer method)": [[12, "id11"], [12, "pythainlp.tokenize.attacut.AttacutTokenizer.tokenize"]], "tokenize() (pythainlp.tokenize.longest.longestmatchtokenizer method)": [[12, "pythainlp.tokenize.longest.LongestMatchTokenizer.tokenize"]], "word_detokenize() (in module pythainlp.tokenize)": [[12, "pythainlp.tokenize.word_detokenize"]], "word_tokenize() (in module pythainlp.tokenize)": [[12, "pythainlp.tokenize.word_tokenize"]], "word_tokenize() (pythainlp.tokenize.tokenizer method)": [[12, "pythainlp.tokenize.Tokenizer.word_tokenize"]], "pythainlp_data_dir": [[13, "index-0"], [25, "envvar-PYTHAINLP_DATA_DIR"]], "environment variable": [[13, "index-0"], [25, "envvar-PYTHAINLP_DATA_DIR"], [25, "envvar-PYTHAINLP_READ_MODE"]], "get_full_data_path() (in module pythainlp.tools)": [[13, "pythainlp.tools.get_full_data_path"]], "get_pythainlp_data_path() (in module pythainlp.tools)": [[13, "pythainlp.tools.get_pythainlp_data_path"]], "get_pythainlp_path() (in module pythainlp.tools)": [[13, "pythainlp.tools.get_pythainlp_path"]], "misspell() (in module pythainlp.tools.misspell)": [[13, "pythainlp.tools.misspell.misspell"]], "enthtranslator (class in pythainlp.translate.en_th)": [[14, "pythainlp.translate.en_th.EnThTranslator"]], "thentranslator (class in pythainlp.translate.en_th)": [[14, "pythainlp.translate.en_th.ThEnTranslator"]], "thfrtranslator (class in pythainlp.translate.th_fr)": [[14, "pythainlp.translate.th_fr.ThFrTranslator"]], "thzhtranslator (class in pythainlp.translate.zh_th)": [[14, "pythainlp.translate.zh_th.ThZhTranslator"]], "translate (class in pythainlp.translate)": [[14, "pythainlp.translate.Translate"]], "zhthtranslator (class in pythainlp.translate.zh_th)": [[14, "pythainlp.translate.zh_th.ZhThTranslator"]], "__init__() (pythainlp.translate.translate method)": [[14, "pythainlp.translate.Translate.__init__"]], "__init__() (pythainlp.translate.en_th.enthtranslator method)": [[14, "pythainlp.translate.en_th.EnThTranslator.__init__"]], "__init__() (pythainlp.translate.en_th.thentranslator method)": [[14, "pythainlp.translate.en_th.ThEnTranslator.__init__"]], "__init__() (pythainlp.translate.th_fr.thfrtranslator method)": [[14, "pythainlp.translate.th_fr.ThFrTranslator.__init__"]], "__init__() (pythainlp.translate.zh_th.thzhtranslator method)": [[14, "pythainlp.translate.zh_th.ThZhTranslator.__init__"]], "__init__() (pythainlp.translate.zh_th.zhthtranslator method)": [[14, "pythainlp.translate.zh_th.ZhThTranslator.__init__"]], "download_model_all() (in module pythainlp.translate.en_th)": [[14, "pythainlp.translate.en_th.download_model_all"]], "load_model() (pythainlp.translate.translate method)": [[14, "pythainlp.translate.Translate.load_model"]], "translate() (pythainlp.translate.translate method)": [[14, "pythainlp.translate.Translate.translate"]], "translate() (pythainlp.translate.en_th.enthtranslator method)": [[14, "pythainlp.translate.en_th.EnThTranslator.translate"]], "translate() (pythainlp.translate.en_th.thentranslator method)": [[14, "pythainlp.translate.en_th.ThEnTranslator.translate"]], "translate() (pythainlp.translate.th_fr.thfrtranslator method)": [[14, "pythainlp.translate.th_fr.ThFrTranslator.translate"]], "translate() (pythainlp.translate.zh_th.thzhtranslator method)": [[14, "pythainlp.translate.zh_th.ThZhTranslator.translate"]], "translate() (pythainlp.translate.zh_th.zhthtranslator method)": [[14, "pythainlp.translate.zh_th.ZhThTranslator.translate"]], "wunsentransliterate (class in pythainlp.transliterate.wunsen)": [[15, "pythainlp.transliterate.wunsen.WunsenTransliterate"]], "__init__() (pythainlp.transliterate.wunsen.wunsentransliterate method)": [[15, "pythainlp.transliterate.wunsen.WunsenTransliterate.__init__"]], "pronunciate() (in module pythainlp.transliterate)": [[15, "pythainlp.transliterate.pronunciate"]], "puan() (in module pythainlp.transliterate)": [[15, "pythainlp.transliterate.puan"]], "pythainlp.transliterate.ipa": [[15, "module-pythainlp.transliterate.ipa"]], "pythainlp.transliterate.iso_11940": [[15, "module-pythainlp.transliterate.iso_11940"]], "pythainlp.transliterate.pyicu": [[15, "module-pythainlp.transliterate.pyicu"]], "pythainlp.transliterate.royin.romanize": [[15, "module-pythainlp.transliterate.royin.romanize"]], "pythainlp.transliterate.thai2rom.romanize": [[15, "module-pythainlp.transliterate.thai2rom.romanize"]], "pythainlp.transliterate.thaig2p.transliterate": [[15, "module-pythainlp.transliterate.thaig2p.transliterate"]], "romanize() (in module pythainlp.transliterate)": [[15, "pythainlp.transliterate.romanize"]], "romanize() (in module pythainlp.transliterate.tltk)": [[15, "pythainlp.transliterate.tltk.romanize"]], "tltk_g2p() (in module pythainlp.transliterate.tltk)": [[15, "pythainlp.transliterate.tltk.tltk_g2p"]], "tltk_ipa() (in module pythainlp.transliterate.tltk)": [[15, "pythainlp.transliterate.tltk.tltk_ipa"]], "trans_list() (in module pythainlp.transliterate.ipa)": [[15, "id5"], [15, "pythainlp.transliterate.ipa.trans_list"]], "transliterate() (in module pythainlp.transliterate)": [[15, "pythainlp.transliterate.transliterate"]], "transliterate() (in module pythainlp.transliterate.ipa)": [[15, "id4"], [15, "pythainlp.transliterate.ipa.transliterate"]], "transliterate() (in module pythainlp.transliterate.iso_11940)": [[15, "pythainlp.transliterate.iso_11940.transliterate"]], "transliterate() (in module pythainlp.transliterate.pyicu)": [[15, "id0"], [15, "pythainlp.transliterate.pyicu.transliterate"]], "transliterate() (in module pythainlp.transliterate.thaig2p)": [[15, "pythainlp.transliterate.thaig2p.transliterate"]], "transliterate() (pythainlp.transliterate.wunsen.wunsentransliterate method)": [[15, "pythainlp.transliterate.wunsen.WunsenTransliterate.transliterate"]], "xsampa_list() (in module pythainlp.transliterate.ipa)": [[15, "id6"], [15, "pythainlp.transliterate.ipa.xsampa_list"]], "thaitokenizer (class in pythainlp.ulmfit)": [[16, "pythainlp.ulmfit.ThaiTokenizer"]], "__init__() (pythainlp.ulmfit.thaitokenizer method)": [[16, "pythainlp.ulmfit.ThaiTokenizer.__init__"]], "add_special_cases() (pythainlp.ulmfit.thaitokenizer method)": [[16, "pythainlp.ulmfit.ThaiTokenizer.add_special_cases"]], "document_vector() (in module pythainlp.ulmfit)": [[16, "pythainlp.ulmfit.document_vector"]], "fix_html() (in module pythainlp.ulmfit)": [[16, "pythainlp.ulmfit.fix_html"]], "lowercase_all() (in module pythainlp.ulmfit)": [[16, "pythainlp.ulmfit.lowercase_all"]], "merge_wgts() (in module pythainlp.ulmfit)": [[16, "pythainlp.ulmfit.merge_wgts"]], "process_thai() (in module pythainlp.ulmfit)": [[16, "pythainlp.ulmfit.process_thai"]], "remove_space() (in module pythainlp.ulmfit)": [[16, "pythainlp.ulmfit.remove_space"]], "replace_rep_after() (in module pythainlp.ulmfit)": [[16, "pythainlp.ulmfit.replace_rep_after"]], "replace_rep_nonum() (in module pythainlp.ulmfit)": [[16, "pythainlp.ulmfit.replace_rep_nonum"]], "replace_wrep_post() (in module pythainlp.ulmfit)": [[16, "pythainlp.ulmfit.replace_wrep_post"]], "replace_wrep_post_nonum() (in module pythainlp.ulmfit)": [[16, "pythainlp.ulmfit.replace_wrep_post_nonum"]], "rm_brackets() (in module pythainlp.ulmfit)": [[16, "pythainlp.ulmfit.rm_brackets"]], "rm_useless_newlines() (in module pythainlp.ulmfit)": [[16, "pythainlp.ulmfit.rm_useless_newlines"]], "rm_useless_spaces() (in module pythainlp.ulmfit)": [[16, "pythainlp.ulmfit.rm_useless_spaces"]], "spec_add_spaces() (in module pythainlp.ulmfit)": [[16, "pythainlp.ulmfit.spec_add_spaces"]], "tokenizer() (pythainlp.ulmfit.thaitokenizer static method)": [[16, "pythainlp.ulmfit.ThaiTokenizer.tokenizer"]], "ungroup_emoji() (in module pythainlp.ulmfit)": [[16, "pythainlp.ulmfit.ungroup_emoji"]], "trie (class in pythainlp.util)": [[17, "pythainlp.util.Trie"]], "trie.node (class in pythainlp.util)": [[17, "pythainlp.util.Trie.Node"]], "__init__() (pythainlp.util.trie method)": [[17, "pythainlp.util.Trie.__init__"]], "__init__() (pythainlp.util.trie.node method)": [[17, "pythainlp.util.Trie.Node.__init__"]], "add() (pythainlp.util.trie method)": [[17, "pythainlp.util.Trie.add"]], "arabic_digit_to_thai_digit() (in module pythainlp.util)": [[17, "pythainlp.util.arabic_digit_to_thai_digit"]], "bahttext() (in module pythainlp.util)": [[17, "pythainlp.util.bahttext"]], "children (pythainlp.util.trie.node attribute)": [[17, "pythainlp.util.Trie.Node.children"]], "collate() (in module pythainlp.util)": [[17, "pythainlp.util.collate"]], "convert_years() (in module pythainlp.util)": [[17, "pythainlp.util.convert_years"]], "count_thai_chars() (in module pythainlp.util)": [[17, "pythainlp.util.count_thai_chars"]], "countthai() (in module pythainlp.util)": [[17, "pythainlp.util.countthai"]], "dict_trie() (in module pythainlp.util)": [[17, "pythainlp.util.dict_trie"]], "digit_to_text() (in module pythainlp.util)": [[17, "pythainlp.util.digit_to_text"]], "display_thai_char() (in module pythainlp.util)": [[17, "pythainlp.util.display_thai_char"]], "emoji_to_thai() (in module pythainlp.util)": [[17, "pythainlp.util.emoji_to_thai"]], "end (pythainlp.util.trie.node attribute)": [[17, "pythainlp.util.Trie.Node.end"]], "eng_to_thai() (in module pythainlp.util)": [[17, "pythainlp.util.eng_to_thai"]], "find_keyword() (in module pythainlp.util)": [[17, "pythainlp.util.find_keyword"]], "ipa_to_rtgs() (in module pythainlp.util)": [[17, "pythainlp.util.ipa_to_rtgs"]], "is_native_thai() (in module pythainlp.util)": [[17, "pythainlp.util.is_native_thai"]], "isthai() (in module pythainlp.util)": [[17, "pythainlp.util.isthai"]], "isthaichar() (in module pythainlp.util)": [[17, "pythainlp.util.isthaichar"]], "maiyamok() (in module pythainlp.util)": [[17, "pythainlp.util.maiyamok"]], "nectec_to_ipa() (in module pythainlp.util)": [[17, "pythainlp.util.nectec_to_ipa"]], "normalize() (in module pythainlp.util)": [[17, "pythainlp.util.normalize"]], "now_reign_year() (in module pythainlp.util)": [[17, "pythainlp.util.now_reign_year"]], "num_to_thaiword() (in module pythainlp.util)": [[17, "pythainlp.util.num_to_thaiword"]], "prefixes() (pythainlp.util.trie method)": [[17, "pythainlp.util.Trie.prefixes"]], "rank() (in module pythainlp.util)": [[17, "pythainlp.util.rank"]], "reign_year_to_ad() (in module pythainlp.util)": [[17, "pythainlp.util.reign_year_to_ad"]], "remove() (pythainlp.util.trie method)": [[17, "pythainlp.util.Trie.remove"]], "remove_dangling() (in module pythainlp.util)": [[17, "pythainlp.util.remove_dangling"]], "remove_dup_spaces() (in module pythainlp.util)": [[17, "pythainlp.util.remove_dup_spaces"]], "remove_repeat_vowels() (in module pythainlp.util)": [[17, "pythainlp.util.remove_repeat_vowels"]], "remove_tone_ipa() (in module pythainlp.util)": [[17, "pythainlp.util.remove_tone_ipa"]], "remove_tonemark() (in module pythainlp.util)": [[17, "pythainlp.util.remove_tonemark"]], "remove_zw() (in module pythainlp.util)": [[17, "pythainlp.util.remove_zw"]], "reorder_vowels() (in module pythainlp.util)": [[17, "pythainlp.util.reorder_vowels"]], "sound_syllable() (in module pythainlp.util)": [[17, "pythainlp.util.sound_syllable"]], "spell_syllable() (in module pythainlp.util.spell_words)": [[17, "pythainlp.util.spell_words.spell_syllable"]], "spell_word() (in module pythainlp.util.spell_words)": [[17, "pythainlp.util.spell_words.spell_word"]], "syllable_length() (in module pythainlp.util)": [[17, "pythainlp.util.syllable_length"]], "syllable_open_close_detector() (in module pythainlp.util)": [[17, "pythainlp.util.syllable_open_close_detector"]], "text_to_arabic_digit() (in module pythainlp.util)": [[17, "pythainlp.util.text_to_arabic_digit"]], "text_to_num() (in module pythainlp.util)": [[17, "pythainlp.util.text_to_num"]], "text_to_thai_digit() (in module pythainlp.util)": [[17, "pythainlp.util.text_to_thai_digit"]], "thai_digit_to_arabic_digit() (in module pythainlp.util)": [[17, "pythainlp.util.thai_digit_to_arabic_digit"]], "thai_strftime() (in module pythainlp.util)": [[17, "pythainlp.util.thai_strftime"]], "thai_strptime() (in module pythainlp.util)": [[17, "pythainlp.util.thai_strptime"]], "thai_to_eng() (in module pythainlp.util)": [[17, "pythainlp.util.thai_to_eng"]], "thai_word_tone_detector() (in module pythainlp.util)": [[17, "pythainlp.util.thai_word_tone_detector"]], "thaiword_to_date() (in module pythainlp.util)": [[17, "pythainlp.util.thaiword_to_date"]], "thaiword_to_num() (in module pythainlp.util)": [[17, "pythainlp.util.thaiword_to_num"]], "thaiword_to_time() (in module pythainlp.util)": [[17, "pythainlp.util.thaiword_to_time"]], "time_to_thaiword() (in module pythainlp.util)": [[17, "pythainlp.util.time_to_thaiword"]], "tis620_to_utf8() (in module pythainlp.util)": [[17, "pythainlp.util.tis620_to_utf8"]], "tone_detector() (in module pythainlp.util)": [[17, "pythainlp.util.tone_detector"]], "words_to_num() (in module pythainlp.util)": [[17, "pythainlp.util.words_to_num"]], "namedentityrecognition (class in pythainlp.wangchanberta)": [[18, "pythainlp.wangchanberta.NamedEntityRecognition"]], "thainametagger (class in pythainlp.wangchanberta)": [[18, "pythainlp.wangchanberta.ThaiNameTagger"]], "__init__() (pythainlp.wangchanberta.namedentityrecognition method)": [[18, "pythainlp.wangchanberta.NamedEntityRecognition.__init__"]], "__init__() (pythainlp.wangchanberta.thainametagger method)": [[18, "pythainlp.wangchanberta.ThaiNameTagger.__init__"]], "get_ner() (pythainlp.wangchanberta.namedentityrecognition method)": [[18, "pythainlp.wangchanberta.NamedEntityRecognition.get_ner"]], "get_ner() (pythainlp.wangchanberta.thainametagger method)": [[18, "pythainlp.wangchanberta.ThaiNameTagger.get_ner"]], "segment() (in module pythainlp.wangchanberta)": [[18, "pythainlp.wangchanberta.segment"]], "wordvector (class in pythainlp.word_vector)": [[19, "pythainlp.word_vector.WordVector"]], "__init__() (pythainlp.word_vector.wordvector method)": [[19, "pythainlp.word_vector.WordVector.__init__"]], "doesnt_match() (pythainlp.word_vector.wordvector method)": [[19, "pythainlp.word_vector.WordVector.doesnt_match"]], "get_model() (pythainlp.word_vector.wordvector method)": [[19, "pythainlp.word_vector.WordVector.get_model"]], "load_wordvector() (pythainlp.word_vector.wordvector method)": [[19, "pythainlp.word_vector.WordVector.load_wordvector"]], "most_similar_cosmul() (pythainlp.word_vector.wordvector method)": [[19, "pythainlp.word_vector.WordVector.most_similar_cosmul"]], "sentence_vectorizer() (pythainlp.word_vector.wordvector method)": [[19, "pythainlp.word_vector.WordVector.sentence_vectorizer"]], "similarity() (pythainlp.word_vector.wordvector method)": [[19, "pythainlp.word_vector.WordVector.similarity"]], "get_sense() (in module pythainlp.wsd)": [[20, "pythainlp.wsd.get_sense"]], "pythainlp_read_mode": [[25, "envvar-PYTHAINLP_READ_MODE"]]}})