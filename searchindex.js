Search.setIndex({"docnames": ["api/augment", "api/benchmarks", "api/coref", "api/corpus", "api/generate", "api/khavee", "api/parse", "api/soundex", "api/spell", "api/summarize", "api/tag", "api/tokenize", "api/tools", "api/translate", "api/transliterate", "api/ulmfit", "api/util", "api/wangchanberta", "api/word_vector", "index", "notes/FAQ", "notes/command_line", "notes/getting_started", "notes/installation", "notes/license"], "filenames": ["api/augment.rst", "api/benchmarks.rst", "api/coref.rst", "api/corpus.rst", "api/generate.rst", "api/khavee.rst", "api/parse.rst", "api/soundex.rst", "api/spell.rst", "api/summarize.rst", "api/tag.rst", "api/tokenize.rst", "api/tools.rst", "api/translate.rst", "api/transliterate.rst", "api/ulmfit.rst", "api/util.rst", "api/wangchanberta.rst", "api/word_vector.rst", "index.rst", "notes/FAQ.rst", "notes/command_line.rst", "notes/getting_started.rst", "notes/installation.rst", "notes/license.rst"], "titles": ["pythainlp.augment", "pythainlp.benchmarks", "pythainlp.coref", "pythainlp.corpus", "pythainlp.generate", "pythainlp.khavee", "pythainlp.parse", "pythainlp.soundex", "pythainlp.spell", "pythainlp.summarize", "pythainlp.tag", "pythainlp.tokenize", "pythainlp.tools", "pythainlp.translate", "pythainlp.transliterate", "pythainlp.ulmfit", "pythainlp.util", "pythainlp.wangchanberta", "pythainlp.word_vector", "PyThaiNLP documentation", "FAQ", "Command Line", "Getting Started", "Installation", "License"], "terms": {"The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22], "textaug": [0, 23], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24], "thai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23], "text": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 23], "thi": [0, 3, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 22, 23, 24], "function": [0, 1, 3, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 23], "task": [0, 1, 17, 22], "class": [0, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18], "wordnetaug": 0, "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24], "us": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 24], "wordnet": [0, 23], "__init__": [0, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18], "find_synonym": 0, "word": [0, 1, 3, 4, 5, 7, 8, 9, 10, 14, 15, 16, 17, 18, 21, 22, 23], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "po": [0, 3, 6, 10, 11, 17, 21], "none": [0, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 16, 17, 18], "postag_corpu": 0, "orchid": [0, 10, 11], "list": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 22], "find": [0, 3, 5, 8, 11, 16, 18, 23], "synonym": [0, 3], "from": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18], "part": [0, 3, 10, 11, 16, 17, 21], "speech": [0, 3, 10, 16, 17, 21], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23], "postag": 0, "corpu": [0, 4, 8, 9, 10, 11, 13, 16, 17, 19, 21, 23, 24], "name": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 15, 16, 17, 18, 23], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "sentenc": [0, 8, 9, 10, 12, 16, 18, 22], "token": [0, 3, 6, 9, 10, 15, 17, 18, 19, 21, 22, 23], "object": [0, 3, 5, 8, 9, 11, 15, 16, 18], "word_token": [0, 1, 9, 11, 15, 22], "max_syn_s": 0, "int": [0, 3, 4, 5, 7, 8, 9, 10, 11, 15, 16], "6": [0, 3, 7, 12, 16, 23], "bool": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 16, 17, 18], "true": [0, 1, 3, 4, 5, 9, 10, 11, 14, 15, 16, 17, 18, 23], "max": 0, "number": [0, 4, 8, 9, 10, 12, 16], "tupl": [0, 3, 8, 9, 10, 16, 17, 18], "exampl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23], "import": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 22], "aug": 0, "\u0e40\u0e23\u0e32\u0e0a\u0e2d\u0e1a\u0e44\u0e1b\u0e42\u0e23\u0e07\u0e40\u0e23": 0, "\u0e22\u0e19": [0, 3, 10, 11, 14, 16], "output": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "\u0e40\u0e23\u0e32": [0, 10, 22], "\u0e0a\u0e2d\u0e1a": [0, 16], "\u0e44\u0e1b": [0, 3, 10, 16], "\u0e23": [0, 2, 3, 4, 7, 8, 9, 10, 11, 18, 21, 22], "\u0e23\u0e23": 0, "\u0e42\u0e23\u0e07\u0e40\u0e23": [0, 10, 16], "\u0e2d\u0e32\u0e04\u0e32\u0e23\u0e40\u0e23": 0, "\u0e44\u0e1b\u0e22": 0, "\u0e07": [0, 3, 5, 7, 8, 9, 10, 11, 16, 21], "word2vec": [0, 18], "word2vecaug": 0, "model": [0, 2, 3, 6, 9, 10, 11, 13, 15, 17, 18, 23, 24], "file": [0, 3, 11, 15, 16, 21, 23, 24], "path": [0, 3, 11, 12, 16, 21, 23], "moodel": 0, "binari": 0, "modify_s": 0, "sent": [0, 3, 4, 10, 11, 12, 16, 21], "p": [0, 10, 14, 16], "float": [0, 1, 3, 4, 8, 9, 11, 12, 16, 18], "0": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 19, 21, 23, 24], "7": [0, 10, 16, 17], "probabl": [0, 4, 8], "n_sent": 0, "1": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 23, 24], "thai2fitaug": 0, "thai2fit": [0, 4, 18, 23], "github": [0, 3, 6, 9, 11, 13, 14, 16, 17, 19, 20], "com": [0, 3, 9, 10, 11, 13, 16, 17], "cstorm125": 0, "load_w2v": 0, "load": [0, 11, 13, 15, 18], "\u0e1c\u0e21\u0e40\u0e23": 0, "2": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 19, 23, 24], "5": [0, 3, 7, 8, 9, 10, 11, 12, 15, 16, 18, 21, 23], "\u0e1e\u0e27\u0e01\u0e40\u0e23\u0e32": [0, 11], "\u0e40\u0e23": [0, 3, 5, 10, 11, 18], "\u0e09": [0, 5, 10, 11, 13, 21], "\u0e19": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 21, 22], "ltw2vaug": 0, "ltw2v": [0, 18], "larg": [0, 9, 11, 18], "thaiword2vec": 0, "\u0e40\u0e02\u0e32": [0, 10, 18], "\u0e22\u0e19\u0e2b\u0e19": 0, "\u0e07\u0e2a": [0, 10, 21], "\u0e2d": [0, 3, 4, 5, 8, 9, 10, 11, 14, 15, 16, 18, 21], "\u0e2a\u0e21": [0, 10], "\u0e04\u0e23\u0e40\u0e23": 0, "lm": 0, "fasttextaug": 0, "model_path": [0, 15], "fasttext": 0, "you": [0, 3, 6, 10, 11, 16, 17, 19, 20, 21, 22, 23, 24], "want": [0, 1, 3, 6, 14, 16, 17], "download": [0, 3, 12, 13, 21, 23], "http": [0, 3, 7, 8, 9, 10, 11, 13, 15, 16, 17, 19, 23, 24], "cc": [0, 3, 10, 24], "doc": [0, 9, 11, 15, 16], "en": [0, 3, 13, 16], "crawl": 0, "vector": [0, 7, 9, 15, 18, 22, 23], "html": [0, 3, 10, 15, 16, 17], "thai2transformersaug": 0, "gener": [0, 3, 11, 14, 16, 19, 23], "num_replace_token": 0, "3": [0, 3, 4, 6, 7, 9, 10, 11, 15, 16, 21, 23], "wangchanberta": [0, 9, 10, 11, 19, 23], "replac": [0, 15, 16], "\u0e0a": [0, 4, 7, 8, 9, 10, 11, 16], "\u0e32\u0e07\u0e21": 0, "\u0e17": [0, 3, 9, 10, 11, 16, 21], "\u0e07\u0e2b\u0e21\u0e14": [0, 10, 16], "50": [0, 2, 16], "\u0e15": [0, 3, 7, 8, 9, 10, 11, 14, 16, 18, 21], "\u0e27": [0, 2, 5, 7, 8, 9, 10, 11, 15, 16, 18, 21], "\u0e1a\u0e19": [0, 10], "\u0e1a\u0e19\u0e42\u0e25\u0e01\u0e43\u0e1a\u0e19": 0, "\u0e1a\u0e19\u0e2a": 0, "\u0e14": [0, 3, 6, 8, 9, 10, 11, 14, 16, 18, 21], "\u0e1a\u0e19\u0e1a\u0e01": 0, "\u0e1a\u0e19\u0e19": 0, "\u0e1a\u0e19\u0e2b": 0, "bpemb_wv": 0, "bpembaug": 0, "lang": [0, 3, 14, 15], "th": [0, 3, 6, 7, 8, 10, 13, 15, 16], "v": [0, 3, 11, 16], "100000": 0, "dim": 0, "300": [0, 18], "bpemb": 0, "bheinzerl": 0, "\u0e1c\u0e21\u0e2a\u0e2d\u0e19": 0, "\u0e1c\u0e21\u0e40\u0e02": 0, "\u0e32\u0e40\u0e23": 0, "contain": [1, 3, 10, 11, 12, 16, 18], "util": [1, 8, 11, 15, 19], "relat": [1, 3, 15, 18], "nlp": [1, 13, 19, 22], "At": 1, "moment": 1, "we": [1, 3, 10, 16, 17, 18, 23], "have": [1, 15, 18, 22, 23], "onli": [1, 3, 7, 9, 10, 11, 14, 16, 18, 23], "other": [1, 2, 9, 10, 14, 16, 18, 22, 24], "ad": [1, 11, 15, 16], "soon": 1, "qualit": 1, "evalu": 1, "compute_stat": 1, "ref_sampl": 1, "raw_sampl": 1, "dict": [1, 2, 3, 8, 10, 11, 14, 15, 16], "comput": [1, 3, 9, 18], "statist": [1, 7], "These": [1, 16], "includ": [1, 3, 9, 10, 11, 15, 16, 22, 24], "charact": [1, 5, 8, 11, 14, 15, 16], "level": [1, 6, 15, 16], "posit": [1, 11, 16, 18], "fals": [1, 3, 4, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 23], "neg": [1, 10, 18], "precis": [1, 16, 21], "recal": [1, 21], "f1": 1, "correct": [1, 5, 8, 11, 16], "indic": [1, 3, 10, 14, 16, 22], "sequenc": [1, 15, 16], "correspod": 1, "correctli": [1, 8], "ground": 1, "truth": 1, "sampl": [1, 11, 21], "metric": [1, 8], "datafram": 1, "performac": 1, "pleas": [1, 3, 9, 19, 24], "see": [1, 3, 9, 11, 14, 15, 16, 23, 24], "being": [1, 16], "row": 1, "x": [1, 10, 16], "col": 1, "len": [1, 3, 10], "panda": 1, "preprocess": [1, 16], "txt": [1, 3, 11, 12, 15, 21], "remove_spac": [1, 15], "clean": [1, 15, 16], "up": [1, 14], "befor": [1, 5, 10, 11, 15, 16, 23], "perform": [1, 3, 11, 22, 23], "whether": 1, "remov": [1, 3, 7, 8, 15, 16], "white": 1, "space": [1, 10, 11, 15, 16, 22], "corefer": [2, 23], "resolut": 2, "coreference_resolut": [2, 23], "model_nam": [2, 9, 18], "han": 2, "v1": [2, 14, 18], "devic": [2, 3], "cpu": [2, 17, 23], "do": [2, 3, 6, 14, 15, 16, 22], "run": [2, 11], "cuda": 2, "txet": 2, "option": [2, 3, 6, 7, 9, 10, 11, 13, 14, 16, 18, 23], "default": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 23], "corf": 2, "orefer": 2, "print": [2, 3, 5, 6, 10, 16], "bill": 2, "gate": 2, "\u0e44\u0e14": [2, 4, 5, 10, 11, 16], "\u0e1a\u0e27": 2, "\u0e04\u0e0b": 2, "covid": 2, "19": [2, 11], "\u0e40\u0e02": [2, 10, 11], "\u0e21\u0e41\u0e23\u0e01\u0e41\u0e25": 2, "\u0e23\u0e30\u0e1a": 2, "\u0e1c\u0e21\u0e23": [2, 13], "\u0e2a": [2, 3, 8, 9, 10, 11, 16, 21], "\u0e01\u0e2a\u0e1a\u0e32\u0e22\u0e21\u0e32\u0e01": 2, "clusters_str": 2, "\u0e1c\u0e21": [2, 6, 10, 21], "cluster": [2, 11], "10": [2, 3, 9, 10, 16, 18, 19, 23], "52": [2, 7], "provid": [3, 8, 15], "access": [3, 11], "come": 3, "countri": 3, "frozenset": 3, "\u0e41\u0e04\u0e19\u0e32\u0e14\u0e32": 3, "\u0e42\u0e23\u0e21\u0e32\u0e40\u0e19": 3, "\u0e22": [3, 4, 8, 9, 10, 11, 15, 16, 21], "\u0e41\u0e2d\u0e25\u0e08": 3, "\u0e25\u0e32\u0e27": [3, 18], "dev": 3, "countries_th": 3, "rtype": [3, 5, 11, 14, 15], "get_corpu": 3, "filenam": 3, "as_i": 3, "read": [3, 6, 17, 20, 23], "data": [3, 12, 15, 16, 18, 21, 23], "each": [3, 9, 10, 11, 16, 18, 23], "line": [3, 16, 19, 23], "member": [3, 15], "set": [3, 8, 10, 11, 15, 16, 22, 23], "By": [3, 8, 9, 12, 16, 23], "whitespac": [3, 11, 16], "strip": [3, 5], "empti": [3, 15, 16], "valu": [3, 4, 7, 8, 10, 11, 16], "duplic": [3, 4, 16], "If": [3, 6, 8, 9, 11, 12, 14, 16, 17, 18, 19, 23], "modif": 3, "order": [3, 8, 10, 16], "consist": [3, 15], "negations_th": 3, "\u0e41\u0e15": [3, 10], "\u0e44\u0e21": [3, 10, 11, 16, 21], "ttc_freq": [3, 12], "\u0e42\u0e14\u0e22\u0e19": 3, "t1": [3, 4], "\u0e27\u0e1a\u0e17": 3, "t10": 3, "\u0e2b\u0e22": 3, "\u0e1a\u0e22": 3, "t3": [3, 4], "get_corpus_db": 3, "url": [3, 10], "get": [3, 11, 15, 18, 19, 21, 23], "catalog": [3, 21], "server": 3, "get_corpus_db_detail": 3, "version": [3, 10, 11, 23, 24], "detail": [3, 10, 21, 23], "about": [3, 10, 16, 20, 23, 24], "inform": [3, 11, 23, 24], "local": [3, 11, 12, 16, 21], "get_corpus_default_db": 3, "default_db": 3, "json": 3, "doesn": [3, 10], "t": [3, 9, 10, 14, 15, 16], "exist": [3, 8, 11, 12, 15, 23], "edit": [3, 8], "can": [3, 6, 8, 9, 11, 12, 16, 17, 20, 21, 22, 23], "get_corpus_path": 3, "forc": 3, "alreadi": 3, "root": [3, 6, 12, 22], "ha": [3, 10, 16, 22], "been": 3, "yet": [3, 12, 16], "wiki_lm_lstm": 3, "32": [3, 23], "thwiki_lm": 3, "pth": 3, "dl": 3, "05gb": 3, "00": [3, 16], "25": [3, 15, 16], "41": 3, "5mb": 3, "": [3, 8, 10, 11, 14, 15, 16, 17, 21], "thwiki_model_lstm": 3, "avail": [3, 7, 10, 11, 17, 21], "seen": 3, "io": [3, 19], "db": 3, "found": [3, 8, 16], "succesfulli": 3, "otherwis": [3, 10, 11, 16, 17, 18], "26": 3, "114k": 3, "434k": 3, "690kb": 3, "save": [3, 21], "home": [3, 23], "e": [3, 9, 10, 11, 16], "g": [3, 9, 11], "user": [3, 11, 16, 21], "bact": 3, "filenotfounderror": 3, "errno": [3, 23], "No": [3, 6, 10, 14, 22], "directori": [3, 12, 23], "usr": [3, 12], "lib": [3, 12], "python3": [3, 12], "dist": [3, 12], "packag": [3, 12, 22, 23], "provinc": [3, 10], "thailand": [3, 7, 10, 13, 14, 16, 17], "\u0e01\u0e23\u0e30\u0e1a": [3, 8], "\u0e01\u0e23": [3, 9, 10, 21], "\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23": [3, 9], "\u0e01\u0e32\u0e0d\u0e08\u0e19\u0e1a": 3, "\u0e1a\u0e25\u0e23\u0e32\u0e0a\u0e18\u0e32\u0e19": 3, "thailand_provinces_th": 3, "param": [3, 5, 10, 11, 12, 13, 14, 15, 17], "name_th": 3, "\u0e19\u0e19\u0e17\u0e1a": 3, "abbr_th": 3, "\u0e19\u0e1a": [3, 9, 10], "name_en": 3, "nonthaburi": 3, "abbr_en": 3, "nbi": 3, "thai_stopword": [3, 9], "stopword": [3, 16], "\u0e21": [3, 5, 8, 9, 10, 11, 16, 21], "\u0e44\u0e07": 3, "\u0e02\u0e13\u0e30": 3, "\u0e01\u0e32\u0e23": [3, 10, 11, 16, 18, 21], "\u0e1b\u0e23\u0e30\u0e01\u0e32\u0e23\u0e2b\u0e19": 3, "stopwords_th": 3, "thesi": [3, 7], "\u0e40\u0e1e": [3, 10], "\u0e0d\u0e28": 3, "\u0e25": [3, 7, 10, 11, 18], "\u0e15\u0e23\u0e30\u0e01": 3, "also": [3, 9, 11, 14, 15, 23], "\u0e01\u0e32\u0e23\u0e40\u0e25": 3, "\u0e2d\u0e01\u0e1b\u0e23\u0e30\u0e42\u0e22\u0e04\u0e2a\u0e33\u0e04": 3, "\u0e0d\u0e43\u0e19\u0e01\u0e32\u0e23\u0e2a\u0e23": 3, "\u0e1b\u0e04\u0e27\u0e32\u0e21\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\u0e42\u0e14\u0e22\u0e43\u0e0a": 3, "\u0e41\u0e1a\u0e1a\u0e08\u0e33\u0e25\u0e2d\u0e07\u0e41\u0e1a\u0e1a\u0e25\u0e33\u0e14": 3, "\u0e1a\u0e0a": 3, "\u0e21\u0e2b\u0e32\u0e27": 3, "\u0e17\u0e22\u0e32\u0e25": 3, "\u0e22\u0e18\u0e23\u0e23\u0e21\u0e28\u0e32\u0e2a\u0e15\u0e23": 3, "2551": 3, "thai_word": [3, 11], "\u0e01\u0e15": 3, "\u0e01\u0e32": [3, 11, 15, 16, 18, 21], "\u0e01\u0e14\u0e14": 3, "\u0e1e": [3, 7, 9, 10, 11, 14, 16, 18, 21], "\u0e29": [3, 9], "\u0e29\u0e20": 3, "words_th": [3, 11], "languag": [3, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 19, 22, 24], "thai_orst_word": 3, "royal": [3, 14, 16], "societi": [3, 10], "thai_syl": 3, "syllabl": [3, 5, 6, 11, 16, 21, 23], "\u0e01\u0e23\u0e2d\u0e1a": [3, 5], "\u0e01": [3, 7, 8, 9, 10, 11, 14, 16, 21, 22], "\u0e51": [3, 16], "\u0e42\u0e21\u0e1a": 3, "\u0e42\u0e21\u0e19": 3, "\u0e42\u0e21": 3, "\u0e32": [3, 9, 10, 14, 15, 16, 18, 21], "syllables_th": 3, "kucut": 3, "thai_neg": 3, "negat": [3, 10], "thai_family_nam": 3, "famili": 3, "family_names_th": 3, "thai_female_nam": 3, "femal": 3, "person_names_female_th": 3, "thai_male_nam": 3, "male": 3, "person_names_male_th": 3, "th_en_translit": 3, "get_transliteration_dict": 3, "defaultdict": 3, "transliter": [3, 7, 16, 19, 23], "dictionari": [3, 8, 9, 11, 14, 15, 16], "english": [3, 7, 13, 14, 15, 16], "format": [3, 10, 11, 16, 17], "an": [3, 8, 9, 11, 15, 16, 22, 24], "open": [3, 11, 16], "multilingu": 3, "knowledg": [3, 11], "graph": [3, 11], "commonsens": 3, "conceptnet5": 3, "wiki": [3, 16], "api": 3, "edg": 3, "public": [3, 18, 19, 24], "semant": 3, "network": [3, 11], "design": 3, "help": [3, 16, 21], "understand": [3, 22], "mean": [3, 9, 15, 16, 18, 23], "peopl": 3, "For": [3, 9, 10, 11, 16, 22, 23, 24], "term": [3, 18, 22], "common": [3, 10, 11, 16, 24], "sens": [3, 22], "which": [3, 8, 11, 16], "artifici": [3, 13], "intelig": 3, "concepnet": 3, "natur": [3, 19, 22], "intellig": [3, 13], "With": [3, 18, 22, 23], "illustr": 3, "show": [3, 10, 15], "relationship": 3, "repres": [3, 16, 18], "between": [3, 5, 7, 10, 11, 18], "node": [3, 16, 23], "abbrevi": [3, 10, 16], "ja": 3, "japan": [3, 10], "given": [3, 7, 8, 9, 10, 12, 16, 18], "accord": [3, 5, 7, 8, 16], "hello": 3, "id": 3, "r": [3, 9, 11, 16], "isa": 3, "c": [3, 11, 16, 17, 23], "greet": 3, "dataset": [3, 11, 12, 17, 21, 24], "d": [3, 16], "4": [3, 4, 5, 6, 7, 10, 13, 14, 15, 16, 18, 24], "end": [3, 10, 11, 16, 22], "label": [3, 10, 18, 21], "licens": [3, 11, 19], "rel": [3, 10, 16], "activ": [3, 10], "omc": 3, "vote": 3, "contributor": 3, "bmsacr": 3, "test": [3, 13, 15, 21], "start": [3, 16, 19], "surfacetext": 3, "kind": [3, 11, 24], "weight": [3, 15], "4641016151377544": 3, "\u0e2a\u0e27": 3, "\u0e2a\u0e14": 3, "relatedto": 3, "n": [3, 4, 7, 9, 14, 16, 17], "prosper": 3, "wiktionari": 3, "sa": [3, 16], "process": [3, 11, 15, 16, 19, 22, 23], "wikiparsec": 3, "resourc": 3, "sense_label": 3, "word_freq": 3, "frequenc": [3, 8, 9, 10, 16], "nation": [3, 4, 8, 10], "tnc_freq": 3, "credit": [3, 11], "korakot": [3, 11, 19], "chaovavanich": [3, 11, 19], "bit": [3, 23], "ly": 3, "3wskzsf": 3, "unigram_word_freq": 3, "unigram": [3, 4, 9], "bigram_word_freq": 3, "bigram": [3, 4, 9], "trigram_word_freq": 3, "trigram": [3, 4], "textbook": [3, 4], "icu": [3, 11, 22, 23], "find_badword": 3, "callabl": [3, 8, 15], "training_data": 3, "iter": [3, 8, 9, 10, 11, 16], "work": [3, 6, 11, 15, 16], "well": [3, 15], "train": [3, 6, 11, 13, 15, 18, 22], "consid": [3, 5, 10], "make": [3, 10, 15, 16, 18, 22], "unwel": 3, "revise_wordset": 3, "orig_word": 3, "revis": [3, 14], "could": [3, 11, 16, 23], "improv": [3, 11], "base": [3, 6, 7, 8, 9, 11, 14, 15, 16, 17], "orign_word": 3, "remain": 3, "ani": [3, 8, 10, 11, 18, 24], "take": [3, 10, 23], "string": [3, 7, 11, 14, 15, 16], "input": [3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21], "longest": [3, 21], "segment": [3, 11, 17, 22], "base_word": 3, "more_word": 3, "\u0e16\u0e27": 3, "\u0e14\u0e25": [3, 16], "\u0e17\u0e2d\u0e07\u0e2d": 3, "\u0e19\u0e17\u0e23": [3, 7, 10, 16], "\u0e20": [3, 10, 18], "\u0e12\u0e19": 3, "\u0e40\u0e15": [3, 15], "\u0e22\u0e07": [3, 10, 16, 18], "\u0e28": [3, 9, 10, 11, 14, 16, 18], "\u0e02": [3, 10, 11, 16], "\u0e19\u0e18": [3, 7, 16], "\u0e08\u0e33\u0e25\u0e2d\u0e07": 3, "\u0e14\u0e32\u0e27\u0e40\u0e23": 3, "\u0e2d\u0e07": [3, 10, 11, 21], "union": [3, 5, 6, 10, 11, 16, 17], "dict_tri": [3, 11, 16], "trie": [3, 11, 16], "wordlist": 3, "lambda": 3, "revised_word": 3, "revise_newmm_default_wordset": 3, "newmm": [3, 9, 15, 21, 22], "exact": [3, 10], "copi": [3, 11, 14, 24], "nltk": 3, "www": [3, 7, 8, 10, 11, 16, 23, 24], "org": [3, 10, 11, 15, 16, 17, 19, 24], "howto": 3, "synset": 3, "tha": 3, "all": [3, 5, 8, 9, 11, 13, 15, 16, 18, 23, 24], "lemma": 3, "argument": 3, "constrain": [3, 11], "its": [3, 8, 11, 12, 15, 16, 18], "constraint": 3, "noun": [3, 6, 10], "verb": [3, 6, 10], "adject": [3, 10], "satellit": 3, "adverb": [3, 10], "eng": [3, 7], "\u0e17\u0e33\u0e07\u0e32\u0e19": [3, 10], "01": [3, 16], "02": [3, 15, 17], "08": 3, "\u0e1a": [3, 7, 8, 9, 10, 11, 15, 16, 21, 22], "\u0e32\u0e19": [3, 7, 10, 15], "duplex_hous": 3, "dwell": 3, "hous": 3, "03": [3, 16], "14": [3, 10], "07": 3, "when": [3, 9, 18, 22], "specifi": [3, 9, 10, 12, 17, 23], "\u0e41\u0e23\u0e07": [3, 8], "cound": 3, "interpret": 3, "hard": [3, 22], "adj": [3, 10], "accept": 3, "strong": 3, "name_synset": 3, "dog": 3, "chase": 3, "sysset": 3, "difficult": 3, "easi": [3, 9, 22], "requir": [3, 8, 9, 11, 14, 18, 23, 24], "great": 3, "physic": 3, "mental": 3, "effort": [3, 23], "accomplish": 3, "comprehend": 3, "endur": 3, "all_lemma_nam": 3, "tag": [3, 6, 11, 17, 19, 21], "\u0e2d\u0e40\u0e21\u0e23": [3, 18], "\u0e42\u0e01_\u0e40\u0e27\u0e2a\u0e1b": 3, "\u0e0a\u0e0a": 3, "\u0e40\u0e21": [3, 10, 16], "\u0e2d\u0e07\u0e0a": 3, "\u0e40\u0e2d\u0e19\u0e40\u0e19": 3, "\u0e01\u0e32\u0e23\u0e23": 3, "\u0e1a\u0e40\u0e25": 3, "\u0e22\u0e07\u0e1a": 3, "\u0e15\u0e23\u0e1a": 3, "\u0e0d\u0e18\u0e23\u0e23\u0e21": 3, "\u0e1c": [3, 10, 11, 18, 21], "\u0e15\u0e01\u0e41\u0e15": 3, "\u0e07\u0e40\u0e23": 3, "\u0e2d\u0e14": [3, 9], "\u0e27\u0e22\u0e18\u0e07": 3, "\u0e08": [3, 10, 11, 14, 15, 16, 18, 21], "\u0e42\u0e2d\u0e27\u0e32\u0e19\u0e19": 3, "_\u0e40\u0e27\u0e2d\u0e23": 3, "\u0e42\u0e2d": [3, 10, 22], "80508": 3, "\u0e0b": [3, 9, 10, 14, 16], "\u0e07\u0e44\u0e21": 3, "\u0e41\u0e2d\u0e25\u0e01\u0e2d\u0e2e\u0e2d\u0e25": 3, "\u0e07\u0e15\u0e23\u0e07\u0e44\u0e1b\u0e15\u0e23\u0e07\u0e21\u0e32": 3, "\u0e40\u0e2a": [3, 8, 10, 16, 18, 21], "\u0e19\u0e28": 3, "\u0e19\u0e22": [3, 16, 21], "\u0e15\u0e23": [3, 16], "\u0e17\u0e32\u0e07\u0e08": 3, "\u0e15\u0e43\u0e08": 3, "5277": 3, "all_synset": 3, "over": 3, "next": [3, 8], "entiti": [3, 10, 11, 17, 23], "physical_ent": 3, "abstract": 3, "06": [3, 16], "abl": 3, "unabl": 3, "iso": [3, 14], "639": 3, "code": [3, 7, 11, 12, 15, 24], "al": [3, 11], "arb": 3, "bul": 3, "cat": [3, 13], "cmn": 3, "dan": 3, "ell": 3, "eu": 3, "fa": 3, "fin": 3, "fra": 3, "glg": 3, "heb": 3, "hrv": 3, "ind": 3, "ita": 3, "jpn": 3, "nld": 3, "nno": 3, "nob": 3, "pol": 3, "por": 3, "qcn": 3, "slv": 3, "spa": 3, "swe": 3, "zsm": 3, "lamma": 3, "\u0e42\u0e1b\u0e23\u0e14": 3, "like": [3, 8, 10, 16, 17, 22, 23], "\u0e1e\u0e23\u0e30\u0e40\u0e08": [3, 9], "god": 3, "godhead": 3, "father": 3, "\u0e27\u0e19": [3, 9, 10, 11, 16], "roll": 3, "18": [3, 16], "17": [3, 16], "curl": 3, "roll_up": 3, "wind": 3, "11": [3, 7, 10, 11, 16], "support": [3, 10, 11, 16, 23], "practic": 3, "exercis": 3, "drill": 3, "lemma_from_kei": 3, "kei": [3, 8, 16], "similar": [3, 8, 9, 15, 16, 18, 22], "need": [3, 11, 23], "suppli": [3, 11], "instead": [3, 15], "path_similar": 3, "synsets1": 3, "synsets2": 3, "two": [3, 5, 9, 10, 11, 16, 18, 22, 23], "shortest": 3, "distanc": [3, 8], "equat": 3, "follow": [3, 10, 11, 16, 19, 22], "_similar": 3, "_path": 3, "_distanc": 3, "calcul": [3, 16], "connect": 3, "through": [3, 12], "hypernym": 3, "hyponym": 3, "taxonomi": 3, "score": [3, 9, 18], "ranag": 3, "ident": 3, "first": [3, 8, 9, 16, 18], "measur": [3, 10], "second": [3, 16, 18], "obj": [3, 6], "3333333333333333": 3, "07142857142857142": 3, "08333333333333333": 3, "lch_similar": 3, "leacock": 3, "chodorow": 3, "lch": 3, "maximum": [3, 8, 9, 11], "depth": 3, "shown": 3, "below": [3, 16], "log": 3, "_depth": 3, "538973871058276": 3, "9985288301111273": 3, "1526795099383855": 3, "wup_similar": 3, "wu": 3, "palmer": 3, "wup": 3, "least": 3, "subsum": 3, "most": [3, 8, 9, 18, 22], "specif": [3, 7, 11, 15, 18, 24], "ancestor": 3, "13333333333333333": 3, "35294117647058826": 3, "morphi": 3, "form": [3, 10, 16, 18], "possibl": [3, 8, 11, 16], "search": [3, 7, 8, 19], "thiev": 3, "thief": 3, "mix": 3, "custom_lemma": 3, "tab_fil": 3, "custom": [3, 8, 11, 16], "tab": 3, "compl": 3, "hss": 3, "ntu": 3, "edu": [3, 23], "sg": 3, "omw": 3, "map": [3, 10, 18], "share": 3, "tnc": [4, 8, 10], "ttc": 4, "oscar": 4, "gen_sent": 4, "start_seq": 4, "prob": [4, 8], "001": 4, "output_str": 4, "begin": [4, 10, 16], "gen": 4, "\u0e41\u0e21\u0e27": [4, 5, 10, 15, 16], "ouput": 4, "\u0e41\u0e21\u0e27\u0e40\u0e27\u0e25\u0e32\u0e19\u0e30\u0e19": 4, "t2": 4, "\u0e41\u0e21\u0e27\u0e44\u0e21": 4, "\u0e1a\u0e40\u0e0a": 4, "\u0e2d\u0e21": 4, "\u0e07\u0e17\u0e33\u0e15": 4, "\u0e27\u0e40\u0e1b": 4, "\u0e19\u0e40\u0e0b": 4, "\u0e1f\u0e40\u0e27\u0e2d\u0e23": 4, "\u0e04": [4, 7, 8, 10, 11, 16, 21], "\u0e41\u0e04\u0e17\u0e23": 4, "\u0e22\u0e32": 4, "\u0e07\u0e25": 4, "\u0e01\u0e41\u0e2a\u0e14\u0e07": 4, "\u0e13\u0e2b\u0e25\u0e27\u0e07": 4, "toolkit": [5, 10, 14], "poetri": 5, "\u0e01\u0e27": [5, 10, 18], "khaveeverifi": 5, "verifi": 5, "check_sara": 5, "check": [5, 8, 16], "vowel": [5, 16], "kv": 5, "\u0e40\u0e2d\u0e2d": [5, 10], "check_marttra": 5, "spell": [5, 11, 14, 16, 19, 23], "section": [5, 14], "\u0e2a\u0e32\u0e27": 5, "\u0e40\u0e01\u0e2d\u0e27": 5, "is_sumpu": 5, "word1": [5, 18], "word2": [5, 18], "rhyme": 5, "boolen": 5, "\u0e2a\u0e23\u0e23": 5, "check_karu_lahu": 5, "check_klon": 5, "k_type": 5, "8": [5, 7, 11, 15, 16, 17], "suitabl": [5, 23], "poem": 5, "principl": 5, "\u0e19\u0e0a": 5, "\u0e2d\u0e2b\u0e21": 5, "\u0e19\u0e0a\u0e2d\u0e1a\u0e01": 5, "\u0e19\u0e44\u0e01": 5, "\u0e41\u0e25": 5, "\u0e27\u0e01": 5, "\u0e07\u0e44\u0e25": 5, "\u0e2b\u0e21\u0e32\u0e0a": 5, "\u0e2d\u0e19": [5, 10, 18], "\u0e32\u0e17\u0e2d\u0e07": 5, "\u0e25\u0e04\u0e04\u0e19\u0e40\u0e01": 5, "\u0e40\u0e2d": [5, 10], "\u0e07\u0e40\u0e2d": 5, "\u0e07\u0e04\u0e30\u0e19\u0e2d\u0e07": 5, "\u0e04\u0e19\u0e08": 5, "\u0e1a\u0e08\u0e2d\u0e07": 5, "\u0e40\u0e02\u0e32\u0e0a": 5, "\u0e2d\u0e07\u0e40\u0e18": 5, "\u0e22\u0e23": 5, "\u0e07\u0e40\u0e2a": 5, "\u0e22\u0e07\u0e2b\u0e21\u0e32": 5, "cant": 5, "paragraph": [5, 11], "\u0e2b\u0e21\u0e32": 5, "\u0e08\u0e2d\u0e07": 5, "\u0e17\u0e2d\u0e07": 5, "check_aek_too": 5, "dead_syllable_as_aek": 5, "tonal": 5, "checker": [5, 8], "dead": [5, 16], "aek": 5, "too": 5, "both": [5, 11, 16, 18, 22], "\u0e01\u0e32\u0e23\u0e40\u0e0a": 5, "\u0e04\u0e04\u0e33\u0e40\u0e2d\u0e01\u0e42\u0e17": 5, "\u0e40\u0e2d\u0e07": 5, "\u0e43\u0e0a": [5, 10, 16], "\u0e40\u0e2b\u0e21": [5, 10, 16], "\u0e2d\u0e19\u0e01": [5, 10], "handle_karun_sound_sil": 5, "handl": [5, 11], "sound": [5, 7, 16], "silenc": 5, "karun": 5, "should": [5, 14, 16, 22], "__dict__": [5, 8], "mappingproxi": [5, 8], "__module__": [5, 8], "core": [5, 15], "attribut": [5, 8, 10, 24], "__weakref__": [5, 8], "__doc__": [5, 8], "__annotations__": [5, 8], "depend": [6, 10, 11, 23], "dependency_pars": [6, 23], "engin": [6, 7, 8, 15, 22, 23], "esupar": [6, 23], "transformers_ud": [6, 23], "parser": 6, "conllu": 6, "tagger": [6, 11, 17], "bert": [6, 9, 11], "roberta": 6, "deberta": 6, "spacy_thai": [6, 23], "univers": [6, 7, 10, 13, 15, 24], "transformersud": 6, "ud_goeswith": 6, "goeswith": 6, "subword": [6, 17, 21, 22], "koichiyasuoka": 6, "spm": [6, 9, 17], "upo": 6, "huggingfac": [6, 13], "v2": [6, 10, 17], "pre": [6, 10, 11, 15, 18, 23], "wikipedia": [6, 14, 16], "char": [6, 12, 16], "ud": [6, 10], "head": 6, "pretrain": [6, 13, 15, 17], "detect": 6, "question": [6, 20], "answer": 6, "deriv": 6, "th_blackboard": 6, "conll": 6, "\u0e1c\u0e21\u0e40\u0e1b": 6, "\u0e19\u0e04\u0e19\u0e14": 6, "_": [6, 16], "pron": [6, 10], "nsubj": 6, "spaceaft": 6, "\u0e40\u0e1b": [6, 9, 10, 11, 16], "cop": 6, "\u0e04\u0e19": [6, 10, 15, 16], "acl": [6, 11], "ppr": [6, 10], "vsta": [6, 10], "\u0e04\u0e19\u0e14": [6, 16], "ncmn": [6, 10], "udom83": [7, 21], "length": [7, 8, 16], "convert": [7, 14, 16, 18], "phonet": [7, 14, 23], "prefer": 7, "metasound": [7, 21], "prayut_and_somchaip": 7, "algorithm": [7, 8, 9, 10, 11, 16], "propos": 7, "vichit": 7, "lorchirachoonkul": 7, "lk82": [7, 21], "wanne": 7, "udompanich": 7, "combin": [7, 11, 18], "metaphon": 7, "snae": 7, "br\u00fcckner": 7, "cross": [7, 11], "retriev": 7, "techniqu": [7, 9, 11, 22], "\u0e23100000": 7, "\u0e231000": 7, "\u0e25100": 7, "\u0e23100": 7, "\u0e01\u0e29": 7, "\u0e23\u0e13\u0e01\u0e32\u0e23": 7, "\u0e1a931900": 7, "\u0e1ae419": 7, "\u0e1a551": 7, "\u0e1b": [7, 8, 10, 14, 15, 16, 18], "\u0e08\u0e08": [7, 16], "\u0e1b775300": 7, "\u0e1b3e54": 7, "\u0e1b223": 7, "vp": [7, 10], "\u0e1a5515": 7, "mactch": 7, "call": [7, 9, 16, 23], "wa": [7, 11, 16], "develop": [7, 11, 16, 23], "\u0e1a55150": 7, "king": [7, 16], "word_approxim": 7, "list_word": [7, 8], "approxim": [7, 16], "smaller": [7, 11], "closer": 7, "\u0e23\u0e16": 7, "\u0e23\u0e14": 7, "\u0e23\u0e2a": 7, "\u0e23\u0e21": 7, "\u0e33": [7, 15, 18], "875": 7, "375": 7, "audio_vector": 7, "audio": 7, "featur": [7, 11, 15], "panphon": 7, "word2audio": 7, "ipa": [7, 16, 23], "tone": [7, 14, 16], "a\u02d0": [7, 14], "m": [7, 14, 16, 17], "2009": 7, "novel": 7, "match": [7, 10, 11, 16], "ontologi": 7, "analys": 7, "astrologi": 7, "1983": 7, "alik": 7, "homonym": 7, "approach": [7, 11, 23], "master": 7, "chulalongkorn": 7, "\u0e2b\u0e25": [7, 14], "\u0e2d\u0e08": 7, "\u0e23\u0e30\u0e0a": 7, "\u0e13\u0e2b": 7, "\u0e41\u0e25\u0e30": [7, 10, 11, 16, 21], "\u0e40\u0e08\u0e23": [7, 9], "\u0e0d": [7, 10, 18], "\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21\u0e01\u0e32\u0e23\u0e2a": 7, "\u0e1a\u0e04": [7, 14], "\u0e19\u0e04\u0e33\u0e44\u0e17\u0e22\u0e15\u0e32\u0e21\u0e40\u0e2a": 7, "\u0e22\u0e07\u0e2d": 7, "prayut": 7, "suwanvisat": 7, "somchai": 7, "prasitjutrakul": 7, "In": [7, 11, 16, 22], "1998": 7, "cite": [7, 11, 17, 19], "2022": [7, 16], "sep": 7, "cp": 7, "chula": [7, 8], "ac": [7, 8, 10], "spj": 7, "paper": 7, "thaitext": 7, "ncsec98": 7, "clir": 7, "pdf": [7, 11], "closest": 8, "pn": 8, "peter": 8, "norvig": 8, "phunspel": [8, 23], "A": [8, 9, 11, 14, 15, 16, 22, 23], "spyll": 8, "port": 8, "hunspel": 8, "symspellpi": [8, 23], "python": [8, 11, 16, 19, 22, 23], "symspel": 8, "v6": 8, "\u0e19\u0e15\u0e23\u0e1a": 8, "\u0e19\u0e15\u0e23\u0e07": 8, "\u0e04\u0e23": [8, 10], "\u0e07\u0e40\u0e01\u0e15": 8, "\u0e01\u0e23\u0e30\u0e1b": 8, "\u0e01\u0e30\u0e1b": 8, "\u0e40\u0e2b\u0e15\u0e01\u0e32\u0e23\u0e13": 8, "\u0e40\u0e2b\u0e15": [8, 16, 21], "\u0e01\u0e32\u0e23\u0e13": [8, 16], "correct_s": 8, "\u0e40\u0e14": [8, 9, 16], "\u0e19\u0e2d\u0e23": 8, "\u0e40\u0e19": [8, 10], "\u0e19\u0e40\u0e17\u0e2d\u0e23": 8, "ar": [8, 9, 10, 11, 14, 15, 16, 18, 23, 24], "incur": 8, "result": [8, 10, 16, 21], "sort": [8, 16], "occurr": 8, "descend": [8, 16], "tltk": [8, 10, 11], "wrapper": [8, 10, 11, 15], "within": [8, 10, 11, 15, 23], "\u0e27\u0e23": 8, "\u0e1b\u0e23": 8, "\u0e1a\u0e23": 8, "\u0e04\u0e25": [8, 10], "spell_sent": 8, "norvigspellcheck": 8, "custom_dict": [8, 11], "min_freq": 8, "min_len": [8, 16], "max_len": 8, "40": [8, 11, 16], "dict_filt": 8, "_is_thai_and_not_num": 8, "initi": [8, 11, 15], "basic": [8, 17], "choos": [8, 9, 10, 11, 16], "give": [8, 16], "candid": 8, "Then": [8, 9, 18], "select": [8, 9, 16], "highest": [8, 9], "just": [8, 16], "without": [8, 10, 11, 14, 16, 24], "case": [8, 15], "assign": [8, 11], "everi": [8, 16], "around": [8, 15], "000": [8, 10], "minimum": [8, 9], "keep": [8, 11, 12], "func": [8, 9, 15], "filter": [8, 9, 11, 15], "non": [8, 16], "itemsview": 8, "current": [8, 11, 23], "instanc": [8, 9, 10, 16], "\u0e2b\u0e27\u0e32\u0e19": 8, "30": [8, 10, 16], "\u0e21\u0e30\u0e19\u0e32\u0e27": 8, "\u0e41\u0e2d\u0e1a": 8, "3223": 8, "dict_item": 8, "known": [8, 22], "thei": [8, 11, 16], "intersect": 8, "\u0e40\u0e1e\u0e22\u0e19": 8, "\u0e40\u0e1e\u0e25": 8, "\u0e40\u0e1e\u0e25\u0e07": 8, "\u0e22\u0e01\u0e44": 8, "\u0e44\u0e1f\u0e25": 8, "0006959172792052158": 8, "\u0e32\u0e23": [8, 16], "9": [8, 9, 10, 15, 16, 17], "482306849763902e": 8, "05": [8, 12, 16], "freq": 8, "\u0e0d\u0e0d\u0e32": [8, 15], "3639": 8, "\u0e0d\u0e0a\u0e32": 8, "whose": 8, "decreas": 8, "method": [8, 14, 15], "exactli": 8, "one": [8, 9, 11, 14, 16, 18, 23], "itself": 8, "look": [8, 14, 23], "expand": 8, "And": 8, "still": 8, "fail": [8, 23], "\u0e0d\u0e2b\u0e32": 8, "\u0e15\u0e23\u0e20\u0e32\u0e1a": 8, "\u0e15\u0e23\u0e20\u0e32\u0e1e": 8, "default_spell_check": 8, "standard": [8, 16], "art": [8, 11], "ling": 8, "2007": 8, "how": [8, 14, 15, 23], "write": [8, 11, 16, 22, 24], "corrector": 8, "under": [9, 11, 23, 24], "hood": 9, "sent_token": [9, 11], "normal": [9, 10, 15, 16], "frequnci": 9, "less": [9, 22], "than": [9, 11], "greater": 9, "out": [9, 11, 15, 16, 18, 22], "final": 9, "pick": [9, 18], "sum": [9, 15], "appear": 9, "summari": 9, "effect": [9, 14], "refer": [9, 11], "mt5": [9, 23], "small": 9, "xl": 9, "xxl": 9, "cpe": 9, "kmutt": 9, "\u0e17\u0e33\u0e40\u0e19": 9, "\u0e22\u0e1a\u0e17": 9, "\u0e32\u0e0a": 9, "\u0e32\u0e07": [9, 10, 21], "\u0e2b\u0e23": [9, 10], "\u0e07\u0e16\u0e19\u0e19\u0e1e\u0e23\u0e30\u0e2d\u0e32\u0e17": 9, "\u0e15\u0e22": [9, 16], "\u0e07\u0e2d\u0e22": 9, "\u0e1a\u0e19\u0e16\u0e19\u0e19\u0e1e\u0e23\u0e30\u0e2d\u0e32\u0e17": 9, "\u0e40\u0e02\u0e15\u0e1e\u0e23\u0e30\u0e19\u0e04\u0e23": 9, "\u0e21\u0e40\u0e1b": 9, "\u0e32\u0e19\u0e02\u0e2d\u0e07\u0e40\u0e08": 9, "\u0e32\u0e1e\u0e23\u0e30\u0e22\u0e32\u0e21\u0e2b\u0e32\u0e42\u0e22\u0e18\u0e32": 9, "\u0e17\u0e2d\u0e40\u0e23": 9, "\u0e22\u0e30": 9, "\u0e04\u0e0a\u0e40\u0e2a\u0e19": 9, "\u0e15\u0e23\u0e40\u0e08": 9, "\u0e32\u0e1e\u0e23\u0e30\u0e22\u0e32\u0e21\u0e2b\u0e32\u0e42\u0e22\u0e18\u0e32\u0e19\u0e23\u0e32\u0e18": 9, "\u0e1a\u0e14": 9, "\u0e28\u0e23": 9, "\u0e22\u0e13\u0e23\u0e07\u0e04": 9, "\u0e1e\u0e0d\u0e32\u0e40\u0e08": 9, "\u0e19\u0e2a\u0e01": 9, "\u0e25\u0e04\u0e0a\u0e40\u0e2a\u0e19": 9, "\u0e40\u0e0a": [9, 10], "\u0e2d\u0e2a\u0e32\u0e22\u0e21\u0e2d\u0e0d": 9, "\u0e40\u0e08": 9, "\u0e19\u0e1b": [9, 16], "\u0e02\u0e2d\u0e07\u0e40\u0e08": 9, "\u0e32\u0e08\u0e2d\u0e21\u0e21\u0e32\u0e23\u0e14\u0e32\u0e01\u0e25": 9, "\u0e19\u0e43\u0e19\u0e1e\u0e23\u0e30\u0e1a\u0e32\u0e17\u0e2a\u0e21\u0e40\u0e14": 9, "\u0e08\u0e1e\u0e23\u0e30\u0e08\u0e2d\u0e21\u0e40\u0e01\u0e25": 9, "\u0e32\u0e40\u0e08": 9, "\u0e32\u0e2d\u0e22": [9, 10], "\u0e2b": [9, 10, 11, 14, 16], "\u0e41\u0e25\u0e30\u0e40\u0e1b": 9, "\u0e19\u0e21\u0e23\u0e14\u0e01\u0e15\u0e01\u0e17\u0e2d\u0e14\u0e21\u0e32\u0e16": 9, "\u0e32\u0e1a\u0e23\u0e21\u0e27\u0e07\u0e28": 9, "\u0e40\u0e18\u0e2d": [9, 10], "\u0e01\u0e23\u0e21\u0e1e\u0e23\u0e30\u0e19\u0e40\u0e23\u0e28\u0e23\u0e27\u0e23\u0e24\u0e17\u0e18": 9, "\u0e1e\u0e23\u0e30\u0e2d\u0e07\u0e04": 9, "\u0e32\u0e01\u0e24\u0e14\u0e32\u0e20": 9, "\u0e2b\u0e32\u0e23": 9, "\u0e2d\u0e21\u0e32\u0e43\u0e19\u0e23": 9, "\u0e0a\u0e2a\u0e21": 9, "\u0e22\u0e1e\u0e23\u0e30\u0e1a\u0e32\u0e17\u0e2a\u0e21\u0e40\u0e14": 9, "\u0e08\u0e1e\u0e23\u0e30\u0e08": 9, "\u0e25\u0e08\u0e2d\u0e21\u0e40\u0e01\u0e25": 9, "\u0e27\u0e42\u0e1b\u0e23\u0e14\u0e40\u0e01\u0e25": 9, "\u0e32\u0e2f": 9, "\u0e43\u0e2b": [9, 10], "\u0e2a\u0e23": [9, 16], "\u0e32\u0e07\u0e15\u0e33\u0e2b\u0e19": 9, "\u0e19\u0e17": [9, 10, 11, 16], "\u0e1b\u0e23\u0e30\u0e17": 9, "\u0e1a\u0e02\u0e2d\u0e07\u0e1e\u0e23\u0e30\u0e40\u0e08": 9, "\u0e01\u0e23\u0e21\u0e1e\u0e23\u0e30\u0e19\u0e40\u0e23\u0e28\u0e27\u0e23\u0e24\u0e17": 9, "\u0e18": [9, 14, 16], "\u0e41\u0e25\u0e30\u0e40\u0e08": 9, "\u0e32\u0e08\u0e2d\u0e21\u0e21\u0e32\u0e23\u0e14\u0e32": 9, "\u0e2d\u0e21\u0e32\u0e40\u0e23": 9, "\u0e22\u0e01\u0e2d\u0e32\u0e04\u0e32\u0e23\u0e2b\u0e25": 9, "\u0e01\u0e19": [9, 10], "\u0e15\u0e33\u0e2b\u0e19": 9, "\u0e01\u0e40\u0e14": 9, "extra_id_0": 9, "\u0e2f\u0e25\u0e2f": 9, "\u0e07\u0e19": [9, 16, 18], "\u0e2d\u0e22": [9, 10, 11, 15, 16], "\u0e25\u0e1b\u0e27": 9, "\u0e12\u0e19\u0e18\u0e23\u0e23\u0e21": 9, "\u0e16": [9, 10, 16, 22], "\u0e32\u0e1e": 9, "\u0e14\u0e16": 9, "\u0e07\u0e02\u0e19\u0e21\u0e2b\u0e27\u0e32\u0e19\u0e43\u0e19\u0e15\u0e33\u0e19\u0e32\u0e19\u0e17": 9, "\u0e19\u0e43\u0e08\u0e17": 9, "\u0e14\u0e41\u0e25": 9, "\u0e27\u0e25\u0e30\u0e01": 9, "\u0e2d\u0e07\u0e44\u0e21": 9, "\u0e33\u0e41\u0e02": 9, "\u0e07\u0e43\u0e2a": 9, "\u0e41\u0e19": 9, "\u0e46": [9, 16], "\u0e40\u0e1e\u0e23\u0e32\u0e30\u0e27": [9, 10], "\u0e32\u0e40\u0e1b": 9, "\u0e19\u0e2d\u0e30\u0e44\u0e23\u0e17": 9, "\u0e19\u0e43\u0e08\u0e2a": 9, "\u0e14\u0e46": 9, "\u0e32\u0e41\u0e02": 9, "\u0e07\u0e43\u0e2a\u0e40\u0e1b": 9, "extract_keyword": 9, "keyphrase_ngram_rang": 9, "max_keyword": 9, "min_df": 9, "stop_word": 9, "relev": 9, "keyphras": 9, "document": [9, 15, 16, 24], "mai": [9, 10, 11, 16, 23, 24], "produc": 9, "complet": 9, "differ": [9, 10, 11, 22], "so": [9, 23], "care": [9, 16], "note": [9, 10, 11, 15, 16, 18, 23], "expens": 9, "repetit": [9, 15], "creat": [9, 10, 11, 12, 16, 22, 23, 24], "highli": 9, "recommend": [9, 23], "unit": [9, 10, 11, 16], "defin": [9, 11], "vari": 9, "w": [9, 11, 16, 21], "tokenizer_engin": 9, "\u0e40\u0e2a\u0e32": 9, "\u0e44\u0e1f\u0e1f": 9, "consecut": 9, "\u0e40\u0e2a\u0e32\u0e44\u0e1f\u0e1f": 9, "stop": 9, "k": 9, "ignor": [9, 16], "\u0e2d\u0e32\u0e2b\u0e32\u0e23": [9, 10], "\u0e2b\u0e21\u0e32\u0e22\u0e16": 9, "\u0e02\u0e2d\u0e07\u0e41\u0e02": 9, "\u0e07\u0e2b\u0e23": 9, "\u0e2d\u0e02\u0e2d\u0e07\u0e40\u0e2b\u0e25\u0e27": 9, "\u0e19\u0e2b\u0e23": 9, "\u0e21\u0e40\u0e02": 9, "\u0e32\u0e2a": [9, 16], "\u0e32\u0e07\u0e01\u0e32\u0e22\u0e41\u0e25": 9, "\u0e08\u0e30\u0e17\u0e33\u0e43\u0e2b": 9, "\u0e40\u0e01": [9, 10, 11, 16], "\u0e14\u0e1e\u0e25": 9, "\u0e07\u0e07\u0e32\u0e19\u0e41\u0e25\u0e30\u0e04\u0e27\u0e32\u0e21\u0e23": 9, "\u0e2d\u0e19\u0e41\u0e01": 9, "\u0e32\u0e07\u0e01\u0e32\u0e22": 9, "\u0e17\u0e33\u0e43\u0e2b": 9, "\u0e32\u0e07\u0e01\u0e32\u0e22\u0e40\u0e08\u0e23": 9, "\u0e0d\u0e40\u0e15": 9, "\u0e1a\u0e42\u0e15": 9, "\u0e2d\u0e21\u0e41\u0e0b\u0e21\u0e2a": 9, "\u0e27\u0e19\u0e17": 9, "\u0e01\u0e2b\u0e23\u0e2d": 9, "\u0e04\u0e27\u0e1a\u0e04": 9, "\u0e21\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e25": 9, "\u0e22\u0e19\u0e41\u0e1b\u0e25\u0e07\u0e15": 9, "\u0e32\u0e07\u0e46": [9, 10], "\u0e43\u0e19\u0e23": [9, 16], "\u0e27\u0e22\u0e17\u0e33\u0e43\u0e2b": 9, "\u0e2d\u0e27": [9, 11], "\u0e22\u0e27\u0e30\u0e15": 9, "\u0e17\u0e33\u0e07\u0e32\u0e19\u0e44\u0e14": 9, "\u0e32\u0e07\u0e1b\u0e01\u0e15": 9, "\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e08\u0e30\u0e15": 9, "\u0e29\u0e41\u0e25\u0e30\u0e44\u0e21": 9, "\u0e14\u0e42\u0e17\u0e29\u0e15": 9, "\u0e2d\u0e23": 9, "\u0e22\u0e19\u0e41\u0e1b\u0e25\u0e07": 9, "\u0e29\u0e41\u0e25\u0e30": 9, "\u0e14\u0e42\u0e17\u0e29": 9, "minim": 9, "re": [9, 16], "implement": [9, 11, 16], "leverag": 9, "embed": [9, 15], "maartengr": 9, "airesearch": [9, 13], "att": [9, 17], "uncas": [9, 17], "return_similar": 9, "kb": 9, "3228477063109462": 9, "31320597838000375": 9, "29115434699705506": 9, "2678430841321016": 9, "24996827960821494": 9, "23876962942443258": 9, "23191285218852364": 9, "22425422716846247": 9, "22162962875299588": 9, "20773497763458507": 9, "emb": [9, 15], "ndarrai": [9, 15, 18], "averag": [9, 10, 15], "last": 9, "hidden": [9, 16], "layer": 9, "mark": [10, 11, 16, 22], "linguist": [10, 18], "annot": 10, "ne": 10, "three": 10, "lst20": 10, "tabl": 10, "\u0e43\u0e2b\u0e21": [10, 15], "\u0e40\u0e28\u0e29": 10, "\u0e21\u0e32\u0e01": [10, 16], "adp": 10, "adposit": 10, "\u0e41\u0e21": [10, 18], "\u0e02\u0e2d\u0e07": [10, 11], "\u0e2a\u0e33\u0e2b\u0e23": 10, "adv": 10, "\u0e40\u0e25": [10, 11], "\u0e40\u0e25\u0e22": 10, "aux": 10, "auxiliari": 10, "\u0e32\u0e22": [10, 16, 18], "cconj": 10, "coordin": 10, "conjunct": 10, "det": 10, "determin": 10, "\u0e2b\u0e25\u0e32\u0e22": 10, "intj": 10, "interject": 10, "\u0e01\u0e33\u0e21": 10, "\u0e1e\u0e27\u0e01": 10, "\u0e2a\u0e19\u0e32\u0e21": 10, "\u0e2c\u0e32": 10, "\u0e0d\u0e0a": 10, "num": 10, "numer": [10, 11, 16], "103": 10, "2004": 10, "\u0e2b\u0e19": [10, 14, 15, 16], "particl": 10, "\u0e21\u0e32": [10, 16], "pronoun": 10, "\u0e27\u0e40\u0e2d\u0e07": 10, "\u0e43\u0e04\u0e23": 10, "propn": 10, "proper": 10, "\u0e42\u0e2d\u0e1a\u0e32\u0e21\u0e32": 10, "\u0e41\u0e04\u0e1b": 10, "\u0e15\u0e2d\u0e25\u0e2e": 10, "\u0e42\u0e2d\u0e1e": 10, "\u0e44\u0e21\u0e40\u0e04": 10, "punct": 10, "punctuat": [10, 16], "sconj": 10, "subordin": 10, "\u0e2b\u0e32\u0e01": 10, "\u0e40\u0e1c\u0e0a": 10, "nprp": 10, "\u0e19\u0e42\u0e14\u0e27\u0e2a": 10, "95": [10, 11, 16], "\u0e42\u0e04\u0e42\u0e23\u0e19": 10, "\u0e42\u0e04": 10, "ncnm": 10, "cardin": 10, "\u0e2a\u0e2d\u0e07": [10, 16], "\u0e2a\u0e32\u0e21": 10, "nonm": 10, "ordin": 10, "nlbl": 10, "b": [10, 15, 16], "\u0e2d\u0e32\u0e04\u0e32\u0e23": 10, "nttl": 10, "titl": [10, 11], "\u0e1e\u0e25\u0e40\u0e2d\u0e01": 10, "person": [10, 11], "\u0e13": [10, 11, 13], "pdmn": 10, "demonstr": 10, "pntr": 10, "interrog": 10, "\u0e2d\u0e30\u0e44\u0e23": 10, "\u0e32\u0e07\u0e44\u0e23": 10, "prel": 10, "vact": 10, "\u0e2d\u0e07\u0e40\u0e1e\u0e25\u0e07": 10, "stativ": 10, "\u0e40\u0e2b": [10, 14], "vatt": 10, "\u0e2a\u0e27\u0e22": 10, "xvbm": 10, "\u0e2d\u0e1a": [10, 21], "\u0e01\u0e33\u0e25": 10, "xvam": 10, "after": [10, 11, 15, 16], "xvmm": 10, "\u0e04\u0e27\u0e23": [10, 21], "\u0e40\u0e04\u0e22": 10, "xvbb": 10, "imper": 10, "mood": 10, "\u0e13\u0e32": 10, "\u0e08\u0e07": 10, "\u0e32\u0e21": 10, "xvae": 10, "post": [10, 11, 13, 15], "ddan": 10, "definit": 10, "classifi": 10, "\u0e42\u0e19": 10, "ddac": 10, "allow": [10, 11], "ddbq": 10, "preced": 10, "quantit": 10, "express": [10, 11, 22, 24], "ddaq": 10, "\u0e1e\u0e2d\u0e14": 10, "diac": 10, "indefinit": 10, "\u0e44\u0e2b\u0e19": 10, "dibq": 10, "\u0e1a\u0e32\u0e07": 10, "\u0e1b\u0e23\u0e30\u0e21\u0e32\u0e13": 10, "diaq": 10, "dcnm": 10, "donm": 10, "\u0e14\u0e17": 10, "\u0e2a\u0e22": 10, "advn": 10, "\u0e33\u0e40\u0e2a\u0e21\u0e2d": 10, "advi": 10, "\u0e27\u0e46": 10, "\u0e40\u0e2a\u0e17\u0e2d\u0e46": 10, "\u0e32\u0e46": 10, "advp": 10, "prefix": [10, 16], "\u0e42\u0e14\u0e22\u0e40\u0e23": 10, "sententi": 10, "\u0e42\u0e14\u0e22\u0e1b\u0e01\u0e15": 10, "\u0e18\u0e23\u0e23\u0e21\u0e14\u0e32": 10, "cnit": 10, "cltv": 10, "collect": [10, 11, 15, 16], "\u0e01\u0e25": 10, "\u0e1d": [10, 18], "\u0e17\u0e32\u0e07": 10, "\u0e41\u0e1a\u0e1a": 10, "cmtr": 10, "\u0e42\u0e25\u0e01\u0e23": 10, "\u0e41\u0e01": 10, "\u0e27\u0e42\u0e21\u0e07": 10, "cfqc": 10, "\u0e40\u0e17": 10, "\u0e22\u0e27": 10, "cvbl": 10, "verbal": 10, "jcrg": 10, "jcmp": 10, "compar": [10, 18], "\u0e32\u0e01": 10, "jsbr": 10, "\u0e2d\u0e07\u0e08\u0e32\u0e01": 10, "rpre": 10, "preposit": 10, "\u0e08\u0e32\u0e01": 10, "\u0e25\u0e30": 10, "\u0e43\u0e15": [10, 18], "fixn": 10, "nomin": 10, "\u0e04\u0e27\u0e32\u0e21": [10, 11], "\u0e2a\u0e19": 10, "\u0e19\u0e2a\u0e19\u0e32\u0e19": 10, "fixv": 10, "adverbi": 10, "eaff": 10, "affirm": 10, "\u0e30": 10, "\u0e19\u0e30": 10, "\u0e40\u0e16\u0e2d\u0e30": 10, "eitt": 10, "\u0e40\u0e2b\u0e23\u0e2d": 10, "\u0e44\u0e2b\u0e21": 10, "punc": 10, "thu": 10, "corespond": 10, "aj": 10, "av": 10, "ax": 10, "cl": 10, "fx": 10, "ij": 10, "nn": 10, "nu": 10, "pa": 10, "pr": 10, "pu": 10, "vv": 10, "xx": 10, "insid": 10, "outsid": 10, "beggin": 10, "iob": [10, 17], "chunk": [10, 11], "intermedi": 10, "o": [10, 14], "doe": [10, 11, 12, 15, 16, 22, 23], "belong": 10, "\u0e1a\u0e32\u0e23": 10, "\u0e42\u0e2d\u0e1a\u0e32\u0e21\u0e32\u0e40\u0e1b": 10, "\u0e19\u0e1b\u0e23\u0e30\u0e18\u0e32\u0e19\u0e18": 10, "\u0e1b\u0e14": 10, "would": [10, 11, 22], "\u0e1b\u0e23\u0e30\u0e18\u0e32\u0e19\u0e32\u0e18": 10, "respect": [10, 18], "date": [10, 11, 16], "21": [10, 11, 16], "16": 10, "time": [10, 11, 16, 23], "email": [10, 11], "info": [10, 21], "nrpsc": 10, "\u0e42\u0e25\u0e40\u0e21\u0e15\u0e23": 10, "\u0e01\u0e21": 10, "locat": [10, 11, 12, 16, 23], "\u0e44\u0e17\u0e22": [10, 14, 18], "\u0e1b\u0e23\u0e32\u0e08": 10, "\u0e01\u0e33\u0e41\u0e1e\u0e07\u0e40\u0e1e\u0e0a\u0e23": 10, "organ": [10, 11], "\u0e01\u0e23\u0e21\u0e27": 10, "\u0e17\u0e22\u0e32\u0e28\u0e32\u0e2a\u0e15\u0e23": 10, "\u0e01\u0e32\u0e23\u0e41\u0e1e\u0e17\u0e22": 10, "\u0e08\u0e23": 10, "\u0e19\u0e32\u0e07\u0e1b\u0e23\u0e30\u0e19\u0e2d\u0e21": 10, "\u0e17\u0e2d\u0e07\u0e08": 10, "phone": [10, 11], "1200": 10, "2670": 10, "8888": 10, "bangkokhealth": 10, "zip": 10, "10400": 10, "11130": 10, "monei": [10, 16], "\u0e32\u0e19\u0e1a\u0e32\u0e17": 10, "\u0e1a\u0e32\u0e17": [10, 11, 16], "law": [10, 11, 24], "\u0e42\u0e23\u0e04\u0e23\u0e30\u0e1a\u0e32\u0e14": 10, "2499": 10, "\u0e10\u0e18\u0e23\u0e23\u0e21\u0e19": 10, "pos_tag": 10, "It": [10, 11, 16, 22, 23], "chang": [10, 11, 16], "academ": 10, "articl": 10, "orchid_ud": 10, "blackboard": [10, 11], "treebank": [10, 11], "blackboard_ud": 10, "universaldepend": 10, "pud": 10, "parallel": 10, "nativ": [10, 16, 22], "\u0e23\u0e2d\u0e14": 10, "\u0e43\u0e19": [10, 16, 21], "\u0e2b\u0e25\u0e1a\u0e20": 10, "\u0e19\u0e32\u0e22\u0e01": [10, 18], "\u0e40\u0e0a\u0e2d\u0e23": 10, "\u0e32\u0e2d": 10, "\u0e08\u0e33\u0e19\u0e27\u0e19": [10, 16], "\u0e02\u0e32": 10, "equal": [10, 14], "pos_tag_s": 10, "\u0e19\u0e01": [10, 15, 18], "tag_provinc": 10, "recogn": 10, "context": [10, 22], "reutrn": 10, "ner": [10, 11, 17], "\u0e2b\u0e19\u0e2d\u0e07\u0e04\u0e32\u0e22": 10, "chunk_pars": 10, "crf": [10, 11], "orchidpp": 10, "pars": [10, 19, 23], "phrase": [10, 11], "structur": 10, "now": [10, 16], "tokens_po": 10, "np": 10, "thainer": [10, 17, 21], "load_engin": 10, "entitii": [10, 17], "associ": [10, 17], "\u0e17\u0e14\u0e2a\u0e2d\u0e1a\u0e19\u0e32\u0e22\u0e27\u0e23\u0e23\u0e13\u0e1e\u0e07\u0e29": 10, "\u0e17\u0e17": 10, "\u0e22\u0e44\u0e1e\u0e1a": 10, "\u0e25\u0e22": 10, "\u0e17\u0e14\u0e2a\u0e2d\u0e1a": 10, "\u0e19\u0e32\u0e22": 10, "\u0e27\u0e23\u0e23\u0e13": [10, 21], "\u0e1e\u0e07\u0e29": 10, "\u0e44\u0e1e\u0e1a": 10, "\u0e19\u0e32\u0e22\u0e27\u0e23\u0e23\u0e13\u0e1e\u0e07\u0e29": 10, "nner": 10, "thai_nner": 10, "nest": 10, "recognit": [10, 17, 23], "named_ent": [10, 11], "\u0e41\u0e21\u0e27\u0e17\u0e33\u0e2d\u0e30\u0e44\u0e23\u0e15\u0e2d\u0e19\u0e2b": 10, "\u0e32\u0e42\u0e21\u0e07\u0e40\u0e0a": 10, "\u0e15\u0e2d\u0e19": 10, "\u0e42\u0e21\u0e07": 10, "span": 10, "entity_typ": 10, "thainametagg": [10, 17], "defualt": 10, "thainer14": 10, "get_ner": [10, 17], "15": [10, 15, 16, 18], "61": 10, "\u0e17\u0e14\u0e2a\u0e2d\u0e1a\u0e23\u0e30\u0e1a\u0e1a\u0e40\u0e27\u0e25\u0e32": 10, "49": 10, "To": 10, "exclud": [10, 16], "\u0e23\u0e30\u0e1a\u0e1a": 10, "\u0e40\u0e27\u0e25\u0e32": [10, 16], "\u0e40\u0e02\u0e32\u0e40\u0e23": 10, "\u0e22\u0e19\u0e17": 10, "\u0e22\u0e19\u0e19\u0e32\u0e07\u0e23\u0e2d\u0e07": 10, "l": [10, 16, 17], "\u0e19\u0e32\u0e07\u0e23\u0e2d\u0e07": 10, "account": 10, "virach": 10, "sornlertlamvanich": 10, "naoto": 10, "takahashi": 10, "hitoshi": 10, "isahara": 10, "2000": [10, 11], "build": [10, 23], "Of": [10, 21], "journal": [10, 14], "acoust": 10, "vol": 10, "20": [10, 13], "pp": [10, 11], "189": 10, "198": 10, "1999": 10, "prachya": 10, "boonkwan": 10, "vorapon": 10, "luantangsrisuk": 10, "sitthaa": 10, "phaholphinyo": 10, "kanyanat": 10, "kriengket": 10, "dhanon": 10, "leenoi": 10, "charun": 10, "phrombut": 10, "monthika": 10, "boriboon": 10, "krit": 10, "kosawat": 10, "thepchai": 10, "supnithi": 10, "2020": [10, 11], "guidelin": 10, "arxiv": [10, 17], "2008": 10, "05055": 10, "multipl": [11, 15, 16, 18], "desir": 11, "clause_token": 11, "claus": 11, "split": 11, "claue": 11, "\u0e19\u0e2d\u0e19": 11, "\u0e2d\u0e16": [11, 16], "\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21": 11, "keep_whitespac": 11, "among": 11, "newlin": [11, 15, 16], "splite": 11, "ted": 11, "thaisum": 11, "nakhun": 11, "chumpolsathien": 11, "wtp": 11, "wtpsplitax": 11, "mani": [11, 16], "size": [11, 15], "mini": 11, "tini": 11, "canin": 11, "1l": 11, "12l": 11, "specifiaclli": 11, "regex": 11, "pattern": 11, "sentence_1": 11, "\u0e19\u0e44\u0e1b\u0e1b\u0e23\u0e30\u0e0a": 11, "\u0e21\u0e40\u0e21": 11, "\u0e19\u0e32\u0e04\u0e21": [11, 16], "sentence_2": 11, "\u0e32\u0e23\u0e32\u0e0a\u0e01\u0e32\u0e23\u0e44\u0e14": 11, "\u0e1a\u0e01\u0e32\u0e23\u0e2b\u0e21": 11, "\u0e19\u0e40\u0e27": 11, "\u0e22\u0e19\u0e40\u0e1b": 11, "\u0e19\u0e23\u0e30\u0e22\u0e30": 11, "\u0e41\u0e25\u0e30\u0e44\u0e14": 11, "\u0e1a\u0e21\u0e2d\u0e1a\u0e2b\u0e21\u0e32\u0e22\u0e43\u0e2b": 11, "\u0e1b\u0e23\u0e30\u0e08\u0e33\u0e43\u0e19\u0e23\u0e30\u0e14": 11, "\u0e1a\u0e20": 11, "\u0e20\u0e32\u0e04": 11, "n\u0e41\u0e25\u0e30\u0e44\u0e14": 11, "\u0e41\u0e25\u0e30\u0e40\u0e02\u0e32\u0e44\u0e14": 11, "paragraph_token": 11, "paragraph_threshold": 11, "\u0e1a\u0e17\u0e04\u0e27\u0e32\u0e21\u0e19": 11, "\u0e22\u0e19\u0e2a": 11, "\u0e07\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b": 11, "\u0e19\u0e21\u0e32\u0e08\u0e32\u0e01\u0e1c\u0e25\u0e07\u0e32\u0e19\u0e27": 11, "\u0e22\u0e17": 11, "\u0e40\u0e04\u0e22\u0e17\u0e33\u0e21\u0e32\u0e43\u0e19\u0e2d\u0e14": 11, "\u0e17\u0e33\u0e01\u0e32\u0e23\u0e28": 11, "\u0e01\u0e29\u0e32\u0e04": 11, "\u0e19\u0e04\u0e27": 11, "\u0e32\u0e43\u0e2b\u0e21": 11, "\u0e32\u0e07\u0e01\u0e27": 11, "\u0e32\u0e07\u0e02\u0e27\u0e32\u0e07\u0e41\u0e15": 11, "\u0e32\u0e07\u0e43\u0e14": 11, "\u0e07\u0e43\u0e04\u0e23": 11, "\u0e02\u0e2d\u0e2d\u0e20": 11, "\u0e22\u0e43\u0e19\u0e04\u0e27\u0e32\u0e21\u0e1a\u0e01\u0e1e\u0e23": 11, "\u0e2d\u0e07\u0e17": [11, 21], "\u0e07\u0e1b\u0e27\u0e07\u0e21\u0e32": 11, "subword_token": 11, "insepar": 11, "contigu": 11, "separ": [11, 21], "further": 11, "\u0e08\u0e30": 11, "\u0e1d\u0e32": 11, "appli": [11, 14, 15, 16], "rule": [11, 14, 15, 16, 22], "smallest": 11, "\u0e02\u0e19\u0e21\u0e0a": 11, "enhanc": 11, "inrut": 11, "et": 11, "2001": 11, "ssg": [11, 23], "theeramunkong": 11, "tcc_p": 11, "sentencepiec": [11, 17], "text_1": 11, "\u0e04\u0e40\u0e23": 11, "\u0e21\u0e41\u0e23\u0e01\u0e02\u0e2d\u0e07": 11, "\u0e23\u0e32\u0e0a\u0e27\u0e07\u0e28": 11, "\u0e2b\u0e21": [11, 16, 21], "text_2": 11, "\u0e04\u0e27\u0e32\u0e21\u0e41\u0e1b\u0e25\u0e01\u0e41\u0e22\u0e01\u0e41\u0e25\u0e30\u0e1e": 11, "\u0e12\u0e19\u0e32\u0e01\u0e32\u0e23": 11, "\u0e41\u0e23": 11, "\u0e23\u0e32": [11, 14], "\u0e27\u0e32": 11, "\u0e41\u0e1b": 11, "\u0e41\u0e22": 11, "\u0e12": [11, 18], "\u0e19\u0e32": 11, "\u0e04\u0e27\u0e32\u0e21\u0e41\u0e1b\u0e25\u0e01\u0e41\u0e22\u0e01\u0e41\u0e25\u0e30": 11, "\u0e19\u0e32\u0e01\u0e32\u0e23": 11, "\u0e21\u0e41\u0e23\u0e01": 11, "\u0e41\u0e1b\u0e25\u0e01": [11, 16], "\u0e41\u0e22\u0e01": 11, "join_broken_num": 11, "omit": 11, "rejoin": 11, "wrongli": 11, "learn": [11, 14, 15], "intern": [11, 12, 14, 23, 24], "compon": [11, 14, 23], "unicod": [11, 14, 16, 23], "mm": 11, "multi": [11, 22], "cut": 11, "maxim": 11, "boundari": 11, "same": 11, "new": [11, 15, 16, 22, 23], "safe": 11, "mechan": 11, "avoid": 11, "long": [11, 16], "continu": 11, "ambigu": 11, "break": 11, "point": [11, 16], "adapt": 11, "rust": 11, "5x": 11, "faster": 11, "domain": [11, 24], "stack": 11, "sefr": 11, "ensembl": 11, "refin": 11, "colloc": 11, "\u0e42\u0e2d\u0e40\u0e04\u0e1a": [11, 22], "\u0e1e\u0e27\u0e01\u0e40\u0e23\u0e32\u0e23": 11, "\u0e01\u0e20\u0e32\u0e29\u0e32\u0e1a": 11, "\u0e32\u0e19\u0e40\u0e01": 11, "\u0e42\u0e2d\u0e40\u0e04": [11, 22], "\u0e20\u0e32\u0e29\u0e32": [11, 22], "\u0e27\u0e23\u0e23\u0e13\u0e01\u0e23\u0e23\u0e21": 11, "\u0e20\u0e32\u0e1e\u0e27\u0e32\u0e14": 11, "\u0e41\u0e25\u0e30\u0e01\u0e32\u0e23\u0e41\u0e2a\u0e14\u0e07\u0e07": 11, "\u0e01\u0e32\u0e23\u0e41\u0e2a\u0e14\u0e07": 11, "join": [11, 12], "broken": 11, "decim": [11, 16], "ip": 11, "address": 11, "\u0e40\u0e07": 11, "\u0e191": 11, "234\u0e1a\u0e32\u0e1719": 11, "32\u0e19": 11, "127": 11, "234": 11, "\u0e19\u0e42\u0e0b": 11, "\u0e2d\u0e32\u0e40\u0e1a\u0e30": 11, "\u0e19\u0e22\u0e32\u0e22\u0e19": 11, "\u0e42\u0e0b": 11, "\u0e2d\u0e32": [11, 16], "\u0e40\u0e1a\u0e30": 11, "custom_dict_japanese_nam": 11, "add": [11, 15, 16, 18], "dict_sourc": [11, 16], "word_detoken": 11, "detoken": 11, "along": 11, "encapsul": 11, "them": [11, 16, 22, 23], "singl": [11, 18], "instanti": 11, "custom_words_list": 11, "\u0e2d\u0e30\u0e40\u0e1f\u0e40\u0e0b": 11, "aphasia": 11, "\u0e19\u0e2d\u0e32\u0e01\u0e32\u0e23\u0e1c": 11, "\u0e14\u0e1b\u0e01\u0e15": 11, "\u0e02\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e1e": 11, "_token": 11, "\u0e2d\u0e32\u0e01\u0e32\u0e23": 11, "\u0e2d\u0e30": 11, "\u0e40\u0e1f\u0e40\u0e0b": 11, "explicitli": 11, "path_to_custom_dictionari": 11, "custom_dictionari": 11, "txtt": 11, "encod": [11, 15, 16], "utf": [11, 16], "f": [11, 16], "naphasia": 11, "n\u0e1c": 11, "n\u0e1b\u0e01\u0e15": 11, "init": 11, "\u0e1b\u0e01\u0e15": 11, "set_tokenizer_engin": 11, "\u0e19\u0e2d\u0e32\u0e01\u0e32\u0e23": 11, "vocaburai": 11, "main": 11, "set_tokenize_engin": 11, "condit": [11, 24], "random": 11, "field": [11, 16, 22], "accuraci": 11, "87": 11, "state": 11, "zhou": 11, "2016": [11, 19, 24], "aclweb": 11, "anthologi": 11, "c16": 11, "1031": 11, "82": 11, "notebook": [11, 15, 17, 19, 24], "vistec": [11, 13, 17], "ai": [11, 13, 15, 17], "ted_crawl": 11, "due": [11, 16], "unreli": 11, "extract_featur": 11, "window": [11, 18, 23], "max_n_gram": 11, "extract": 11, "slide": 11, "n_gram": 11, "gram": 11, "fed": 11, "origin": [11, 16], "nakhunchumpolsathien": 11, "mastersthesi": 11, "chumpolsathien_2020": 11, "distil": 11, "keyword": 11, "neural": 11, "lingual": 11, "summar": [11, 19, 23], "author": 11, "year": [11, 16], "school": 11, "beij": 11, "institut": [11, 13, 14, 17], "technologi": [11, 13], "copyright": [11, 24], "apach": [11, 19, 24], "except": [11, 24], "complianc": [11, 24], "obtain": [11, 16, 18, 24], "unless": [11, 24], "applic": [11, 24], "agre": [11, 24], "softwar": [11, 19, 24], "distribut": [11, 16, 23, 24], "AS": [11, 24], "basi": [11, 22, 24], "warranti": [11, 24], "OR": [11, 24], "OF": [11, 24], "either": [11, 18, 24], "impli": [11, 24], "govern": [11, 12, 24], "permiss": [11, 23, 24], "limit": [11, 24], "list_to_str": 11, "middle_cut": 11, "thaisentencesegmentor": 11, "split_into_sent": 11, "ismiddlecut": 11, "fast": [11, 15, 23], "reason": 11, "accur": [11, 16, 23], "repositori": 11, "attacuttoken": 11, "sc": 11, "librari": [11, 16, 19, 22, 23], "1d": 11, "convolut": 11, "instal": [11, 18, 19], "tensorflow": 11, "themselv": [11, 16], "facebook": [11, 13], "gist": 11, "latticestr": 11, "in_dict": 11, "mmcut": 11, "default_word_dict_tri": 11, "find_all_seg": 11, "variat": 11, "load_dict": 11, "file_path": 11, "dict_nam": 11, "memori": 11, "throught": 11, "overrid": 11, "uniqu": 11, "_67a47bf9": 11, "safe_mod": 11, "parallel_mod": 11, "bind": 11, "reduc": 11, "chanc": 11, "multithread": 11, "mode": [11, 23], "patorn": 11, "utenpattanun": 11, "longestmatchtoken": 11, "breakiter": 11, "wannaphong": [11, 14, 19], "phatthiyaphaibun": [11, 19], "taglist": 11, "parm": 11, "ws1000": 11, "framework": 11, "baselin": 11, "2021": [11, 17], "heurist": [11, 16], "exponenti": 11, "wait": 11, "colab": [11, 17], "research": [11, 13, 17, 22], "googl": [11, 17], "fileid": 11, "1v1z657_5eswpo8rlfvrwa0a5e4vkg7si": 11, "drive": 11, "14ibg": 11, "ngzxj15rkwjnwozlot32fqborbx": 11, "scrollto": 11, "myz7nzar7dmw": 11, "accorind": 11, "purpos": 11, "jakkrit": 11, "techo": 11, "grammar": 11, "wittawat": 11, "jitkrittum": 11, "link": [11, 16], "tcc_po": 11, "automodul": 11, "reli": [11, 16], "1utqgxxmrxor9jp1b1jcq1frbnvorhtbq": 11, "jeeragon": 11, "patiroop": 11, "yuanghirun": 11, "sarayut": 11, "paludkong": 11, "supot": 11, "nitsuwat": 11, "para": 11, "limmaneepraserth": 11, "forward": 11, "backward": 11, "symposium": 11, "commun": 11, "iscit": 11, "37": 11, "concept": 11, "present": 11, "miscellan": 12, "get_full_data_path": 12, "full": [12, 16, 23], "get_pythainlp_data_path": 12, "where": [12, 15, 16, 22, 23], "environ": [12, 23], "variabl": [12, 23], "pythainlp_data_dir": [12, 23], "get_pythainlp_path": 12, "misspel": 12, "ratio": 12, "simul": 12, "some": [12, 21, 23], "mispel": 12, "per": 12, "100": [12, 16], "\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\u0e1b\u0e23\u0e32\u0e01\u0e0f\u0e04\u0e23": 12, "\u0e07\u0e41\u0e23\u0e01\u0e43\u0e19\u0e1e": 12, "\u0e17\u0e18\u0e28": 12, "\u0e01\u0e23\u0e32\u0e0a": 12, "1826": 12, "\u0e07\u0e41\u0e23\u0e01\u0e43\u0e19\u0e01": 12, "1727": 12, "machin": [13, 23], "src_lang": 13, "target_lang": 13, "use_gpu": 13, "target": [13, 16], "gpu": [13, 17], "zh": [13, 14], "chines": [13, 22], "fr": 13, "french": [13, 22], "th2en": 13, "\u0e19\u0e23": 13, "\u0e01\u0e41\u0e21\u0e27": 13, "love": 13, "load_model": 13, "en_th": 13, "download_model_al": 13, "advanc": [13, 23], "enthtransl": 13, "depa": [13, 17], "websit": [13, 19], "releas": [13, 24], "enth": 13, "thentransl": 13, "zh_th": 13, "thzhtranslat": 13, "lalita": [13, 19], "marianmt": 13, "zh_cn": 13, "builder": 13, "lalitadeelert": 13, "mt": 13, "zhth": 13, "web": 13, "aibuildersx": 13, "166736255494822": 13, "thzh": 13, "\u0e01\u0e04": 13, "\u6211\u7231\u4f60": 13, "zhthtranslat": 13, "\u0e13\u0e19\u0e30": 13, "th_fr": 13, "thfrtranslat": 13, "helsinki": 13, "opu": 13, "group": [13, 17], "bleu": 13, "co": 13, "thfr": 13, "\u0e17\u0e14\u0e2a\u0e2d\u0e1a\u0e23\u0e30\u0e1a\u0e1a": 13, "du": 13, "syst\u00e8m": 13, "turn": 14, "put": [14, 16], "simpli": [14, 16], "fallback_engin": 14, "render": 14, "latin": 14, "alphabet": [14, 16, 23], "system": [14, 16, 22, 23], "transcript": [14, 16], "rtg": [14, 16], "offici": 14, "publish": 14, "\u0e16\u0e2d\u0e14\u0e40\u0e2a": 14, "\u0e22\u0e07\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\u0e40\u0e1b": 14, "\u0e19\u0e2d": [14, 16], "\u0e01\u0e29\u0e23\u0e25\u0e30\u0e15": 14, "One": 14, "thai2rom_onnx": 14, "lookup": 14, "more": [14, 16, 23, 24], "issu": [14, 22], "deep": 14, "pytorch": 14, "onnx": 14, "runtim": 14, "compil": [14, 23], "\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16": [14, 16], "samant": 14, "samat": 14, "\u0e20\u0e32\u0e1e\u0e22\u0e19\u0e15\u0e23": 14, "phapn": 14, "phapphayon": 14, "\u0e2d\u0e1b\u0e1b": 14, "pronounc": 14, "graphem": 14, "phonem": [14, 16], "pyicu": [14, 23], "epitran": 14, "tltk_g2p": 14, "11940": 14, "tltk_ipa": 14, "\u0101m\u0101rt": 14, "h": [14, 16], "sa\u02d0ma\u02d0rot": 14, "sa\u02d05": 14, "ma\u02d0t3": 14, "saa4": 14, "maat2": 14, "h\u0101phyntr": 14, "p\u02b0a\u02d0pjanot": 14, "p\u02b0": 14, "j": [14, 16], "pronunci": [14, 16], "w2p": 14, "letter": [14, 22], "\u0e2a\u0e32": 14, "\u0e21\u0e32\u0e14": 14, "\u0e1e\u0e32\u0e1a": 14, "\u0e1e\u0e30": 14, "puan": 14, "show_pronunci": 14, "spooner": 14, "\u0e19\u0e32\u0e23": 14, "\u0e19\u0e23\u0e32": 14, "wunsen": 14, "wunsentransliter": 14, "japanes": [14, 22], "korean": 14, "mandarin": 14, "vietnames": 14, "jp_input": 14, "zh_sandhi": 14, "third": 14, "sandhi": 14, "jp": 14, "hepburn": 14, "ko": [14, 16], "vi": 14, "script": [14, 16], "hanyu": 14, "pinyin": 14, "diacrit": 14, "macron": 14, "ors61": 14, "\u0e01\u0e40\u0e01\u0e13\u0e11": 14, "\u0e01\u0e32\u0e23\u0e17": 14, "\u0e1a\u0e28": 14, "\u0e1e\u0e17": 14, "\u0e20\u0e32\u0e29\u0e32\u0e0d": 14, "\u0e2a\u0e33\u0e19": 14, "\u0e01\u0e07\u0e32\u0e19\u0e23\u0e32\u0e0a\u0e1a": 14, "\u0e13\u0e11": 14, "\u0e15\u0e22\u0e2a\u0e20\u0e32": 14, "2561": 14, "ri35": 14, "\u0e23\u0e32\u0e0a\u0e1a": 14, "\u0e15\u0e22\u0e2a\u0e16\u0e32\u0e19": 14, "2535": 14, "ri49": 14, "\u0e20\u0e32\u0e29\u0e32\u0e08": 14, "2549": 14, "thc43": 14, "\u0e40\u0e01\u0e13\u0e11": 14, "\u0e01\u0e32\u0e23\u0e16": 14, "\u0e32\u0e22\u0e17\u0e2d\u0e14\u0e40\u0e2a": 14, "\u0e22\u0e07\u0e20\u0e32\u0e29\u0e32\u0e08": 14, "\u0e19\u0e41\u0e21\u0e19\u0e14\u0e32\u0e23": 14, "\u0e27\u0e22\u0e2d": 14, "\u0e01\u0e02\u0e23\u0e27": 14, "\u0e04\u0e13\u0e30\u0e01\u0e23\u0e23\u0e21\u0e01\u0e32\u0e23\u0e2a": 14, "\u0e19\u0e1b\u0e23\u0e30\u0e27": 14, "\u0e28\u0e32\u0e2a\u0e15\u0e23": 14, "\u0e44\u0e17\u0e22\u0e43\u0e19\u0e40\u0e2d\u0e01\u0e2a\u0e32\u0e23": 14, "2543": 14, "wt": 14, "ohay\u014d": 14, "\u0e42\u0e2d\u0e2e\u0e32\u0e42\u0e22": 14, "ohay": 14, "\u0e42\u0e2d\u0e30\u0e2e\u0e30\u0e42\u0e22": 14, "annyeonghaseyo": 14, "\u0e19\u0e19\u0e22": 14, "\u0e2d\u0e07\u0e2e\u0e32\u0e40\u0e0b\u0e42\u0e22": 14, "xin": 14, "ch\u00e0o": 14, "\u0e32\u0e27": 14, "ni3": 14, "hao3": 14, "internaiton": 14, "trans_list": 14, "xsampa_list": 14, "nitaya": 14, "kanchanawan": 14, "2006": 14, "global": 14, "fine": 15, "tune": 15, "classif": [15, 16, 22, 23], "thaitoken": 15, "frozen": 15, "fastai": 15, "basetoken": 15, "transform": [15, 16, 17], "static": 15, "dictonari": 15, "meth": 15, "\u0e2d\u0e32\u0e20\u0e23\u0e13": 15, "\u0e19\u0e15\u0e21\u0e22\u0e1b": 15, "\u0e20\u0e32\u0e27\u0e19\u0e32\u0e21\u0e22\u0e1b": 15, "\u0e15\u0e21": 15, "add_special_cas": 15, "tok": 15, "document_vector": 15, "agg": 15, "400": [15, 16], "dimens": [15, 18], "bunch": 15, "learner": 15, "aggreg": [15, 18], "avial": 15, "numpi": [15, 18], "arrai": [15, 18], "document_vectorr": 15, "load_data": 15, "thwiki_lm_data": 15, "pkl": 15, "language_model_learn": 15, "config": [15, 23], "emb_sz": 15, "n_hid": 15, "1550": 15, "n_layer": 15, "pad_token": 15, "qrnn": 15, "tie_weight": 15, "out_bia": 15, "output_p": 15, "hidden_p": 15, "input_p": 15, "embed_p": 15, "weight_p": 15, "trn_arg": 15, "drop_mult": 15, "clip": 15, "12": [15, 16], "alpha": 15, "beta": 15, "awd_lstm": 15, "\u0e19\u0e19": 15, "\u0e19\u0e14": [15, 16], "usag": 15, "jupyt": 15, "fix_html": 15, "anbsp": 15, "amp": 15, "nbsp": 15, "lowercase_al": 15, "lowercas": 15, "don": 15, "usual": 15, "nuanc": 15, "capit": 15, "merge_wgt": 15, "em_sz": 15, "wgt": 15, "itos_pr": 15, "itos_new": 15, "insert": 15, "vocab": 15, "updat": 15, "torch": 15, "merg": 15, "randn": 15, "\u0e1b\u0e25\u0e32": 15, "tensor": 15, "5952": 15, "4453": 15, "0011": 15, "encoder_dp": 15, "decod": 15, "process_thai": 15, "pre_rul": 15, "reorder_vowel": [15, 16], "spec_add_spac": 15, "rm_useless_spac": 15, "rm_useless_newlin": 15, "rm_bracket": 15, "replace_url": 15, "replace_rep_nonum": 15, "tok_func": 15, "bound": 15, "post_rul": 15, "ungroup_emoji": 15, "replace_wrep_post_nonum": 15, "spars": [15, 18], "\u0e32\u0e19\u0e19\u0e19\u0e19\u0e19": 15, "\u0e19\u0e32\u0e19\u0e19\u0e32\u0e19\u0e19\u0e32\u0e19": 15, "xxrep": 15, "xxwrep": 15, "\u0e19\u0e32\u0e19": 15, "modifi": [15, 16], "arug": 15, "replace_rep_aft": 15, "replace_wrep_post": 15, "bracket": 15, "artifact": 15, "bag": 15, "done": 15, "prevent": 15, "\u0e2d\u0e22\u0e22\u0e22\u0e22\u0e22\u0e22\u0e22\u0e22": 15, "becom": 15, "retain": 15, "counter": [15, 16], "\u0e01\u0e32\u0e32\u0e32\u0e32\u0e32\u0e32\u0e32": 15, "\u0e01\u0e32xxrep7": 15, "reptit": 15, "replace_wrep": 15, "front": [15, 16], "ungroup": 15, "zero": [15, 16, 24], "width": [15, 16], "joiner": [15, 16], "zvj": 15, "emoji": [15, 16], "emojipedia": 15, "zwj": 15, "convers": 16, "arabic_digit_to_thai_digit": 16, "arab": 16, "digit": 16, "\u0e53": 16, "\u0e51\u0e50": 16, "\u0e52": 16, "\u0e19\u0e08\u0e33\u0e19\u0e27\u0e19": 16, "123": 16, "\u0e51\u0e52\u0e53": 16, "\u0e54\u0e50\u0e50": 16, "\u0e52\u0e55": 16, "bahttext": 16, "suffix": 16, "baht": 16, "fix": [16, 23], "place": 16, "fit": 16, "\u0e2a\u0e15\u0e32\u0e07\u0e04": 16, "satang": 16, "microsoft": [16, 23], "excel": 16, "currenc": 16, "amount": 16, "\u0e07\u0e1a\u0e32\u0e17\u0e16": 16, "\u0e1a\u0e40\u0e2d": 16, "\u0e14\u0e1a\u0e32\u0e17\u0e16": 16, "200": 16, "\u0e2a\u0e2d\u0e07\u0e23": 16, "\u0e2d\u0e22\u0e1a\u0e32\u0e17\u0e16": 16, "convert_year": 16, "src": 16, "buddhist": 16, "calendar": 16, "anno": 16, "domini": 16, "rattanakosin": 16, "era": 16, "ah": 16, "hejira": 16, "warn": 16, "properli": 16, "1941": 16, "becaus": [16, 22], "travel": 16, "historian": 16, "collat": 16, "revers": 16, "almost": 16, "symbol": 16, "ascend": 16, "\u0e44\u0e01": 16, "\u0e01\u0e32\u0e25": 16, "count_thai_char": 16, "count": 16, "conson": 16, "lead_vowel": 16, "follow_vowel": 16, "above_vowel": 16, "below_vowel": 16, "tonemark": 16, "sign": 16, "thai_digit": 16, "non_thai": 16, "\u0e17\u0e14\u0e2a\u0e2d\u0e1a\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22": 16, "countthai": 16, "ignore_char": 16, "x0b": 16, "x0c0123456789": 16, "proport": 16, "puntuat": 16, "percent": 16, "\u0e44\u0e17\u0e22\u0e40\u0e2d": 16, "\u0e19\u0e41\u0e2d\u0e25\u0e1e": 16, "\u0e07\u0e32\u0e19": [16, 21], "digit_to_text": 16, "\u0e54": 16, "display_thai_char": 16, "ch": 16, "underscor": 16, "high": 16, "eas": 16, "readabl": 16, "emoji_to_thai": 16, "delimit": 16, "\u0e08\u0e30\u0e21\u0e32\u0e19": 16, "\u0e07\u0e23\u0e16\u0e40\u0e21\u0e25": 16, "\u0e2d\u0e19\u0e1c\u0e21\u0e01": 16, "\u0e19\u0e30\u0e04\u0e23": 16, "\u0e43\u0e01\u0e25": 16, "\u0e14\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e0a\u0e19\u0e14": 16, "\u0e21\u0e22": 16, "\u0e07\u0e1f": 16, "\u0e27\u0e02": 16, "\u0e32\u0e27\u0e2d\u0e22\u0e32\u0e01\u0e01": 16, "\u0e19\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e0d": 16, "\u0e2d\u0e18\u0e07\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e44\u0e17\u0e22": 16, "\u0e18\u0e07_\u0e44\u0e17\u0e22": 16, "eng_to_thai": 16, "incorrectli": 16, "u": 16, "qwerti": 16, "keyboard": 16, "layout": 16, "intend": 16, "kedmane": 16, "incorrect": 16, "intention": 16, "\u0e18\u0e19\u0e32\u0e04\u0e32\u0e23\u0e41\u0e2b": 16, "\u0e07\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e44\u0e17\u0e22": 16, "got": 16, "tok8kicsj": 16, "xitgmlwmp": 16, "find_keyword": 16, "word_list": 16, "mininum": 16, "pair": 16, "raw": 16, "\u0e25\u0e32\u0e22\u0e25": 16, "\u0e01\u0e29\u0e13": 16, "\u0e01\u0e29\u0e23": 16, "\u0e01\u0e29\u0e23\u0e41\u0e25\u0e30": 16, "ipa_to_rtg": 16, "kluaj": 16, "kluai": 16, "is_native_thai": 16, "\u0e04\u0e33\u0e44\u0e17\u0e22\u0e41\u0e17": 16, "simpl": 16, "cannot": 16, "entir": 16, "reliabl": 16, "avocado": 16, "\u0e21\u0e30\u0e21": 16, "\u0e27\u0e07": 16, "\u0e15\u0e30\u0e27": 16, "\u0e22\u0e32\u0e20\u0e23\u0e13": 16, "isthai": 16, "\u0e01\u0e32\u0e25\u0e40\u0e27\u0e25\u0e32": 16, "66": 16, "01234567890": 16, "isthaichar": 16, "characttr": 16, "kai": 16, "\u0e55": 16, "five": 16, "maiyamok": 16, "\u0e01\u0e46\u0e0a\u0e2d\u0e1a\u0e44\u0e1b\u0e42\u0e23\u0e07\u0e40\u0e23": 16, "\u0e17\u0e33\u0e44\u0e21": 16, "\u0e17\u0e33": [16, 21], "nectec_to_ipa": 16, "nectec": 16, "kl": 16, "uua": 16, "pornpimon": 16, "palingoon": 16, "sumonma": 16, "thatphithakkul": 16, "chapter": 16, "handbook": 16, "electron": 16, "1st": 16, "ed": 16, "122": 16, "56": 16, "reorder": 16, "dangl": 16, "remove_zw": 16, "remove_dup_spac": 16, "remove_repeat_vowel": 16, "remove_dangl": 16, "those": 16, "unicodedata": 16, "fule": 16, "\u0e40\u0e40\u0e1b\u0e25\u0e01": 16, "sara": 16, "\u0e19\u0e32\u0e19\u0e32\u0e32\u0e32": 16, "\u0e19\u0e32\u0e19\u0e32": 16, "now_reign_year": 16, "reign": 16, "10th": 16, "chakri": 16, "dynasti": 16, "reign_year": 16, "\u0e0a\u0e01\u0e32\u0e25\u0e1b": 16, "\u0e0a\u0e01\u0e32\u0e23\u0e1b": 16, "num_to_thaiword": 16, "integ": 16, "rank": 16, "exclude_stopword": 16, "frequeci": 16, "reign_year_to_ad": 16, "reigh": 16, "7th": 16, "4th": 16, "2019": 16, "rama": 16, "ix": 16, "1946": 16, "typo": 16, "especi": 16, "visual": [16, 23], "who": 16, "accident": 16, "abov": 16, "AND": 16, "repeat": 16, "sure": 16, "doubl": 16, "ae": 16, "remove_tone_ipa": 16, "delet": 16, "la\u02d0": 16, "maj": 16, "remove_tonemark": 16, "four": 16, "down": [16, 22], "\u0e40\u0e2d\u0e01": 16, "fall": 16, "\u0e42\u0e17": 16, "rise": 16, "\u0e15\u0e27\u0e32": 16, "wrong": 16, "mistak": 16, "\u0e2a\u0e2d\u0e07\u0e1e": 16, "\u0e19\u0e2b\u0e19": 16, "\u0e07\u0e23": 16, "\u0e2d\u0e22\u0e2a": 16, "\u0e1a\u0e40\u0e08": 16, "\u0e32\u0e19\u0e2a": 16, "\u0e41\u0e2a\u0e19\u0e41\u0e1b\u0e14\u0e2b\u0e21": 16, "\u0e19\u0e2a\u0e32\u0e21\u0e1e": 16, "\u0e19\u0e2b\u0e01\u0e23": 16, "\u0e07\u0e23\u0e2d\u0e22\u0e2a": 16, "\u0e14\u0e25\u0e32\u0e19\u0e2a": 16, "\u0e19\u0e2b\u0e01\u0e23\u0e2d\u0e22\u0e2a": 16, "visibl": 16, "caus": 16, "unexpect": 16, "view": 16, "robust": 16, "zwsp": 16, "zwjp": 16, "logic": 16, "nikhahit": 16, "aa": 16, "am": 16, "sound_syl": 16, "live": 16, "\u0e40\u0e25\u0e02": 16, "syllable_length": 16, "short": 16, "\u0e04\u0e30": 16, "syllable_open_close_detector": 16, "close": 16, "detector": 16, "text_to_arabic_digit": 16, "\u0e41\u0e1b\u0e14": 16, "text_to_num": 16, "\u0e2d\u0e22\u0e41\u0e1b\u0e14\u0e2a": 16, "\u0e1a\u0e08": 16, "\u0e14\u0e40\u0e01": 16, "\u0e32\u0e2b": 16, "\u0e32\u0e1a\u0e32\u0e17\u0e19": 16, "\u0e2d\u0e08\u0e33\u0e19\u0e27\u0e19\u0e17": 16, "980": 16, "\u0e1a\u0e25": 16, "\u0e32\u0e19\u0e2a\u0e2d\u0e07\u0e2b\u0e21": 16, "\u0e07\u0e1e": 16, "\u0e19\u0e41\u0e1b\u0e14\u0e23": 16, "\u0e1a\u0e40\u0e01": 16, "\u0e32\u0e1a\u0e32\u0e17": 16, "10021889": 16, "text_to_thai_digit": 16, "\u0e50": 16, "\u0e58": 16, "\u0e59": 16, "thai_digit_to_arabic_digit": 16, "thai_strftim": 16, "dt_obj": 16, "datetim": 16, "fmt": 16, "y": 16, "thaidigit": 16, "direct": 16, "datatim": 16, "strrftime": 16, "weekdai": 16, "\u0e1e\u0e24": 16, "\u0e19\u0e08": 16, "\u0e07\u0e04\u0e32\u0e23": 16, "\u0e19\u0e40\u0e2a\u0e32\u0e23": 16, "\u0e19\u0e2d\u0e32\u0e17": 16, "month": 16, "\u0e21\u0e01\u0e23\u0e32\u0e04\u0e21": 16, "\u0e21\u0e20\u0e32\u0e1e": 16, "\u0e1e\u0e24\u0e28\u0e08": 16, "\u0e01\u0e32\u0e22\u0e19": 16, "\u0e19\u0e27\u0e32\u0e04\u0e21": 16, "centuri": 16, "2556": 16, "2410": 16, "represent": [16, 18], "2519": 16, "2562": 16, "27": [16, 17, 19], "2555": 16, "pass": 16, "strftime": 16, "BE": 16, "543": 16, "certainli": 16, "dai": 16, "meant": 16, "interrim": 16, "solut": 16, "sinc": 16, "th_th": 16, "setlocal": 16, "lc_time": 16, "try": [16, 23], "platform": 16, "independ": 16, "extent": 16, "extens": 16, "posix": 16, "bsd": 16, "gnu": 16, "libc": 16, "strptime": 16, "behavior": 16, "cplusplu": 16, "ctime": 16, "metacpan": 16, "pod": 16, "linux": 16, "die": 16, "net": 16, "man": 16, "openbsd": 16, "freebsd": 16, "unix": 16, "page": [16, 19], "maco": 16, "appl": 16, "archiv": 16, "conceptu": 16, "manpages_iphoneo": 16, "man3": 16, "php": 16, "secur": 16, "manual": 16, "javascript": 16, "samsonj": 16, "quick": [16, 22], "instantiatetd": 16, "datetime_obj": 16, "hour": 16, "minut": 16, "59": 16, "microsecond": 16, "09": 16, "\u0e19\u0e32\u0e22\u0e19": 16, "pad": 16, "62": [16, 23], "_d": 16, "0d": 16, "\u0e19\u0e32\u0e2c": 16, "\u0e19\u0e32\u0e17": 16, "\u0e55\u0e59": 16, "thai_strptim": 16, "add_year": 16, "tzinfo": 16, "backport": 16, "zoneinfo": 16, "asia": 16, "bangkok": 16, "isanno": 16, "31": 16, "2566": 16, "2023": [16, 24], "23": [16, 17], "2565": 16, "thai_to_eng": 16, "bank": 16, "\u0e1f": [16, 21], "\u0e1f\u0e23\u0e2a\u0e1f": 16, "thai_word_tone_detector": 16, "thaiword_to_d": 16, "\u0e1e\u0e23": [16, 18], "tomorrow": 16, "thaiword_to_num": 16, "actual": 16, "correspond": 16, "\u0e2a\u0e2d\u0e07\u0e25": 16, "\u0e32\u0e19\u0e2a\u0e32\u0e21\u0e41\u0e2a\u0e19\u0e2b\u0e01\u0e23": 16, "\u0e1a\u0e2a\u0e2d\u0e07": 16, "2300612": 16, "thaiword_to_tim": 16, "\u0e32\u0e22\u0e42\u0e21\u0e07\u0e04\u0e23": 16, "13": [16, 23], "time_to_thaiword": 16, "time_data": 16, "24h": 16, "24": 16, "clock": 16, "6h": 16, "m6h": 16, "alwai": 16, "\u0e41\u0e1b\u0e14\u0e19\u0e32\u0e2c": 16, "\u0e01\u0e32\u0e2a": 16, "\u0e14\u0e19\u0e32\u0e17": 16, "\u0e2a\u0e2d\u0e07\u0e42\u0e21\u0e07\u0e40\u0e0a": 16, "\u0e41\u0e1b\u0e14\u0e42\u0e21\u0e07\u0e2a": 16, "\u0e2b\u0e01\u0e42\u0e21\u0e07\u0e04\u0e23": 16, "\u0e1a\u0e2a\u0e2d\u0e07\u0e19\u0e32\u0e2c": 16, "\u0e01\u0e32\u0e2a\u0e32\u0e21\u0e19\u0e32\u0e17": 16, "tis620_to_utf8": 16, "ti": 16, "620": 16, "\u00e3\u00f0": 16, "\u00e3\u00e7": 16, "\u00ed\u00f8\u00b5\u00ea\u00f2\u00eb": 16, "\u00e3\u00e3\u00e1": 16, "\u0e01\u0e23\u0e30\u0e17\u0e23\u0e27\u0e07\u0e2d": 16, "\u0e15\u0e2a\u0e32\u0e2b\u0e01\u0e23\u0e23\u0e21": 16, "tone_detector": 16, "words_to_num": 16, "spell_word": 16, "spell_syl": 16, "\u0e21\u0e2d": 16, "\u0e27\u0e2d": 16, "\u0e41\u0e2d": 16, "\u0e04\u0e2d": 16, "\u0e14\u0e2d": 16, "children": 16, "noth": 16, "finetun": 17, "thai2transform": 17, "speed": 17, "benchmark": [17, 19, 21, 23], "89": 17, "312": 17, "64": [17, 23], "65": 17, "namedentityrecognit": 17, "power": 17, "dataset_nam": 17, "grouped_ent": 17, "lowphansirikul": [17, 19], "polpanuma": [17, 19], "jantrakulchai": 17, "nutanong": 17, "210109635": 17, "internet": 17, "jan": 17, "feb": 17, "ab": 17, "2101": 17, "09635": 17, "gensim": 18, "wordvector": 18, "thai2fit_wv": [18, 21], "v0": 18, "ltw2v_v1": 18, "0_15_window": 18, "0_5_window": 18, "load_wordvector": 18, "get_model": 18, "keyedvector": 18, "word2veckeyedvector": 18, "doesnt_match": 18, "mostli": 18, "unrel": 18, "rais": 18, "keyerror": 18, "vocabulari": 18, "strt": 18, "\u0e01\u0e44\u0e17\u0e22": 18, "food": 18, "meal": 18, "\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e40\u0e0a": 18, "\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e40\u0e17": 18, "\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e40\u0e22": 18, "wv": 18, "vehicl": 18, "occup": 18, "\u0e44\u0e0b\u0e19": 18, "\u0e40\u0e19\u0e2d\u0e23": 18, "\u0e1e\u0e19": 18, "\u0e01\u0e07\u0e32\u0e19\u0e40\u0e07": 18, "\u0e19\u0e40\u0e14": 18, "\u0e2b\u0e21\u0e2d": 18, "most_similar_cosmul": 18, "top": 18, "omer": 18, "levi": 18, "yoav": 18, "goldberg": 18, "omerlevy_yoavgoldberg_2014": 18, "directli": [18, 21, 23], "substract": 18, "most_similar": 18, "list_posit": 18, "list_neg": 18, "\u0e25\u0e33\u0e19": 18, "8206598162651062": 18, "\u0e17\u0e30\u0e40\u0e25\u0e2a\u0e32\u0e1a": 18, "775945782661438": 18, "\u0e21\u0e19": 18, "7490593194961548": 18, "\u0e04\u0e25\u0e2d\u0e07": 18, "7471904754638672": 18, "\u0e1b\u0e32\u0e01\u0e41\u0e21": 18, "7354257106781006": 18, "\u0e07\u0e41\u0e21": 18, "7120099067687988": 18, "\u0e17\u0e30\u0e40\u0e25": 18, "7030453681945801": 18, "\u0e21\u0e41\u0e21": 18, "7015200257301331": 18, "\u0e41\u0e2b\u0e25": 18, "6997432112693787": 18, "6960948705673218": 18, "\u0e10\u0e21\u0e19\u0e15\u0e23": 18, "\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28": 18, "\u0e23\u0e2d\u0e07\u0e19\u0e32\u0e22\u0e01\u0e23": 18, "2730445861816406": 18, "\u0e40\u0e2d\u0e01\u0e2d": 18, "\u0e04\u0e23\u0e23\u0e32\u0e0a\u0e17": 18, "26500266790390015": 18, "\u0e19\u0e32\u0e22\u0e01\u0e23": 18, "2649088203907013": 18, "\u0e32\u0e23\u0e32\u0e0a\u0e01\u0e32\u0e23\u0e08": 18, "\u0e07\u0e2b\u0e27": 18, "25119125843048096": 18, "\u0e32\u0e01\u0e32\u0e23": 18, "2510434687137604": 18, "\u0e40\u0e25\u0e02\u0e32\u0e18": 18, "24824175238609314": 18, "2453523576259613": 18, "\u0e1b\u0e23\u0e30\u0e18\u0e32\u0e19\u0e01\u0e23\u0e23\u0e21\u0e01\u0e32\u0e23": 18, "24147476255893707": 18, "\u0e23\u0e2d\u0e07\u0e1b\u0e23\u0e30\u0e18\u0e32\u0e19": 18, "24123257398605347": 18, "\u0e2a\u0e21\u0e32\u0e0a": 18, "\u0e2a\u0e20\u0e32": 18, "2405330240726471": 18, "\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e08": 18, "22022421658039093": 18, "\u0e40\u0e01\u0e32\u0e2b\u0e25": 18, "2196873426437378": 18, "\u0e2a\u0e2b\u0e23": 18, "\u0e10\u0e2d\u0e40\u0e21\u0e23": 18, "21660110354423523": 18, "\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e0d": 18, "21205860376358032": 18, "\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e44\u0e17\u0e22": 18, "21159221231937408": 18, "20321202278137207": 18, "\u0e07\u0e01\u0e24\u0e29": 18, "19610872864723206": 18, "\u0e2e": 18, "\u0e2d\u0e07\u0e01\u0e07": 18, "1928885132074356": 18, "\u0e1d\u0e23": 18, "\u0e07\u0e40\u0e28\u0e2a": 18, "18383873999118805": 18, "\u0e1e\u0e21": 18, "18369348347187042": 18, "3278159201145172": 18, "3201899230480194": 18, "31755179166793823": 18, "30845439434051514": 18, "306713730096817": 18, "3003999888896942": 18, "2995176911354065": 18, "\u0e04\u0e19\u0e44\u0e17\u0e22": 18, "2885020673274994": 18, "\u0e40\u0e27": 18, "\u0e22\u0e14\u0e19\u0e32\u0e21": 18, "2878379821777344": 18, "\u0e0a\u0e32\u0e27\u0e44\u0e17\u0e22": 18, "28480708599090576": 18, "\u0e40\u0e21\u0e19": 18, "\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e44\u0e17\u0e22": 18, "computa": 18, "cosin": 18, "consin": 18, "\u0e23\u0e16\u0e44\u0e1f": 18, "\u0e23\u0e16\u0e44\u0e1f\u0e1f": 18, "electr": 18, "43387136": 18, "\u0e2d\u0e14\u0e32\u0e27": 18, "leopard": 18, "04300258": 18, "sentence_vector": 18, "use_mean": 18, "aggregatesd": 18, "calul": 18, "summat": 18, "\u0e27\u0e19\u0e40\u0e2a": 18, "\u0e22\u0e27\u0e40\u0e02": 18, "\u0e14\u0e41\u0e04\u0e27": 18, "\u0e43\u0e19\u0e1b": 18, "735": 18, "meanthod": 18, "00421414": 18, "08881307": 18, "05081136": 18, "05632929": 18, "06607185": 18, "03059357": 18, "113882": 18, "00074836": 18, "05035743": 18, "02914307": 18, "02893357": 18, "11327957": 18, "04562086": 18, "05015393": 18, "11641257": 18, "32304936": 18, "05054322": 18, "03639471": 18, "06531371": 18, "05048079": 18, "05899798": 18, "24338295": 18, "711359": 18, "78861002": 18, "92500597": 18, "42831": 18, "59434797": 18, "01047703": 18, "705004": 18, "40800299": 18, "40506999": 18, "58591403": 18, "63869202": 18, "702155": 18, "62977601": 18, "52269109": 18, "70760502": 18, "50952601": 18, "914392": 18, "70673105": 18, "2014": 18, "regular": 18, "explicit": 18, "faq": 19, "command": [19, 23], "tutori": 19, "augment": [19, 23], "coref": 19, "khave": 19, "soundex": [19, 21], "tool": [19, 23], "translat": [19, 22, 23], "ulmfit": [19, 23], "word_vector": 19, "index": 19, "modul": 19, "your": [19, 23], "project": [19, 24], "charin": 19, "arthit": 19, "suriyawongkul": 19, "pattarawat": 19, "chormai": 19, "jun": 19, "zenodo": 19, "doi": 19, "5281": 19, "3519354": 19, "maintain": 19, "team": 19, "frequent": 20, "ask": 20, "pythainlp": [20, 21, 22, 23, 24], "thainlp": [21, 23], "nw": 21, "attacut": [21, 23], "\u0e2a\u0e20\u0e32\u0e1e\u0e01\u0e32\u0e23\u0e08": 21, "\u0e32\u0e07\u0e41\u0e25\u0e30\u0e2a\u0e20\u0e32\u0e1e\u0e01\u0e32\u0e23\u0e17\u0e33\u0e07\u0e32\u0e19": 21, "\u0e2a\u0e20\u0e32\u0e1e": 21, "\u0e01\u0e32\u0e23\u0e17\u0e33\u0e07\u0e32\u0e19": 21, "\u0e20\u0e32": 21, "\u0e07\u0e32": 21, "\u0e41\u0e23\u0e07\u0e07\u0e32\u0e19\u0e01\u0e30\u0e14": 21, "\u0e19\u0e40\u0e1f": 21, "\u0e07\u0e2b\u0e21": 21, "\u0e19\u0e43\u0e19\u0e04\u0e33": 21, "\u0e19\u0e21": 21, "\u0e40\u0e04\u0e2d\u0e23": 21, "\u0e41\u0e23\u0e07\u0e07\u0e32\u0e19": 21, "\u0e01\u0e30": 21, "\u0e04\u0e33": 21, "\u0e1c\u0e25": 21, "\u0e2d\u0e1e": 21, "\u0e01\u0e40\u0e09": 21, "\u0e2b\u0e25\u0e32\u0e22\u0e1b": 21, "\u0e32\u0e19\u0e21\u0e32": 21, "\u0e0a\u0e32\u0e27\u0e0a": 21, "\u0e21\u0e0a\u0e19\u0e42\u0e04\u0e01\u0e22\u0e32\u0e27\u0e2b\u0e25\u0e32\u0e22\u0e04\u0e19\u0e44\u0e14": 21, "\u0e1e\u0e32\u0e01": 21, "\u0e32\u0e22\u0e2d\u0e2d\u0e01": 21, "\u0e32\u0e07\u0e01": 21, "\u0e22\u0e0a": 21, "\u0e1a\u0e32\u0e07\u0e04\u0e19\u0e16": 21, "\u0e01\u0e08\u0e33\u0e04": 21, "\u0e01\u0e43\u0e19\u0e02": 21, "\u0e01\u0e1b": 21, "\u0e32\u0e2b\u0e23": 21, "\u0e2d\u0e41\u0e21": 21, "\u0e01\u0e23\u0e30\u0e17": 21, "\u0e0d\u0e2b\u0e32\u0e22": 21, "tagg": 21, "\u0e40\u0e1c": 21, "\u0e27330000": 21, "\u0e274000": 21, "manag": 21, "rm": 21, "user1": 21, "crfcut": 21, "g2p": 21, "36": 21, "wisesight": 21, "1000": 21, "deepcut": 21, "against": 21, "993": 21, "total": 21, "char_level": 21, "tp": 21, "17654": 21, "0000": 21, "fn": 21, "1153": 21, "tn": 21, "50755": 21, "fp": 21, "1478": 21, "9227": 21, "9387": 21, "word_level": 21, "total_words_in_sampl": 21, "19132": 21, "total_words_in_ref_sampl": 21, "18807": 21, "correctly_tokenised_word": 21, "15637": 21, "8173": 21, "8314": 21, "\u0e40\u0e23\u0e32\u0e23": 22, "\u0e01\u0e20\u0e32\u0e29\u0e32\u0e16": 22, "\u0e20\u0e32\u0e29\u0e32\u0e16": 22, "\u0e40\u0e04": 22, "histor": 22, "face": 22, "lot": 22, "challeng": 22, "arguabl": 22, "biggest": 22, "problem": [22, 23], "lack": 22, "eo": 22, "prong": 22, "comma": 22, "period": 22, "habit": 22, "connector": 22, "etc": [22, 23], "often": 22, "even": 22, "decid": 22, "boil": 22, "asian": 22, "degre": 22, "extrem": 22, "potato": 22, "pomm": 22, "de": 22, "terr": 22, "best": 22, "\u0e15\u0e32": 22, "\u0e01\u0e25\u0e21": 22, "\u0e15\u0e32\u0e01": 22, "\u0e25\u0e21": 22, "As": 22, "recent": 22, "captur": 22, "seem": 22, "pois": 22, "overcom": 22, "stabl": 23, "pip": 23, "upgrad": 23, "extra": 23, "extra1": 23, "extra2": 23, "ml": 23, "thai2rom": 23, "learnt": 23, "roman": 23, "umlfit": 23, "oskut": 23, "nlpo3": 23, "esolut": 23, "everyth": 23, "setup": 23, "py": 23, "built": 23, "wheel": 23, "lfd": 23, "uci": 23, "gohlk": 23, "pythonlib": 23, "architectur": 23, "win32": 23, "amd64": 23, "xxx": 23, "cp36": 23, "cp36m": 23, "whl": 23, "technic": 23, "skill": 23, "thing": 23, "accommod": 23, "icu_vers": 23, "obvious": 23, "good": 23, "side": 23, "optim": 23, "better": 23, "databas": 23, "store": 23, "automat": 23, "pythainlp_read_mod": 23, "q": 23, "crfsuit": 23, "executor": 23, "permissionerror": 23, "deni": 23, "corpora": 24, "creativ": 24, "dedic": 24, "cc0": 24, "advis": 24}, "objects": {"pythainlp.augment": [[0, 0, 1, "", "WordNetAug"]], "pythainlp.augment.WordNetAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "find_synonyms"]], "pythainlp.augment.lm": [[0, 0, 1, "", "FastTextAug"], [0, 0, 1, "", "Thai2transformersAug"]], "pythainlp.augment.lm.FastTextAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "modify_sent"], [0, 1, 1, "", "tokenize"]], "pythainlp.augment.lm.Thai2transformersAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "generate"]], "pythainlp.augment.word2vec": [[0, 0, 1, "", "LTW2VAug"], [0, 0, 1, "", "Thai2fitAug"], [0, 0, 1, "", "Word2VecAug"]], "pythainlp.augment.word2vec.LTW2VAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "load_w2v"], [0, 1, 1, "", "tokenizer"]], "pythainlp.augment.word2vec.Thai2fitAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "load_w2v"], [0, 1, 1, "", "tokenizer"]], "pythainlp.augment.word2vec.Word2VecAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "modify_sent"]], "pythainlp.augment.word2vec.bpemb_wv": [[0, 0, 1, "", "BPEmbAug"]], "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "load_w2v"], [0, 1, 1, "", "tokenizer"]], "pythainlp.benchmarks.word_tokenization": [[1, 2, 1, "", "benchmark"], [1, 2, 1, "", "compute_stats"], [1, 2, 1, "", "preprocessing"]], "pythainlp.coref": [[2, 2, 1, "", "coreference_resolution"]], "pythainlp.corpus.conceptnet": [[3, 2, 1, "", "edges"]], "pythainlp.corpus": [[3, 2, 1, "", "countries"], [3, 2, 1, "", "download"], [3, 2, 1, "", "get_corpus"], [3, 2, 1, "", "get_corpus_db"], [3, 2, 1, "", "get_corpus_db_detail"], [3, 2, 1, "", "get_corpus_default_db"], [3, 2, 1, "", "get_corpus_path"], [3, 2, 1, "", "provinces"], [3, 2, 1, "", "remove"], [3, 2, 1, "", "thai_family_names"], [3, 2, 1, "", "thai_female_names"], [3, 2, 1, "", "thai_male_names"], [3, 2, 1, "", "thai_negations"], [3, 2, 1, "", "thai_orst_words"], [3, 2, 1, "", "thai_stopwords"], [3, 2, 1, "", "thai_syllables"], [3, 2, 1, "", "thai_words"]], "pythainlp.corpus.oscar": [[3, 2, 1, "", "unigram_word_freqs"], [3, 2, 1, "", "word_freqs"]], "pythainlp.corpus.th_en_translit": [[3, 2, 1, "", "get_transliteration_dict"]], "pythainlp.corpus.tnc": [[3, 2, 1, "", "bigram_word_freqs"], [3, 2, 1, "", "trigram_word_freqs"], [3, 2, 1, "", "unigram_word_freqs"], [3, 2, 1, "", "word_freqs"]], "pythainlp.corpus.ttc": [[3, 2, 1, "", "unigram_word_freqs"], [3, 2, 1, "", "word_freqs"]], "pythainlp.corpus.util": [[3, 2, 1, "", "find_badwords"], [3, 2, 1, "", "revise_newmm_default_wordset"], [3, 2, 1, "", "revise_wordset"]], "pythainlp.corpus.wordnet": [[3, 2, 1, "", "all_lemma_names"], [3, 2, 1, "", "all_synsets"], [3, 2, 1, "", "custom_lemmas"], [3, 2, 1, "", "langs"], [3, 2, 1, "", "lch_similarity"], [3, 2, 1, "", "lemma"], [3, 2, 1, "", "lemma_from_key"], [3, 2, 1, "", "lemmas"], [3, 2, 1, "", "morphy"], [3, 2, 1, "", "path_similarity"], [3, 2, 1, "", "synset"], [3, 2, 1, "", "synsets"], [3, 2, 1, "", "wup_similarity"]], "pythainlp.generate": [[4, 0, 1, "", "Bigram"], [4, 0, 1, "", "Trigram"], [4, 0, 1, "", "Unigram"]], "pythainlp.generate.Bigram": [[4, 1, 1, "", "__init__"], [4, 1, 1, "", "gen_sentence"], [4, 1, 1, "", "prob"]], "pythainlp.generate.Trigram": [[4, 1, 1, "", "__init__"], [4, 1, 1, "", "gen_sentence"], [4, 1, 1, "", "prob"]], "pythainlp.generate.Unigram": [[4, 1, 1, "", "__init__"], [4, 1, 1, "", "gen_sentence"]], "pythainlp.generate.thai2fit": [[4, 2, 1, "", "gen_sentence"]], "pythainlp.khavee": [[5, 0, 1, "", "KhaveeVerifier"]], "pythainlp.khavee.KhaveeVerifier": [[5, 3, 1, "", "__dict__"], [5, 1, 1, "", "__init__"], [5, 3, 1, "", "__module__"], [5, 1, 1, "", "check_aek_too"], [5, 1, 1, "", "check_karu_lahu"], [5, 1, 1, "", "check_klon"], [5, 1, 1, "", "check_marttra"], [5, 1, 1, "", "check_sara"], [5, 1, 1, "", "handle_karun_sound_silence"], [5, 1, 1, "", "is_sumpus"]], "pythainlp.parse": [[6, 2, 1, "", "dependency_parsing"]], "pythainlp.soundex": [[7, 2, 1, "", "lk82"], [7, 2, 1, "", "metasound"], [7, 2, 1, "", "prayut_and_somchaip"], [7, 2, 1, "", "soundex"], [7, 2, 1, "", "udom83"]], "pythainlp.soundex.sound": [[7, 2, 1, "", "audio_vector"], [7, 2, 1, "", "word2audio"], [7, 2, 1, "", "word_approximation"]], "pythainlp.spell": [[8, 4, 1, "", "DEFAULT_SPELL_CHECKER"], [8, 0, 1, "", "NorvigSpellChecker"], [8, 2, 1, "", "correct"], [8, 2, 1, "", "correct_sent"], [8, 2, 1, "", "spell"], [8, 2, 1, "", "spell_sent"]], "pythainlp.spell.NorvigSpellChecker": [[8, 3, 1, "", "__dict__"], [8, 1, 1, "", "__init__"], [8, 3, 1, "", "__module__"], [8, 1, 1, "", "correct"], [8, 1, 1, "", "dictionary"], [8, 1, 1, "", "freq"], [8, 1, 1, "", "known"], [8, 1, 1, "", "prob"], [8, 1, 1, "", "spell"]], "pythainlp.summarize": [[9, 2, 1, "", "extract_keywords"], [9, 5, 0, "-", "keybert"], [9, 2, 1, "", "summarize"]], "pythainlp.summarize.keybert": [[9, 0, 1, "id0", "KeyBERT"]], "pythainlp.summarize.keybert.KeyBERT": [[9, 1, 1, "id5", "__init__"], [9, 1, 1, "id9", "embed"], [9, 1, 1, "id6", "extract_keywords"]], "pythainlp.tag": [[10, 0, 1, "", "NER"], [10, 0, 1, "", "NNER"], [10, 2, 1, "", "chunk_parse"], [10, 2, 1, "", "pos_tag"], [10, 2, 1, "", "pos_tag_sents"], [10, 2, 1, "", "tag_provinces"]], "pythainlp.tag.NER": [[10, 1, 1, "", "__init__"], [10, 1, 1, "", "load_engine"], [10, 1, 1, "", "tag"]], "pythainlp.tag.NNER": [[10, 1, 1, "", "__init__"], [10, 1, 1, "", "load_engine"], [10, 1, 1, "", "tag"]], "pythainlp.tag.thainer": [[10, 0, 1, "", "ThaiNameTagger"]], "pythainlp.tag.thainer.ThaiNameTagger": [[10, 1, 1, "", "__init__"], [10, 1, 1, "", "get_ner"]], "pythainlp.tag.tltk": [[10, 2, 1, "", "get_ner"]], "pythainlp.tokenize": [[11, 0, 1, "", "Tokenizer"], [11, 5, 0, "-", "attacut"], [11, 2, 1, "", "clause_tokenize"], [11, 5, 0, "-", "crfcut"], [11, 5, 0, "-", "deepcut"], [11, 5, 0, "-", "etcc"], [11, 5, 0, "-", "longest"], [11, 5, 0, "-", "multi_cut"], [11, 5, 0, "-", "nercut"], [11, 5, 0, "-", "newmm"], [11, 5, 0, "-", "nlpo3"], [11, 5, 0, "-", "oskut"], [11, 2, 1, "", "paragraph_tokenize"], [11, 5, 0, "-", "pyicu"], [11, 5, 0, "-", "sefr_cut"], [11, 2, 1, "", "sent_tokenize"], [11, 2, 1, "", "subword_tokenize"], [11, 5, 0, "-", "tcc"], [11, 5, 0, "-", "thaisumcut"], [11, 2, 1, "", "word_detokenize"], [11, 2, 1, "", "word_tokenize"]], "pythainlp.tokenize.Tokenizer": [[11, 1, 1, "", "__init__"], [11, 1, 1, "", "set_tokenize_engine"], [11, 1, 1, "", "word_tokenize"]], "pythainlp.tokenize.attacut": [[11, 0, 1, "id9", "AttacutTokenizer"], [11, 2, 1, "", "segment"]], "pythainlp.tokenize.attacut.AttacutTokenizer": [[11, 1, 1, "id10", "__init__"], [11, 1, 1, "id11", "tokenize"]], "pythainlp.tokenize.crfcut": [[11, 2, 1, "id0", "extract_features"], [11, 2, 1, "id3", "segment"]], "pythainlp.tokenize.deepcut": [[11, 2, 1, "", "segment"]], "pythainlp.tokenize.etcc": [[11, 2, 1, "id32", "segment"]], "pythainlp.tokenize.longest": [[11, 0, 1, "", "LongestMatchTokenizer"], [11, 2, 1, "id20", "segment"]], "pythainlp.tokenize.longest.LongestMatchTokenizer": [[11, 1, 1, "", "__init__"], [11, 1, 1, "", "tokenize"]], "pythainlp.tokenize.multi_cut": [[11, 0, 1, "", "LatticeString"], [11, 2, 1, "id15", "find_all_segment"], [11, 2, 1, "", "mmcut"], [11, 2, 1, "id14", "segment"]], "pythainlp.tokenize.multi_cut.LatticeString": [[11, 1, 1, "", "__init__"]], "pythainlp.tokenize.nercut": [[11, 2, 1, "id23", "segment"]], "pythainlp.tokenize.newmm": [[11, 2, 1, "id28", "segment"]], "pythainlp.tokenize.nlpo3": [[11, 2, 1, "id17", "load_dict"], [11, 2, 1, "id18", "segment"]], "pythainlp.tokenize.oskut": [[11, 2, 1, "", "segment"]], "pythainlp.tokenize.pyicu": [[11, 2, 1, "", "segment"]], "pythainlp.tokenize.sefr_cut": [[11, 2, 1, "", "segment"]], "pythainlp.tokenize.tcc": [[11, 2, 1, "id29", "segment"], [11, 2, 1, "id30", "tcc"], [11, 2, 1, "id31", "tcc_pos"]], "pythainlp.tokenize.tcc_p": [[11, 2, 1, "", "segment"], [11, 2, 1, "", "tcc"], [11, 2, 1, "", "tcc_pos"]], "pythainlp.tokenize.thaisumcut": [[11, 0, 1, "id6", "ThaiSentenceSegmentor"], [11, 2, 1, "id4", "list_to_string"], [11, 2, 1, "id5", "middle_cut"]], "pythainlp.tokenize.thaisumcut.ThaiSentenceSegmentor": [[11, 1, 1, "id7", "split_into_sentences"]], "pythainlp.tools": [[12, 2, 1, "", "get_full_data_path"], [12, 2, 1, "", "get_pythainlp_data_path"], [12, 2, 1, "", "get_pythainlp_path"]], "pythainlp.tools.misspell": [[12, 2, 1, "", "misspell"]], "pythainlp.translate": [[13, 0, 1, "", "Translate"]], "pythainlp.translate.Translate": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "load_model"], [13, 1, 1, "", "translate"]], "pythainlp.translate.en_th": [[13, 0, 1, "", "EnThTranslator"], [13, 0, 1, "", "ThEnTranslator"], [13, 2, 1, "", "download_model_all"]], "pythainlp.translate.en_th.EnThTranslator": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "translate"]], "pythainlp.translate.en_th.ThEnTranslator": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "translate"]], "pythainlp.translate.th_fr": [[13, 0, 1, "", "ThFrTranslator"]], "pythainlp.translate.th_fr.ThFrTranslator": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "translate"]], "pythainlp.translate.zh_th": [[13, 0, 1, "", "ThZhTranslator"], [13, 0, 1, "", "ZhThTranslator"]], "pythainlp.translate.zh_th.ThZhTranslator": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "translate"]], "pythainlp.translate.zh_th.ZhThTranslator": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "translate"]], "pythainlp.transliterate": [[14, 5, 0, "-", "ipa"], [14, 5, 0, "-", "iso_11940"], [14, 2, 1, "", "pronunciate"], [14, 2, 1, "", "puan"], [14, 5, 0, "-", "pyicu"], [14, 2, 1, "", "romanize"], [14, 2, 1, "", "transliterate"]], "pythainlp.transliterate.ipa": [[14, 2, 1, "id5", "trans_list"], [14, 2, 1, "id4", "transliterate"], [14, 2, 1, "id6", "xsampa_list"]], "pythainlp.transliterate.iso_11940": [[14, 2, 1, "", "transliterate"]], "pythainlp.transliterate.pyicu": [[14, 2, 1, "id0", "transliterate"]], "pythainlp.transliterate.royin": [[14, 5, 0, "-", "romanize"]], "pythainlp.transliterate.thai2rom": [[14, 5, 0, "-", "romanize"]], "pythainlp.transliterate.thaig2p": [[14, 2, 1, "", "transliterate"], [14, 5, 0, "-", "transliterate"]], "pythainlp.transliterate.tltk": [[14, 2, 1, "", "romanize"], [14, 2, 1, "", "tltk_g2p"], [14, 2, 1, "", "tltk_ipa"]], "pythainlp.transliterate.wunsen": [[14, 0, 1, "", "WunsenTransliterate"]], "pythainlp.transliterate.wunsen.WunsenTransliterate": [[14, 1, 1, "", "__init__"], [14, 1, 1, "", "transliterate"]], "pythainlp.ulmfit": [[15, 0, 1, "", "ThaiTokenizer"], [15, 2, 1, "", "document_vector"], [15, 2, 1, "", "fix_html"], [15, 2, 1, "", "lowercase_all"], [15, 2, 1, "", "merge_wgts"], [15, 2, 1, "", "process_thai"], [15, 2, 1, "", "remove_space"], [15, 2, 1, "", "replace_rep_after"], [15, 2, 1, "", "replace_rep_nonum"], [15, 2, 1, "", "replace_wrep_post"], [15, 2, 1, "", "replace_wrep_post_nonum"], [15, 2, 1, "", "rm_brackets"], [15, 2, 1, "", "rm_useless_newlines"], [15, 2, 1, "", "rm_useless_spaces"], [15, 2, 1, "", "spec_add_spaces"], [15, 2, 1, "", "ungroup_emoji"]], "pythainlp.ulmfit.ThaiTokenizer": [[15, 1, 1, "", "__init__"], [15, 1, 1, "", "add_special_cases"], [15, 1, 1, "", "tokenizer"]], "pythainlp.util": [[16, 0, 1, "", "Trie"], [16, 2, 1, "", "arabic_digit_to_thai_digit"], [16, 2, 1, "", "bahttext"], [16, 2, 1, "", "collate"], [16, 2, 1, "", "convert_years"], [16, 2, 1, "", "count_thai_chars"], [16, 2, 1, "", "countthai"], [16, 2, 1, "", "dict_trie"], [16, 2, 1, "", "digit_to_text"], [16, 2, 1, "", "display_thai_char"], [16, 2, 1, "", "emoji_to_thai"], [16, 2, 1, "", "eng_to_thai"], [16, 2, 1, "", "find_keyword"], [16, 2, 1, "", "ipa_to_rtgs"], [16, 2, 1, "", "is_native_thai"], [16, 2, 1, "", "isthai"], [16, 2, 1, "", "isthaichar"], [16, 2, 1, "", "maiyamok"], [16, 2, 1, "", "nectec_to_ipa"], [16, 2, 1, "", "normalize"], [16, 2, 1, "", "now_reign_year"], [16, 2, 1, "", "num_to_thaiword"], [16, 2, 1, "", "rank"], [16, 2, 1, "", "reign_year_to_ad"], [16, 2, 1, "", "remove_dangling"], [16, 2, 1, "", "remove_dup_spaces"], [16, 2, 1, "", "remove_repeat_vowels"], [16, 2, 1, "", "remove_tone_ipa"], [16, 2, 1, "", "remove_tonemark"], [16, 2, 1, "", "remove_zw"], [16, 2, 1, "", "reorder_vowels"], [16, 2, 1, "", "sound_syllable"], [16, 2, 1, "", "syllable_length"], [16, 2, 1, "", "syllable_open_close_detector"], [16, 2, 1, "", "text_to_arabic_digit"], [16, 2, 1, "", "text_to_num"], [16, 2, 1, "", "text_to_thai_digit"], [16, 2, 1, "", "thai_digit_to_arabic_digit"], [16, 2, 1, "", "thai_strftime"], [16, 2, 1, "", "thai_strptime"], [16, 2, 1, "", "thai_to_eng"], [16, 2, 1, "", "thai_word_tone_detector"], [16, 2, 1, "", "thaiword_to_date"], [16, 2, 1, "", "thaiword_to_num"], [16, 2, 1, "", "thaiword_to_time"], [16, 2, 1, "", "time_to_thaiword"], [16, 2, 1, "", "tis620_to_utf8"], [16, 2, 1, "", "tone_detector"], [16, 2, 1, "", "words_to_num"]], "pythainlp.util.Trie": [[16, 0, 1, "", "Node"], [16, 1, 1, "", "__init__"], [16, 1, 1, "", "add"], [16, 1, 1, "", "prefixes"], [16, 1, 1, "", "remove"]], "pythainlp.util.Trie.Node": [[16, 1, 1, "", "__init__"], [16, 3, 1, "", "children"], [16, 3, 1, "", "end"]], "pythainlp.util.spell_words": [[16, 2, 1, "", "spell_syllable"], [16, 2, 1, "", "spell_word"]], "pythainlp.wangchanberta": [[17, 0, 1, "", "NamedEntityRecognition"], [17, 0, 1, "", "ThaiNameTagger"], [17, 2, 1, "", "segment"]], "pythainlp.wangchanberta.NamedEntityRecognition": [[17, 1, 1, "", "__init__"], [17, 1, 1, "", "get_ner"]], "pythainlp.wangchanberta.ThaiNameTagger": [[17, 1, 1, "", "__init__"], [17, 1, 1, "", "get_ner"]], "pythainlp.word_vector": [[18, 0, 1, "", "WordVector"]], "pythainlp.word_vector.WordVector": [[18, 1, 1, "", "__init__"], [18, 1, 1, "", "doesnt_match"], [18, 1, 1, "", "get_model"], [18, 1, 1, "", "load_wordvector"], [18, 1, 1, "", "most_similar_cosmul"], [18, 1, 1, "", "sentence_vectorizer"], [18, 1, 1, "", "similarity"]], "": [[23, 6, 1, "-", "PYTHAINLP_DATA_DIR"], [23, 6, 1, "-", "PYTHAINLP_READ_MODE"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:data", "5": "py:module", "6": "std:envvar"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "data", "Python data"], "5": ["py", "module", "Python module"], "6": ["std", "envvar", "environment variable"]}, "titleterms": {"pythainlp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "augment": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "benchmark": 1, "token": [1, 11], "qualiti": 1, "coref": 2, "corpu": 3, "conceptnet": 3, "tnc": 3, "ttc": 3, "oscar": 3, "util": [3, 16], "wordnet": 3, "definit": 3, "gener": 4, "khave": 5, "pars": 6, "soundex": 7, "refer": [7, 8, 10, 14, 16, 17, 18, 19], "spell": 8, "summar": 9, "keyword": 9, "extract": 9, "engin": [9, 10, 11, 14], "keybert": 9, "tag": 10, "tagger": 10, "perceptron": 10, "unigram": 10, "sentenc": 11, "level": 11, "crfcut": 11, "thaisumcut": 11, "word": 11, "attacut": 11, "deepcut": 11, "multi_cut": 11, "nlpo3": 11, "longest": 11, "pyicu": 11, "nercut": 11, "sefr_cut": 11, "oskut": 11, "newmm": 11, "subword": 11, "tcc": 11, "etcc": 11, "tool": 12, "translat": 13, "transliter": 14, "roman": 14, "thai2rom": 14, "royin": 14, "icu": 14, "ipa": 14, "thaig2p": 14, "tltk": 14, "iso_11940": 14, "ulmfit": 15, "wangchanberta": 17, "word_vector": 18, "depend": 18, "document": 19, "note": 19, "packag": 19, "indic": 19, "tabl": 19, "citat": 19, "faq": [20, 23], "command": 21, "line": 21, "get": 22, "start": 22, "tutori": 22, "notebook": 22, "instal": 23, "runtim": 23, "configur": 23, "licens": 24}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"pythainlp.augment": [[0, "pythainlp-augment"]], "Modules": [[0, "modules"], [1, "modules"], [2, "modules"], [3, "modules"], [4, "modules"], [5, "modules"], [6, "modules"], [7, "modules"], [8, "modules"], [9, "modules"], [10, "modules"], [11, "modules"], [12, "modules"], [13, "modules"], [14, "modules"], [15, "modules"], [16, "modules"], [17, "modules"], [18, "modules"]], "pythainlp.benchmarks": [[1, "pythainlp-benchmarks"]], "Tokenization": [[1, "tokenization"]], "Quality": [[1, "quality"]], "pythainlp.coref": [[2, "pythainlp-coref"]], "pythainlp.corpus": [[3, "pythainlp-corpus"]], "ConceptNet": [[3, "conceptnet"]], "TNC": [[3, "tnc"]], "TTC": [[3, "ttc"]], "OSCAR": [[3, "oscar"]], "Util": [[3, "util"]], "WordNet": [[3, "wordnet"]], "Definition": [[3, "definition"]], "pythainlp.generate": [[4, "pythainlp-generate"]], "pythainlp.khavee": [[5, "pythainlp-khavee"]], "pythainlp.parse": [[6, "pythainlp-parse"]], "pythainlp.soundex": [[7, "pythainlp-soundex"]], "References": [[7, "references"], [8, "references"], [10, "references"], [14, "references"], [16, "references"], [17, "references"], [18, "references"]], "pythainlp.spell": [[8, "pythainlp-spell"]], "pythainlp.summarize": [[9, "pythainlp-summarize"]], "Keyword Extraction Engines": [[9, "keyword-extraction-engines"]], "KeyBERT": [[9, "module-pythainlp.summarize.keybert"]], "pythainlp.tag": [[10, "pythainlp-tag"]], "Tagger Engines": [[10, "tagger-engines"]], "perceptron": [[10, "perceptron"]], "unigram": [[10, "unigram"]], "pythainlp.tokenize": [[11, "pythainlp-tokenize"]], "Tokenization Engines": [[11, "tokenization-engines"]], "Sentence level": [[11, "sentence-level"]], "crfcut": [[11, "module-pythainlp.tokenize.crfcut"]], "thaisumcut": [[11, "module-pythainlp.tokenize.thaisumcut"]], "Word level": [[11, "word-level"]], "attacut": [[11, "id8"]], "deepcut": [[11, "id12"]], "multi_cut": [[11, "module-pythainlp.tokenize.multi_cut"]], "nlpo3": [[11, "id16"]], "longest": [[11, "module-pythainlp.tokenize.longest"]], "pyicu": [[11, "id21"]], "nercut": [[11, "module-pythainlp.tokenize.nercut"]], "sefr_cut": [[11, "module-pythainlp.tokenize.sefr_cut"]], "oskut": [[11, "id26"]], "newmm": [[11, "newmm"]], "Subword level": [[11, "subword-level"]], "tcc": [[11, "module-pythainlp.tokenize.tcc"]], "etcc": [[11, "module-pythainlp.tokenize.etcc"]], "pythainlp.tools": [[12, "pythainlp-tools"]], "pythainlp.translate": [[13, "pythainlp-translate"]], "pythainlp.transliterate": [[14, "pythainlp-transliterate"]], "Romanize Engines": [[14, "romanize-engines"]], "thai2rom": [[14, "module-pythainlp.transliterate.thai2rom.romanize"]], "royin": [[14, "module-pythainlp.transliterate.royin.romanize"]], "Transliterate Engines": [[14, "transliterate-engines"]], "icu": [[14, "module-pythainlp.transliterate.pyicu"]], "ipa": [[14, "module-pythainlp.transliterate.ipa"]], "thaig2p": [[14, "module-pythainlp.transliterate.thaig2p.transliterate"]], "tltk": [[14, "id7"]], "iso_11940": [[14, "module-pythainlp.transliterate.iso_11940"]], "pythainlp.ulmfit": [[15, "pythainlp-ulmfit"]], "pythainlp.util": [[16, "pythainlp-util"]], "pythainlp.wangchanberta": [[17, "pythainlp-wangchanberta"]], "pythainlp.word_vector": [[18, "pythainlp-word-vector"]], "Dependencies": [[18, "dependencies"]], "PyThaiNLP documentation": [[19, "pythainlp-documentation"]], "Notes": [[19, null]], "Package reference:": [[19, null]], "Indices and tables": [[19, "indices-and-tables"]], "Citations": [[19, "citations"]], "FAQ": [[20, "faq"], [23, "faq"]], "Command Line": [[21, "command-line"]], "Getting Started": [[22, "getting-started"]], "Tutorial Notebooks": [[22, "tutorial-notebooks"]], "Installation": [[23, "installation"]], "Runtime Configurations": [[23, "runtime-configurations"]], "License": [[24, "license"]]}, "indexentries": {"bpembaug (class in pythainlp.augment.word2vec.bpemb_wv)": [[0, "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug"]], "fasttextaug (class in pythainlp.augment.lm)": [[0, "pythainlp.augment.lm.FastTextAug"]], "ltw2vaug (class in pythainlp.augment.word2vec)": [[0, "pythainlp.augment.word2vec.LTW2VAug"]], "thai2fitaug (class in pythainlp.augment.word2vec)": [[0, "pythainlp.augment.word2vec.Thai2fitAug"]], "thai2transformersaug (class in pythainlp.augment.lm)": [[0, "pythainlp.augment.lm.Thai2transformersAug"]], "word2vecaug (class in pythainlp.augment.word2vec)": [[0, "pythainlp.augment.word2vec.Word2VecAug"]], "wordnetaug (class in pythainlp.augment)": [[0, "pythainlp.augment.WordNetAug"]], "__init__() (pythainlp.augment.wordnetaug method)": [[0, "pythainlp.augment.WordNetAug.__init__"]], "__init__() (pythainlp.augment.lm.fasttextaug method)": [[0, "pythainlp.augment.lm.FastTextAug.__init__"]], "__init__() (pythainlp.augment.lm.thai2transformersaug method)": [[0, "pythainlp.augment.lm.Thai2transformersAug.__init__"]], "__init__() (pythainlp.augment.word2vec.ltw2vaug method)": [[0, "pythainlp.augment.word2vec.LTW2VAug.__init__"]], "__init__() (pythainlp.augment.word2vec.thai2fitaug method)": [[0, "pythainlp.augment.word2vec.Thai2fitAug.__init__"]], "__init__() (pythainlp.augment.word2vec.word2vecaug method)": [[0, "pythainlp.augment.word2vec.Word2VecAug.__init__"]], "__init__() (pythainlp.augment.word2vec.bpemb_wv.bpembaug method)": [[0, "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug.__init__"]], "augment() (pythainlp.augment.wordnetaug method)": [[0, "pythainlp.augment.WordNetAug.augment"]], "augment() (pythainlp.augment.lm.fasttextaug method)": [[0, "pythainlp.augment.lm.FastTextAug.augment"]], "augment() (pythainlp.augment.lm.thai2transformersaug method)": [[0, "pythainlp.augment.lm.Thai2transformersAug.augment"]], "augment() (pythainlp.augment.word2vec.ltw2vaug method)": [[0, "pythainlp.augment.word2vec.LTW2VAug.augment"]], "augment() (pythainlp.augment.word2vec.thai2fitaug method)": [[0, "pythainlp.augment.word2vec.Thai2fitAug.augment"]], "augment() (pythainlp.augment.word2vec.word2vecaug method)": [[0, "pythainlp.augment.word2vec.Word2VecAug.augment"]], "augment() (pythainlp.augment.word2vec.bpemb_wv.bpembaug method)": [[0, "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug.augment"]], "find_synonyms() (pythainlp.augment.wordnetaug method)": [[0, "pythainlp.augment.WordNetAug.find_synonyms"]], "generate() (pythainlp.augment.lm.thai2transformersaug method)": [[0, "pythainlp.augment.lm.Thai2transformersAug.generate"]], "load_w2v() (pythainlp.augment.word2vec.ltw2vaug method)": [[0, "pythainlp.augment.word2vec.LTW2VAug.load_w2v"]], "load_w2v() (pythainlp.augment.word2vec.thai2fitaug method)": [[0, "pythainlp.augment.word2vec.Thai2fitAug.load_w2v"]], "load_w2v() (pythainlp.augment.word2vec.bpemb_wv.bpembaug method)": [[0, "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug.load_w2v"]], "modify_sent() (pythainlp.augment.lm.fasttextaug method)": [[0, "pythainlp.augment.lm.FastTextAug.modify_sent"]], "modify_sent() (pythainlp.augment.word2vec.word2vecaug method)": [[0, "pythainlp.augment.word2vec.Word2VecAug.modify_sent"]], "tokenize() (pythainlp.augment.lm.fasttextaug method)": [[0, "pythainlp.augment.lm.FastTextAug.tokenize"]], "tokenizer() (pythainlp.augment.word2vec.ltw2vaug method)": [[0, "pythainlp.augment.word2vec.LTW2VAug.tokenizer"]], "tokenizer() (pythainlp.augment.word2vec.thai2fitaug method)": [[0, "pythainlp.augment.word2vec.Thai2fitAug.tokenizer"]], "tokenizer() (pythainlp.augment.word2vec.bpemb_wv.bpembaug method)": [[0, "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug.tokenizer"]], "benchmark() (in module pythainlp.benchmarks.word_tokenization)": [[1, "pythainlp.benchmarks.word_tokenization.benchmark"]], "compute_stats() (in module pythainlp.benchmarks.word_tokenization)": [[1, "pythainlp.benchmarks.word_tokenization.compute_stats"]], "preprocessing() (in module pythainlp.benchmarks.word_tokenization)": [[1, "pythainlp.benchmarks.word_tokenization.preprocessing"]], "coreference_resolution() (in module pythainlp.coref)": [[2, "pythainlp.coref.coreference_resolution"]], "all_lemma_names() (in module pythainlp.corpus.wordnet)": [[3, "pythainlp.corpus.wordnet.all_lemma_names"]], "all_synsets() (in module pythainlp.corpus.wordnet)": [[3, "pythainlp.corpus.wordnet.all_synsets"]], "bigram_word_freqs() (in module pythainlp.corpus.tnc)": [[3, "pythainlp.corpus.tnc.bigram_word_freqs"]], "countries() (in module pythainlp.corpus)": [[3, "pythainlp.corpus.countries"]], "custom_lemmas() (in module pythainlp.corpus.wordnet)": [[3, "pythainlp.corpus.wordnet.custom_lemmas"]], "download() (in module pythainlp.corpus)": [[3, "pythainlp.corpus.download"]], "edges() (in module pythainlp.corpus.conceptnet)": [[3, "pythainlp.corpus.conceptnet.edges"]], "find_badwords() (in module pythainlp.corpus.util)": [[3, "pythainlp.corpus.util.find_badwords"]], "get_corpus() (in module pythainlp.corpus)": [[3, "pythainlp.corpus.get_corpus"]], "get_corpus_db() (in module pythainlp.corpus)": [[3, "pythainlp.corpus.get_corpus_db"]], "get_corpus_db_detail() (in module pythainlp.corpus)": [[3, "pythainlp.corpus.get_corpus_db_detail"]], "get_corpus_default_db() (in module pythainlp.corpus)": [[3, "pythainlp.corpus.get_corpus_default_db"]], "get_corpus_path() (in module pythainlp.corpus)": [[3, "pythainlp.corpus.get_corpus_path"]], "get_transliteration_dict() (in module pythainlp.corpus.th_en_translit)": [[3, "pythainlp.corpus.th_en_translit.get_transliteration_dict"]], "langs() (in module pythainlp.corpus.wordnet)": [[3, "pythainlp.corpus.wordnet.langs"]], "lch_similarity() (in module pythainlp.corpus.wordnet)": [[3, "pythainlp.corpus.wordnet.lch_similarity"]], "lemma() (in module pythainlp.corpus.wordnet)": [[3, "pythainlp.corpus.wordnet.lemma"]], "lemma_from_key() (in module pythainlp.corpus.wordnet)": [[3, "pythainlp.corpus.wordnet.lemma_from_key"]], "lemmas() (in module pythainlp.corpus.wordnet)": [[3, "pythainlp.corpus.wordnet.lemmas"]], "morphy() (in module pythainlp.corpus.wordnet)": [[3, "pythainlp.corpus.wordnet.morphy"]], "path_similarity() (in module pythainlp.corpus.wordnet)": [[3, "pythainlp.corpus.wordnet.path_similarity"]], "provinces() (in module pythainlp.corpus)": [[3, "pythainlp.corpus.provinces"]], "remove() (in module pythainlp.corpus)": [[3, "pythainlp.corpus.remove"]], "revise_newmm_default_wordset() (in module pythainlp.corpus.util)": [[3, "pythainlp.corpus.util.revise_newmm_default_wordset"]], "revise_wordset() (in module pythainlp.corpus.util)": [[3, "pythainlp.corpus.util.revise_wordset"]], "synset() (in module pythainlp.corpus.wordnet)": [[3, "pythainlp.corpus.wordnet.synset"]], "synsets() (in module pythainlp.corpus.wordnet)": [[3, "pythainlp.corpus.wordnet.synsets"]], "thai_family_names() (in module pythainlp.corpus)": [[3, "pythainlp.corpus.thai_family_names"]], "thai_female_names() (in module pythainlp.corpus)": [[3, "pythainlp.corpus.thai_female_names"]], "thai_male_names() (in module pythainlp.corpus)": [[3, "pythainlp.corpus.thai_male_names"]], "thai_negations() (in module pythainlp.corpus)": [[3, "pythainlp.corpus.thai_negations"]], "thai_orst_words() (in module pythainlp.corpus)": [[3, "pythainlp.corpus.thai_orst_words"]], "thai_stopwords() (in module pythainlp.corpus)": [[3, "pythainlp.corpus.thai_stopwords"]], "thai_syllables() (in module pythainlp.corpus)": [[3, "pythainlp.corpus.thai_syllables"]], "thai_words() (in module pythainlp.corpus)": [[3, "pythainlp.corpus.thai_words"]], "trigram_word_freqs() (in module pythainlp.corpus.tnc)": [[3, "pythainlp.corpus.tnc.trigram_word_freqs"]], "unigram_word_freqs() (in module pythainlp.corpus.oscar)": [[3, "pythainlp.corpus.oscar.unigram_word_freqs"]], "unigram_word_freqs() (in module pythainlp.corpus.tnc)": [[3, "pythainlp.corpus.tnc.unigram_word_freqs"]], "unigram_word_freqs() (in module pythainlp.corpus.ttc)": [[3, "pythainlp.corpus.ttc.unigram_word_freqs"]], "word_freqs() (in module pythainlp.corpus.oscar)": [[3, "pythainlp.corpus.oscar.word_freqs"]], "word_freqs() (in module pythainlp.corpus.tnc)": [[3, "pythainlp.corpus.tnc.word_freqs"]], "word_freqs() (in module pythainlp.corpus.ttc)": [[3, "pythainlp.corpus.ttc.word_freqs"]], "wup_similarity() (in module pythainlp.corpus.wordnet)": [[3, "pythainlp.corpus.wordnet.wup_similarity"]], "bigram (class in pythainlp.generate)": [[4, "pythainlp.generate.Bigram"]], "trigram (class in pythainlp.generate)": [[4, "pythainlp.generate.Trigram"]], "unigram (class in pythainlp.generate)": [[4, "pythainlp.generate.Unigram"]], "__init__() (pythainlp.generate.bigram method)": [[4, "pythainlp.generate.Bigram.__init__"]], "__init__() (pythainlp.generate.trigram method)": [[4, "pythainlp.generate.Trigram.__init__"]], "__init__() (pythainlp.generate.unigram method)": [[4, "pythainlp.generate.Unigram.__init__"]], "gen_sentence() (in module pythainlp.generate.thai2fit)": [[4, "pythainlp.generate.thai2fit.gen_sentence"]], "gen_sentence() (pythainlp.generate.bigram method)": [[4, "pythainlp.generate.Bigram.gen_sentence"]], "gen_sentence() (pythainlp.generate.trigram method)": [[4, "pythainlp.generate.Trigram.gen_sentence"]], "gen_sentence() (pythainlp.generate.unigram method)": [[4, "pythainlp.generate.Unigram.gen_sentence"]], "prob() (pythainlp.generate.bigram method)": [[4, "pythainlp.generate.Bigram.prob"]], "prob() (pythainlp.generate.trigram method)": [[4, "pythainlp.generate.Trigram.prob"]], "khaveeverifier (class in pythainlp.khavee)": [[5, "pythainlp.khavee.KhaveeVerifier"]], "__dict__ (pythainlp.khavee.khaveeverifier attribute)": [[5, "pythainlp.khavee.KhaveeVerifier.__dict__"]], "__init__() (pythainlp.khavee.khaveeverifier method)": [[5, "pythainlp.khavee.KhaveeVerifier.__init__"]], "__module__ (pythainlp.khavee.khaveeverifier attribute)": [[5, "pythainlp.khavee.KhaveeVerifier.__module__"]], "check_aek_too() (pythainlp.khavee.khaveeverifier method)": [[5, "pythainlp.khavee.KhaveeVerifier.check_aek_too"]], "check_karu_lahu() (pythainlp.khavee.khaveeverifier method)": [[5, "pythainlp.khavee.KhaveeVerifier.check_karu_lahu"]], "check_klon() (pythainlp.khavee.khaveeverifier method)": [[5, "pythainlp.khavee.KhaveeVerifier.check_klon"]], "check_marttra() (pythainlp.khavee.khaveeverifier method)": [[5, "pythainlp.khavee.KhaveeVerifier.check_marttra"]], "check_sara() (pythainlp.khavee.khaveeverifier method)": [[5, "pythainlp.khavee.KhaveeVerifier.check_sara"]], "handle_karun_sound_silence() (pythainlp.khavee.khaveeverifier method)": [[5, "pythainlp.khavee.KhaveeVerifier.handle_karun_sound_silence"]], "is_sumpus() (pythainlp.khavee.khaveeverifier method)": [[5, "pythainlp.khavee.KhaveeVerifier.is_sumpus"]], "dependency_parsing() (in module pythainlp.parse)": [[6, "pythainlp.parse.dependency_parsing"]], "audio_vector() (in module pythainlp.soundex.sound)": [[7, "pythainlp.soundex.sound.audio_vector"]], "lk82() (in module pythainlp.soundex)": [[7, "pythainlp.soundex.lk82"]], "metasound() (in module pythainlp.soundex)": [[7, "pythainlp.soundex.metasound"]], "prayut_and_somchaip() (in module pythainlp.soundex)": [[7, "pythainlp.soundex.prayut_and_somchaip"]], "soundex() (in module pythainlp.soundex)": [[7, "pythainlp.soundex.soundex"]], "udom83() (in module pythainlp.soundex)": [[7, "pythainlp.soundex.udom83"]], "word2audio() (in module pythainlp.soundex.sound)": [[7, "pythainlp.soundex.sound.word2audio"]], "word_approximation() (in module pythainlp.soundex.sound)": [[7, "pythainlp.soundex.sound.word_approximation"]], "default_spell_checker (in module pythainlp.spell)": [[8, "pythainlp.spell.DEFAULT_SPELL_CHECKER"]], "norvigspellchecker (class in pythainlp.spell)": [[8, "pythainlp.spell.NorvigSpellChecker"]], "__dict__ (pythainlp.spell.norvigspellchecker attribute)": [[8, "pythainlp.spell.NorvigSpellChecker.__dict__"]], "__init__() (pythainlp.spell.norvigspellchecker method)": [[8, "pythainlp.spell.NorvigSpellChecker.__init__"]], "__module__ (pythainlp.spell.norvigspellchecker attribute)": [[8, "pythainlp.spell.NorvigSpellChecker.__module__"]], "correct() (in module pythainlp.spell)": [[8, "pythainlp.spell.correct"]], "correct() (pythainlp.spell.norvigspellchecker method)": [[8, "pythainlp.spell.NorvigSpellChecker.correct"]], "correct_sent() (in module pythainlp.spell)": [[8, "pythainlp.spell.correct_sent"]], "dictionary() (pythainlp.spell.norvigspellchecker method)": [[8, "pythainlp.spell.NorvigSpellChecker.dictionary"]], "freq() (pythainlp.spell.norvigspellchecker method)": [[8, "pythainlp.spell.NorvigSpellChecker.freq"]], "known() (pythainlp.spell.norvigspellchecker method)": [[8, "pythainlp.spell.NorvigSpellChecker.known"]], "prob() (pythainlp.spell.norvigspellchecker method)": [[8, "pythainlp.spell.NorvigSpellChecker.prob"]], "spell() (in module pythainlp.spell)": [[8, "pythainlp.spell.spell"]], "spell() (pythainlp.spell.norvigspellchecker method)": [[8, "pythainlp.spell.NorvigSpellChecker.spell"]], "spell_sent() (in module pythainlp.spell)": [[8, "pythainlp.spell.spell_sent"]], "keybert (class in pythainlp.summarize.keybert)": [[9, "id0"], [9, "pythainlp.summarize.keybert.KeyBERT"]], "__init__() (pythainlp.summarize.keybert.keybert method)": [[9, "id5"], [9, "pythainlp.summarize.keybert.KeyBERT.__init__"]], "embed() (pythainlp.summarize.keybert.keybert method)": [[9, "id9"], [9, "pythainlp.summarize.keybert.KeyBERT.embed"]], "extract_keywords() (in module pythainlp.summarize)": [[9, "pythainlp.summarize.extract_keywords"]], "extract_keywords() (pythainlp.summarize.keybert.keybert method)": [[9, "id6"], [9, "pythainlp.summarize.keybert.KeyBERT.extract_keywords"]], "module": [[9, "module-pythainlp.summarize.keybert"], [11, "module-pythainlp.tokenize.attacut"], [11, "module-pythainlp.tokenize.crfcut"], [11, "module-pythainlp.tokenize.deepcut"], [11, "module-pythainlp.tokenize.etcc"], [11, "module-pythainlp.tokenize.longest"], [11, "module-pythainlp.tokenize.multi_cut"], [11, "module-pythainlp.tokenize.nercut"], [11, "module-pythainlp.tokenize.newmm"], [11, "module-pythainlp.tokenize.nlpo3"], [11, "module-pythainlp.tokenize.oskut"], [11, "module-pythainlp.tokenize.pyicu"], [11, "module-pythainlp.tokenize.sefr_cut"], [11, "module-pythainlp.tokenize.tcc"], [11, "module-pythainlp.tokenize.thaisumcut"], [14, "module-pythainlp.transliterate.ipa"], [14, "module-pythainlp.transliterate.iso_11940"], [14, "module-pythainlp.transliterate.pyicu"], [14, "module-pythainlp.transliterate.royin.romanize"], [14, "module-pythainlp.transliterate.thai2rom.romanize"], [14, "module-pythainlp.transliterate.thaig2p.transliterate"]], "pythainlp.summarize.keybert": [[9, "module-pythainlp.summarize.keybert"]], "summarize() (in module pythainlp.summarize)": [[9, "pythainlp.summarize.summarize"]], "ner (class in pythainlp.tag)": [[10, "pythainlp.tag.NER"]], "nner (class in pythainlp.tag)": [[10, "pythainlp.tag.NNER"]], "thainametagger (class in pythainlp.tag.thainer)": [[10, "pythainlp.tag.thainer.ThaiNameTagger"]], "__init__() (pythainlp.tag.ner method)": [[10, "pythainlp.tag.NER.__init__"]], "__init__() (pythainlp.tag.nner method)": [[10, "pythainlp.tag.NNER.__init__"]], "__init__() (pythainlp.tag.thainer.thainametagger method)": [[10, "pythainlp.tag.thainer.ThaiNameTagger.__init__"]], "chunk_parse() (in module pythainlp.tag)": [[10, "pythainlp.tag.chunk_parse"]], "get_ner() (in module pythainlp.tag.tltk)": [[10, "pythainlp.tag.tltk.get_ner"]], "get_ner() (pythainlp.tag.thainer.thainametagger method)": [[10, "pythainlp.tag.thainer.ThaiNameTagger.get_ner"]], "load_engine() (pythainlp.tag.ner method)": [[10, "pythainlp.tag.NER.load_engine"]], "load_engine() (pythainlp.tag.nner method)": [[10, "pythainlp.tag.NNER.load_engine"]], "pos_tag() (in module pythainlp.tag)": [[10, "pythainlp.tag.pos_tag"]], "pos_tag_sents() (in module pythainlp.tag)": [[10, "pythainlp.tag.pos_tag_sents"]], "tag() (pythainlp.tag.ner method)": [[10, "pythainlp.tag.NER.tag"]], "tag() (pythainlp.tag.nner method)": [[10, "pythainlp.tag.NNER.tag"]], "tag_provinces() (in module pythainlp.tag)": [[10, "pythainlp.tag.tag_provinces"]], "attacuttokenizer (class in pythainlp.tokenize.attacut)": [[11, "id9"], [11, "pythainlp.tokenize.attacut.AttacutTokenizer"]], "latticestring (class in pythainlp.tokenize.multi_cut)": [[11, "pythainlp.tokenize.multi_cut.LatticeString"]], "longestmatchtokenizer (class in pythainlp.tokenize.longest)": [[11, "pythainlp.tokenize.longest.LongestMatchTokenizer"]], "thaisentencesegmentor (class in pythainlp.tokenize.thaisumcut)": [[11, "id6"], [11, "pythainlp.tokenize.thaisumcut.ThaiSentenceSegmentor"]], "tokenizer (class in pythainlp.tokenize)": [[11, "pythainlp.tokenize.Tokenizer"]], "__init__() (pythainlp.tokenize.tokenizer method)": [[11, "pythainlp.tokenize.Tokenizer.__init__"]], "__init__() (pythainlp.tokenize.attacut.attacuttokenizer method)": [[11, "id10"], [11, "pythainlp.tokenize.attacut.AttacutTokenizer.__init__"]], "__init__() (pythainlp.tokenize.longest.longestmatchtokenizer method)": [[11, "pythainlp.tokenize.longest.LongestMatchTokenizer.__init__"]], "__init__() (pythainlp.tokenize.multi_cut.latticestring method)": [[11, "pythainlp.tokenize.multi_cut.LatticeString.__init__"]], "clause_tokenize() (in module pythainlp.tokenize)": [[11, "pythainlp.tokenize.clause_tokenize"]], "extract_features() (in module pythainlp.tokenize.crfcut)": [[11, "id0"], [11, "pythainlp.tokenize.crfcut.extract_features"]], "find_all_segment() (in module pythainlp.tokenize.multi_cut)": [[11, "id15"], [11, "pythainlp.tokenize.multi_cut.find_all_segment"]], "list_to_string() (in module pythainlp.tokenize.thaisumcut)": [[11, "id4"], [11, "pythainlp.tokenize.thaisumcut.list_to_string"]], "load_dict() (in module pythainlp.tokenize.nlpo3)": [[11, "id17"], [11, "pythainlp.tokenize.nlpo3.load_dict"]], "middle_cut() (in module pythainlp.tokenize.thaisumcut)": [[11, "id5"], [11, "pythainlp.tokenize.thaisumcut.middle_cut"]], "mmcut() (in module pythainlp.tokenize.multi_cut)": [[11, "pythainlp.tokenize.multi_cut.mmcut"]], "paragraph_tokenize() (in module pythainlp.tokenize)": [[11, "pythainlp.tokenize.paragraph_tokenize"]], "pythainlp.tokenize.attacut": [[11, "module-pythainlp.tokenize.attacut"]], "pythainlp.tokenize.crfcut": [[11, "module-pythainlp.tokenize.crfcut"]], "pythainlp.tokenize.deepcut": [[11, "module-pythainlp.tokenize.deepcut"]], "pythainlp.tokenize.etcc": [[11, "module-pythainlp.tokenize.etcc"]], "pythainlp.tokenize.longest": [[11, "module-pythainlp.tokenize.longest"]], "pythainlp.tokenize.multi_cut": [[11, "module-pythainlp.tokenize.multi_cut"]], "pythainlp.tokenize.nercut": [[11, "module-pythainlp.tokenize.nercut"]], "pythainlp.tokenize.newmm": [[11, "module-pythainlp.tokenize.newmm"]], "pythainlp.tokenize.nlpo3": [[11, "module-pythainlp.tokenize.nlpo3"]], "pythainlp.tokenize.oskut": [[11, "module-pythainlp.tokenize.oskut"]], "pythainlp.tokenize.pyicu": [[11, "module-pythainlp.tokenize.pyicu"]], "pythainlp.tokenize.sefr_cut": [[11, "module-pythainlp.tokenize.sefr_cut"]], "pythainlp.tokenize.tcc": [[11, "module-pythainlp.tokenize.tcc"]], "pythainlp.tokenize.thaisumcut": [[11, "module-pythainlp.tokenize.thaisumcut"]], "segment() (in module pythainlp.tokenize.attacut)": [[11, "pythainlp.tokenize.attacut.segment"]], "segment() (in module pythainlp.tokenize.crfcut)": [[11, "id3"], [11, "pythainlp.tokenize.crfcut.segment"]], "segment() (in module pythainlp.tokenize.deepcut)": [[11, "pythainlp.tokenize.deepcut.segment"]], "segment() (in module pythainlp.tokenize.etcc)": [[11, "id32"], [11, "pythainlp.tokenize.etcc.segment"]], "segment() (in module pythainlp.tokenize.longest)": [[11, "id20"], [11, "pythainlp.tokenize.longest.segment"]], "segment() (in module pythainlp.tokenize.multi_cut)": [[11, "id14"], [11, "pythainlp.tokenize.multi_cut.segment"]], "segment() (in module pythainlp.tokenize.nercut)": [[11, "id23"], [11, "pythainlp.tokenize.nercut.segment"]], "segment() (in module pythainlp.tokenize.newmm)": [[11, "id28"], [11, "pythainlp.tokenize.newmm.segment"]], "segment() (in module pythainlp.tokenize.nlpo3)": [[11, "id18"], [11, "pythainlp.tokenize.nlpo3.segment"]], "segment() (in module pythainlp.tokenize.oskut)": [[11, "pythainlp.tokenize.oskut.segment"]], "segment() (in module pythainlp.tokenize.pyicu)": [[11, "pythainlp.tokenize.pyicu.segment"]], "segment() (in module pythainlp.tokenize.sefr_cut)": [[11, "pythainlp.tokenize.sefr_cut.segment"]], "segment() (in module pythainlp.tokenize.tcc)": [[11, "id29"], [11, "pythainlp.tokenize.tcc.segment"]], "segment() (in module pythainlp.tokenize.tcc_p)": [[11, "pythainlp.tokenize.tcc_p.segment"]], "sent_tokenize() (in module pythainlp.tokenize)": [[11, "pythainlp.tokenize.sent_tokenize"]], "set_tokenize_engine() (pythainlp.tokenize.tokenizer method)": [[11, "pythainlp.tokenize.Tokenizer.set_tokenize_engine"]], "split_into_sentences() (pythainlp.tokenize.thaisumcut.thaisentencesegmentor method)": [[11, "id7"], [11, "pythainlp.tokenize.thaisumcut.ThaiSentenceSegmentor.split_into_sentences"]], "subword_tokenize() (in module pythainlp.tokenize)": [[11, "pythainlp.tokenize.subword_tokenize"]], "tcc() (in module pythainlp.tokenize.tcc)": [[11, "id30"], [11, "pythainlp.tokenize.tcc.tcc"]], "tcc() (in module pythainlp.tokenize.tcc_p)": [[11, "pythainlp.tokenize.tcc_p.tcc"]], "tcc_pos() (in module pythainlp.tokenize.tcc)": [[11, "id31"], [11, "pythainlp.tokenize.tcc.tcc_pos"]], "tcc_pos() (in module pythainlp.tokenize.tcc_p)": [[11, "pythainlp.tokenize.tcc_p.tcc_pos"]], "tokenize() (pythainlp.tokenize.attacut.attacuttokenizer method)": [[11, "id11"], [11, "pythainlp.tokenize.attacut.AttacutTokenizer.tokenize"]], "tokenize() (pythainlp.tokenize.longest.longestmatchtokenizer method)": [[11, "pythainlp.tokenize.longest.LongestMatchTokenizer.tokenize"]], "word_detokenize() (in module pythainlp.tokenize)": [[11, "pythainlp.tokenize.word_detokenize"]], "word_tokenize() (in module pythainlp.tokenize)": [[11, "pythainlp.tokenize.word_tokenize"]], "word_tokenize() (pythainlp.tokenize.tokenizer method)": [[11, "pythainlp.tokenize.Tokenizer.word_tokenize"]], "pythainlp_data_dir": [[12, "index-0"], [23, "envvar-PYTHAINLP_DATA_DIR"]], "environment variable": [[12, "index-0"], [23, "envvar-PYTHAINLP_DATA_DIR"], [23, "envvar-PYTHAINLP_READ_MODE"]], "get_full_data_path() (in module pythainlp.tools)": [[12, "pythainlp.tools.get_full_data_path"]], "get_pythainlp_data_path() (in module pythainlp.tools)": [[12, "pythainlp.tools.get_pythainlp_data_path"]], "get_pythainlp_path() (in module pythainlp.tools)": [[12, "pythainlp.tools.get_pythainlp_path"]], "misspell() (in module pythainlp.tools.misspell)": [[12, "pythainlp.tools.misspell.misspell"]], "enthtranslator (class in pythainlp.translate.en_th)": [[13, "pythainlp.translate.en_th.EnThTranslator"]], "thentranslator (class in pythainlp.translate.en_th)": [[13, "pythainlp.translate.en_th.ThEnTranslator"]], "thfrtranslator (class in pythainlp.translate.th_fr)": [[13, "pythainlp.translate.th_fr.ThFrTranslator"]], "thzhtranslator (class in pythainlp.translate.zh_th)": [[13, "pythainlp.translate.zh_th.ThZhTranslator"]], "translate (class in pythainlp.translate)": [[13, "pythainlp.translate.Translate"]], "zhthtranslator (class in pythainlp.translate.zh_th)": [[13, "pythainlp.translate.zh_th.ZhThTranslator"]], "__init__() (pythainlp.translate.translate method)": [[13, "pythainlp.translate.Translate.__init__"]], "__init__() (pythainlp.translate.en_th.enthtranslator method)": [[13, "pythainlp.translate.en_th.EnThTranslator.__init__"]], "__init__() (pythainlp.translate.en_th.thentranslator method)": [[13, "pythainlp.translate.en_th.ThEnTranslator.__init__"]], "__init__() (pythainlp.translate.th_fr.thfrtranslator method)": [[13, "pythainlp.translate.th_fr.ThFrTranslator.__init__"]], "__init__() (pythainlp.translate.zh_th.thzhtranslator method)": [[13, "pythainlp.translate.zh_th.ThZhTranslator.__init__"]], "__init__() (pythainlp.translate.zh_th.zhthtranslator method)": [[13, "pythainlp.translate.zh_th.ZhThTranslator.__init__"]], "download_model_all() (in module pythainlp.translate.en_th)": [[13, "pythainlp.translate.en_th.download_model_all"]], "load_model() (pythainlp.translate.translate method)": [[13, "pythainlp.translate.Translate.load_model"]], "translate() (pythainlp.translate.translate method)": [[13, "pythainlp.translate.Translate.translate"]], "translate() (pythainlp.translate.en_th.enthtranslator method)": [[13, "pythainlp.translate.en_th.EnThTranslator.translate"]], "translate() (pythainlp.translate.en_th.thentranslator method)": [[13, "pythainlp.translate.en_th.ThEnTranslator.translate"]], "translate() (pythainlp.translate.th_fr.thfrtranslator method)": [[13, "pythainlp.translate.th_fr.ThFrTranslator.translate"]], "translate() (pythainlp.translate.zh_th.thzhtranslator method)": [[13, "pythainlp.translate.zh_th.ThZhTranslator.translate"]], "translate() (pythainlp.translate.zh_th.zhthtranslator method)": [[13, "pythainlp.translate.zh_th.ZhThTranslator.translate"]], "wunsentransliterate (class in pythainlp.transliterate.wunsen)": [[14, "pythainlp.transliterate.wunsen.WunsenTransliterate"]], "__init__() (pythainlp.transliterate.wunsen.wunsentransliterate method)": [[14, "pythainlp.transliterate.wunsen.WunsenTransliterate.__init__"]], "pronunciate() (in module pythainlp.transliterate)": [[14, "pythainlp.transliterate.pronunciate"]], "puan() (in module pythainlp.transliterate)": [[14, "pythainlp.transliterate.puan"]], "pythainlp.transliterate.ipa": [[14, "module-pythainlp.transliterate.ipa"]], "pythainlp.transliterate.iso_11940": [[14, "module-pythainlp.transliterate.iso_11940"]], "pythainlp.transliterate.pyicu": [[14, "module-pythainlp.transliterate.pyicu"]], "pythainlp.transliterate.royin.romanize": [[14, "module-pythainlp.transliterate.royin.romanize"]], "pythainlp.transliterate.thai2rom.romanize": [[14, "module-pythainlp.transliterate.thai2rom.romanize"]], "pythainlp.transliterate.thaig2p.transliterate": [[14, "module-pythainlp.transliterate.thaig2p.transliterate"]], "romanize() (in module pythainlp.transliterate)": [[14, "pythainlp.transliterate.romanize"]], "romanize() (in module pythainlp.transliterate.tltk)": [[14, "pythainlp.transliterate.tltk.romanize"]], "tltk_g2p() (in module pythainlp.transliterate.tltk)": [[14, "pythainlp.transliterate.tltk.tltk_g2p"]], "tltk_ipa() (in module pythainlp.transliterate.tltk)": [[14, "pythainlp.transliterate.tltk.tltk_ipa"]], "trans_list() (in module pythainlp.transliterate.ipa)": [[14, "id5"], [14, "pythainlp.transliterate.ipa.trans_list"]], "transliterate() (in module pythainlp.transliterate)": [[14, "pythainlp.transliterate.transliterate"]], "transliterate() (in module pythainlp.transliterate.ipa)": [[14, "id4"], [14, "pythainlp.transliterate.ipa.transliterate"]], "transliterate() (in module pythainlp.transliterate.iso_11940)": [[14, "pythainlp.transliterate.iso_11940.transliterate"]], "transliterate() (in module pythainlp.transliterate.pyicu)": [[14, "id0"], [14, "pythainlp.transliterate.pyicu.transliterate"]], "transliterate() (in module pythainlp.transliterate.thaig2p)": [[14, "pythainlp.transliterate.thaig2p.transliterate"]], "transliterate() (pythainlp.transliterate.wunsen.wunsentransliterate method)": [[14, "pythainlp.transliterate.wunsen.WunsenTransliterate.transliterate"]], "xsampa_list() (in module pythainlp.transliterate.ipa)": [[14, "id6"], [14, "pythainlp.transliterate.ipa.xsampa_list"]], "thaitokenizer (class in pythainlp.ulmfit)": [[15, "pythainlp.ulmfit.ThaiTokenizer"]], "__init__() (pythainlp.ulmfit.thaitokenizer method)": [[15, "pythainlp.ulmfit.ThaiTokenizer.__init__"]], "add_special_cases() (pythainlp.ulmfit.thaitokenizer method)": [[15, "pythainlp.ulmfit.ThaiTokenizer.add_special_cases"]], "document_vector() (in module pythainlp.ulmfit)": [[15, "pythainlp.ulmfit.document_vector"]], "fix_html() (in module pythainlp.ulmfit)": [[15, "pythainlp.ulmfit.fix_html"]], "lowercase_all() (in module pythainlp.ulmfit)": [[15, "pythainlp.ulmfit.lowercase_all"]], "merge_wgts() (in module pythainlp.ulmfit)": [[15, "pythainlp.ulmfit.merge_wgts"]], "process_thai() (in module pythainlp.ulmfit)": [[15, "pythainlp.ulmfit.process_thai"]], "remove_space() (in module pythainlp.ulmfit)": [[15, "pythainlp.ulmfit.remove_space"]], "replace_rep_after() (in module pythainlp.ulmfit)": [[15, "pythainlp.ulmfit.replace_rep_after"]], "replace_rep_nonum() (in module pythainlp.ulmfit)": [[15, "pythainlp.ulmfit.replace_rep_nonum"]], "replace_wrep_post() (in module pythainlp.ulmfit)": [[15, "pythainlp.ulmfit.replace_wrep_post"]], "replace_wrep_post_nonum() (in module pythainlp.ulmfit)": [[15, "pythainlp.ulmfit.replace_wrep_post_nonum"]], "rm_brackets() (in module pythainlp.ulmfit)": [[15, "pythainlp.ulmfit.rm_brackets"]], "rm_useless_newlines() (in module pythainlp.ulmfit)": [[15, "pythainlp.ulmfit.rm_useless_newlines"]], "rm_useless_spaces() (in module pythainlp.ulmfit)": [[15, "pythainlp.ulmfit.rm_useless_spaces"]], "spec_add_spaces() (in module pythainlp.ulmfit)": [[15, "pythainlp.ulmfit.spec_add_spaces"]], "tokenizer() (pythainlp.ulmfit.thaitokenizer static method)": [[15, "pythainlp.ulmfit.ThaiTokenizer.tokenizer"]], "ungroup_emoji() (in module pythainlp.ulmfit)": [[15, "pythainlp.ulmfit.ungroup_emoji"]], "trie (class in pythainlp.util)": [[16, "pythainlp.util.Trie"]], "trie.node (class in pythainlp.util)": [[16, "pythainlp.util.Trie.Node"]], "__init__() (pythainlp.util.trie method)": [[16, "pythainlp.util.Trie.__init__"]], "__init__() (pythainlp.util.trie.node method)": [[16, "pythainlp.util.Trie.Node.__init__"]], "add() (pythainlp.util.trie method)": [[16, "pythainlp.util.Trie.add"]], "arabic_digit_to_thai_digit() (in module pythainlp.util)": [[16, "pythainlp.util.arabic_digit_to_thai_digit"]], "bahttext() (in module pythainlp.util)": [[16, "pythainlp.util.bahttext"]], "children (pythainlp.util.trie.node attribute)": [[16, "pythainlp.util.Trie.Node.children"]], "collate() (in module pythainlp.util)": [[16, "pythainlp.util.collate"]], "convert_years() (in module pythainlp.util)": [[16, "pythainlp.util.convert_years"]], "count_thai_chars() (in module pythainlp.util)": [[16, "pythainlp.util.count_thai_chars"]], "countthai() (in module pythainlp.util)": [[16, "pythainlp.util.countthai"]], "dict_trie() (in module pythainlp.util)": [[16, "pythainlp.util.dict_trie"]], "digit_to_text() (in module pythainlp.util)": [[16, "pythainlp.util.digit_to_text"]], "display_thai_char() (in module pythainlp.util)": [[16, "pythainlp.util.display_thai_char"]], "emoji_to_thai() (in module pythainlp.util)": [[16, "pythainlp.util.emoji_to_thai"]], "end (pythainlp.util.trie.node attribute)": [[16, "pythainlp.util.Trie.Node.end"]], "eng_to_thai() (in module pythainlp.util)": [[16, "pythainlp.util.eng_to_thai"]], "find_keyword() (in module pythainlp.util)": [[16, "pythainlp.util.find_keyword"]], "ipa_to_rtgs() (in module pythainlp.util)": [[16, "pythainlp.util.ipa_to_rtgs"]], "is_native_thai() (in module pythainlp.util)": [[16, "pythainlp.util.is_native_thai"]], "isthai() (in module pythainlp.util)": [[16, "pythainlp.util.isthai"]], "isthaichar() (in module pythainlp.util)": [[16, "pythainlp.util.isthaichar"]], "maiyamok() (in module pythainlp.util)": [[16, "pythainlp.util.maiyamok"]], "nectec_to_ipa() (in module pythainlp.util)": [[16, "pythainlp.util.nectec_to_ipa"]], "normalize() (in module pythainlp.util)": [[16, "pythainlp.util.normalize"]], "now_reign_year() (in module pythainlp.util)": [[16, "pythainlp.util.now_reign_year"]], "num_to_thaiword() (in module pythainlp.util)": [[16, "pythainlp.util.num_to_thaiword"]], "prefixes() (pythainlp.util.trie method)": [[16, "pythainlp.util.Trie.prefixes"]], "rank() (in module pythainlp.util)": [[16, "pythainlp.util.rank"]], "reign_year_to_ad() (in module pythainlp.util)": [[16, "pythainlp.util.reign_year_to_ad"]], "remove() (pythainlp.util.trie method)": [[16, "pythainlp.util.Trie.remove"]], "remove_dangling() (in module pythainlp.util)": [[16, "pythainlp.util.remove_dangling"]], "remove_dup_spaces() (in module pythainlp.util)": [[16, "pythainlp.util.remove_dup_spaces"]], "remove_repeat_vowels() (in module pythainlp.util)": [[16, "pythainlp.util.remove_repeat_vowels"]], "remove_tone_ipa() (in module pythainlp.util)": [[16, "pythainlp.util.remove_tone_ipa"]], "remove_tonemark() (in module pythainlp.util)": [[16, "pythainlp.util.remove_tonemark"]], "remove_zw() (in module pythainlp.util)": [[16, "pythainlp.util.remove_zw"]], "reorder_vowels() (in module pythainlp.util)": [[16, "pythainlp.util.reorder_vowels"]], "sound_syllable() (in module pythainlp.util)": [[16, "pythainlp.util.sound_syllable"]], "spell_syllable() (in module pythainlp.util.spell_words)": [[16, "pythainlp.util.spell_words.spell_syllable"]], "spell_word() (in module pythainlp.util.spell_words)": [[16, "pythainlp.util.spell_words.spell_word"]], "syllable_length() (in module pythainlp.util)": [[16, "pythainlp.util.syllable_length"]], "syllable_open_close_detector() (in module pythainlp.util)": [[16, "pythainlp.util.syllable_open_close_detector"]], "text_to_arabic_digit() (in module pythainlp.util)": [[16, "pythainlp.util.text_to_arabic_digit"]], "text_to_num() (in module pythainlp.util)": [[16, "pythainlp.util.text_to_num"]], "text_to_thai_digit() (in module pythainlp.util)": [[16, "pythainlp.util.text_to_thai_digit"]], "thai_digit_to_arabic_digit() (in module pythainlp.util)": [[16, "pythainlp.util.thai_digit_to_arabic_digit"]], "thai_strftime() (in module pythainlp.util)": [[16, "pythainlp.util.thai_strftime"]], "thai_strptime() (in module pythainlp.util)": [[16, "pythainlp.util.thai_strptime"]], "thai_to_eng() (in module pythainlp.util)": [[16, "pythainlp.util.thai_to_eng"]], "thai_word_tone_detector() (in module pythainlp.util)": [[16, "pythainlp.util.thai_word_tone_detector"]], "thaiword_to_date() (in module pythainlp.util)": [[16, "pythainlp.util.thaiword_to_date"]], "thaiword_to_num() (in module pythainlp.util)": [[16, "pythainlp.util.thaiword_to_num"]], "thaiword_to_time() (in module pythainlp.util)": [[16, "pythainlp.util.thaiword_to_time"]], "time_to_thaiword() (in module pythainlp.util)": [[16, "pythainlp.util.time_to_thaiword"]], "tis620_to_utf8() (in module pythainlp.util)": [[16, "pythainlp.util.tis620_to_utf8"]], "tone_detector() (in module pythainlp.util)": [[16, "pythainlp.util.tone_detector"]], "words_to_num() (in module pythainlp.util)": [[16, "pythainlp.util.words_to_num"]], "namedentityrecognition (class in pythainlp.wangchanberta)": [[17, "pythainlp.wangchanberta.NamedEntityRecognition"]], "thainametagger (class in pythainlp.wangchanberta)": [[17, "pythainlp.wangchanberta.ThaiNameTagger"]], "__init__() (pythainlp.wangchanberta.namedentityrecognition method)": [[17, "pythainlp.wangchanberta.NamedEntityRecognition.__init__"]], "__init__() (pythainlp.wangchanberta.thainametagger method)": [[17, "pythainlp.wangchanberta.ThaiNameTagger.__init__"]], "get_ner() (pythainlp.wangchanberta.namedentityrecognition method)": [[17, "pythainlp.wangchanberta.NamedEntityRecognition.get_ner"]], "get_ner() (pythainlp.wangchanberta.thainametagger method)": [[17, "pythainlp.wangchanberta.ThaiNameTagger.get_ner"]], "segment() (in module pythainlp.wangchanberta)": [[17, "pythainlp.wangchanberta.segment"]], "wordvector (class in pythainlp.word_vector)": [[18, "pythainlp.word_vector.WordVector"]], "__init__() (pythainlp.word_vector.wordvector method)": [[18, "pythainlp.word_vector.WordVector.__init__"]], "doesnt_match() (pythainlp.word_vector.wordvector method)": [[18, "pythainlp.word_vector.WordVector.doesnt_match"]], "get_model() (pythainlp.word_vector.wordvector method)": [[18, "pythainlp.word_vector.WordVector.get_model"]], "load_wordvector() (pythainlp.word_vector.wordvector method)": [[18, "pythainlp.word_vector.WordVector.load_wordvector"]], "most_similar_cosmul() (pythainlp.word_vector.wordvector method)": [[18, "pythainlp.word_vector.WordVector.most_similar_cosmul"]], "sentence_vectorizer() (pythainlp.word_vector.wordvector method)": [[18, "pythainlp.word_vector.WordVector.sentence_vectorizer"]], "similarity() (pythainlp.word_vector.wordvector method)": [[18, "pythainlp.word_vector.WordVector.similarity"]], "pythainlp_read_mode": [[23, "envvar-PYTHAINLP_READ_MODE"]]}})