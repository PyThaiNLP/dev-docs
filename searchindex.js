Search.setIndex({"docnames": ["api/augment", "api/benchmarks", "api/chat", "api/cls", "api/coref", "api/corpus", "api/el", "api/generate", "api/khavee", "api/parse", "api/soundex", "api/spell", "api/summarize", "api/tag", "api/tokenize", "api/tools", "api/translate", "api/transliterate", "api/ulmfit", "api/util", "api/wangchanberta", "api/word_vector", "api/wsd", "index", "notes/FAQ", "notes/command_line", "notes/getting_started", "notes/installation", "notes/license"], "filenames": ["api/augment.rst", "api/benchmarks.rst", "api/chat.rst", "api/cls.rst", "api/coref.rst", "api/corpus.rst", "api/el.rst", "api/generate.rst", "api/khavee.rst", "api/parse.rst", "api/soundex.rst", "api/spell.rst", "api/summarize.rst", "api/tag.rst", "api/tokenize.rst", "api/tools.rst", "api/translate.rst", "api/transliterate.rst", "api/ulmfit.rst", "api/util.rst", "api/wangchanberta.rst", "api/word_vector.rst", "api/wsd.rst", "index.rst", "notes/FAQ.rst", "notes/command_line.rst", "notes/getting_started.rst", "notes/installation.rst", "notes/license.rst"], "titles": ["pythainlp.augment", "pythainlp.benchmarks", "pythainlp.chat", "pythainlp.cls", "pythainlp.coref", "pythainlp.corpus", "pythainlp.el", "pythainlp.generate", "pythainlp.khavee", "pythainlp.parse", "pythainlp.soundex", "pythainlp.spell", "pythainlp.summarize", "pythainlp.tag", "pythainlp.tokenize", "pythainlp.tools", "pythainlp.translate", "pythainlp.transliterate", "pythainlp.ulmfit", "pythainlp.util", "pythainlp.wangchanberta", "pythainlp.word_vector", "pythainlp.wsd", "PyThaiNLP documentation", "FAQ", "Command Line", "Getting Started", "Installation", "License"], "terms": {"The": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26], "textaug": [0, 27], "i": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28], "thai": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27], "text": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 25, 26, 27], "thi": [0, 3, 5, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 26, 27, 28], "function": [0, 1, 5, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25, 27], "task": [0, 1, 20, 26], "class": [0, 2, 3, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21], "wordnetaug": 0, "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28], "us": [0, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28], "wordnet": [0, 27], "__init__": [0, 2, 3, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21], "find_synonym": 0, "word": [0, 1, 5, 7, 8, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 25, 26, 27], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "po": [0, 5, 9, 13, 14, 20, 25], "none": [0, 5, 7, 8, 9, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22], "postag_corpu": 0, "orchid": [0, 13, 14], "list": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 26], "find": [0, 3, 5, 8, 11, 14, 19, 21, 27], "synonym": [0, 5], "from": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22], "part": [0, 5, 13, 14, 19, 20, 25], "speech": [0, 5, 13, 19, 20, 25], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27], "postag": 0, "corpu": [0, 7, 11, 12, 13, 14, 16, 19, 20, 23, 25, 27, 28], "name": [0, 2, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 27], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "sentenc": [0, 11, 12, 13, 15, 19, 21, 22, 26], "token": [0, 5, 7, 9, 12, 13, 18, 20, 21, 22, 23, 25, 26, 27], "object": [0, 5, 8, 11, 12, 14, 18, 19, 21, 22], "word_token": [0, 1, 12, 14, 18, 26], "max_syn_s": 0, "int": [0, 3, 5, 7, 8, 10, 11, 12, 13, 14, 18, 19], "6": [0, 5, 6, 10, 15, 19, 27], "bool": [0, 1, 2, 5, 7, 8, 11, 12, 13, 14, 16, 17, 19, 20, 21], "true": [0, 1, 2, 5, 7, 8, 12, 13, 14, 17, 18, 19, 20, 21, 27], "max": [0, 7], "number": [0, 7, 11, 12, 13, 15, 19], "tupl": [0, 3, 5, 11, 12, 13, 19, 20, 21, 22], "exampl": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 25, 26, 27], "import": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 26], "aug": 0, "\u0e40\u0e23\u0e32\u0e0a\u0e2d\u0e1a\u0e44\u0e1b\u0e42\u0e23\u0e07\u0e40\u0e23": 0, "\u0e22\u0e19": [0, 5, 13, 14, 17, 19], "output": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "\u0e40\u0e23\u0e32": [0, 13, 26], "\u0e0a\u0e2d\u0e1a": [0, 19], "\u0e44\u0e1b": [0, 5, 13, 19], "\u0e23": [0, 4, 5, 7, 10, 11, 12, 13, 14, 21, 25, 26], "\u0e23\u0e23": 0, "\u0e42\u0e23\u0e07\u0e40\u0e23": [0, 13, 19], "\u0e2d\u0e32\u0e04\u0e32\u0e23\u0e40\u0e23": 0, "\u0e44\u0e1b\u0e22": 0, "\u0e07": [0, 5, 8, 10, 11, 12, 13, 14, 19, 25], "word2vec": [0, 21], "word2vecaug": 0, "model": [0, 2, 4, 5, 6, 7, 9, 12, 13, 14, 16, 18, 20, 21, 22, 27, 28], "file": [0, 5, 14, 18, 19, 25, 27, 28], "path": [0, 5, 7, 14, 15, 19, 25, 27], "moodel": 0, "binari": 0, "modify_s": 0, "sent": [0, 5, 7, 13, 14, 15, 19, 25], "p": [0, 7, 13, 17, 19], "float": [0, 1, 5, 7, 11, 12, 14, 15, 19, 21, 22], "0": [0, 1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 25, 27, 28], "7": [0, 6, 7, 13, 19, 20], "probabl": [0, 7, 11], "n_sent": 0, "1": [0, 1, 3, 5, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 25, 27, 28], "thai2fitaug": 0, "thai2fit": [0, 7, 21, 27], "github": [0, 5, 9, 12, 14, 16, 17, 19, 20, 23, 24], "com": [0, 5, 12, 13, 14, 16, 19, 20], "cstorm125": 0, "load_w2v": 0, "load": [0, 2, 7, 14, 16, 18, 21], "\u0e1c\u0e21\u0e40\u0e23": 0, "2": [0, 5, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 23, 27, 28], "5": [0, 5, 10, 11, 12, 13, 14, 15, 18, 19, 21, 25, 27], "\u0e1e\u0e27\u0e01\u0e40\u0e23\u0e32": [0, 14], "\u0e40\u0e23": [0, 5, 8, 13, 14, 21], "\u0e09": [0, 8, 13, 14, 16, 25], "\u0e19": [0, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 25, 26], "ltw2vaug": 0, "ltw2v": [0, 21], "larg": [0, 12, 14, 21], "thaiword2vec": 0, "\u0e40\u0e02\u0e32": [0, 13, 21], "\u0e22\u0e19\u0e2b\u0e19": 0, "\u0e07\u0e2a": [0, 13, 25], "\u0e2d": [0, 5, 6, 7, 8, 11, 12, 13, 14, 17, 18, 19, 21, 25], "\u0e2a\u0e21": [0, 13], "\u0e04\u0e23\u0e40\u0e23": 0, "lm": 0, "fasttextaug": 0, "model_path": [0, 7, 18], "fasttext": 0, "you": [0, 5, 9, 13, 14, 19, 20, 23, 24, 25, 26, 27, 28], "want": [0, 1, 3, 5, 9, 17, 19, 20], "download": [0, 5, 15, 16, 25, 27], "http": [0, 5, 10, 11, 12, 13, 14, 16, 18, 19, 20, 23, 27, 28], "cc": [0, 5, 13, 28], "doc": [0, 12, 14, 18, 19], "en": [0, 5, 7, 16, 19], "crawl": 0, "vector": [0, 10, 12, 18, 21, 26, 27], "html": [0, 5, 13, 18, 19, 20], "thai2transformersaug": 0, "gener": [0, 2, 5, 14, 17, 19, 23, 27], "num_replace_token": 0, "3": [0, 5, 7, 9, 10, 12, 13, 14, 18, 19, 25, 27], "wangchanberta": [0, 12, 13, 14, 23, 27], "replac": [0, 18, 19], "\u0e0a": [0, 7, 10, 11, 12, 13, 14, 19, 22], "\u0e32\u0e07\u0e21": 0, "\u0e17": [0, 5, 12, 13, 14, 19, 25], "\u0e07\u0e2b\u0e21\u0e14": [0, 13, 19], "50": [0, 4, 7, 19], "\u0e15": [0, 5, 10, 11, 12, 13, 14, 17, 19, 21, 22, 25], "\u0e27": [0, 4, 8, 10, 11, 12, 13, 14, 18, 19, 21, 25], "\u0e1a\u0e19": [0, 13, 22], "\u0e1a\u0e19\u0e42\u0e25\u0e01\u0e43\u0e1a\u0e19": 0, "\u0e1a\u0e19\u0e2a": 0, "\u0e14": [0, 5, 9, 11, 12, 13, 14, 17, 19, 21, 25], "\u0e1a\u0e19\u0e1a\u0e01": 0, "\u0e1a\u0e19\u0e19": 0, "\u0e1a\u0e19\u0e2b": 0, "bpemb_wv": 0, "bpembaug": 0, "lang": [0, 5, 17, 18], "th": [0, 5, 9, 10, 11, 13, 16, 18, 19], "v": [0, 5, 14, 19], "100000": 0, "dim": 0, "300": [0, 21], "bpemb": 0, "bheinzerl": 0, "\u0e1c\u0e21\u0e2a\u0e2d\u0e19": 0, "\u0e1c\u0e21\u0e40\u0e02": 0, "\u0e32\u0e40\u0e23": 0, "contain": [1, 5, 13, 14, 15, 19, 21, 22], "util": [1, 11, 14, 18, 23], "relat": [1, 5, 18, 21], "nlp": [1, 16, 23, 26], "At": 1, "moment": 1, "we": [1, 2, 5, 13, 19, 20, 21, 22, 27], "have": [1, 18, 21, 26, 27], "onli": [1, 2, 5, 7, 10, 12, 13, 14, 17, 19, 21, 27], "other": [1, 2, 4, 7, 12, 13, 17, 19, 21, 26, 28], "ad": [1, 14, 18, 19], "soon": 1, "qualit": 1, "evalu": 1, "compute_stat": 1, "ref_sampl": 1, "raw_sampl": 1, "dict": [1, 4, 5, 6, 11, 13, 14, 17, 18, 19, 22], "comput": [1, 5, 12, 21], "statist": [1, 10], "These": [1, 19], "includ": [1, 5, 12, 13, 14, 18, 19, 26, 28], "charact": [1, 8, 11, 14, 17, 18, 19], "level": [1, 9, 18, 19], "posit": [1, 14, 19, 21], "fals": [1, 2, 5, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 27], "neg": [1, 13, 21], "precis": [1, 19, 25], "recal": [1, 25], "f1": 1, "correct": [1, 8, 11, 14, 19], "indic": [1, 5, 13, 17, 19, 26], "sequenc": [1, 18, 19], "correspod": 1, "correctli": [1, 11], "ground": 1, "truth": 1, "sampl": [1, 14, 25], "metric": [1, 11], "datafram": 1, "performac": 1, "pleas": [1, 5, 12, 23, 28], "see": [1, 5, 12, 14, 17, 18, 19, 22, 27, 28], "being": [1, 19], "row": 1, "x": [1, 13, 19], "col": 1, "len": [1, 5, 13], "panda": 1, "preprocess": [1, 19], "txt": [1, 5, 14, 15, 18, 25], "remove_spac": [1, 18], "clean": [1, 2, 18, 19], "up": [1, 17], "befor": [1, 8, 13, 14, 18, 19, 27], "perform": [1, 5, 14, 26, 27], "whether": 1, "remov": [1, 5, 10, 11, 18, 19], "white": 1, "space": [1, 13, 14, 18, 19, 26], "chatbotmodel": 2, "ai": [2, 14, 16, 18, 20], "reset_chat": 2, "reset": 2, "histori": 2, "load_model": [2, 7, 16], "model_nam": [2, 4, 6, 12, 21], "wangchanglm": [2, 7, 27], "return_dict": [2, 7], "load_in_8bit": [2, 7], "devic": [2, 4, 5, 6, 7, 22], "cuda": [2, 4, 6, 7], "torch_dtyp": [2, 7], "torch": [2, 7, 18], "float16": [2, 7], "offload_fold": [2, 7], "low_cpu_mem_usag": [2, 7], "now": [2, 13, 19], "support": [2, 5, 13, 14, 19, 27], "8bit": [2, 7], "cpu": [2, 4, 7, 20, 22, 27], "offload": [2, 7], "folder": [2, 7], "low": [2, 3, 7], "mem": [2, 7], "usag": [2, 7, 18], "chatbot": 2, "ask": [2, 24], "answer": [2, 7, 9], "gzipmodel": 3, "training_data": [3, 5], "reimplemenat": 3, "resourc": [3, 5], "classif": [3, 18, 19, 26, 27], "A": [3, 11, 12, 14, 16, 17, 18, 19, 26, 27], "free": 3, "method": [3, 11, 17, 18], "compressor": 3, "jiang": 3, "et": [3, 14], "al": [3, 5, 14], "2023": [3, 19, 28], "text_sampl": 3, "label": [3, 5, 13, 21, 25], "train": [3, 5, 9, 14, 16, 18, 21, 26], "predict": 3, "x1": 3, "k": [3, 7, 12], "corefer": [4, 27], "resolut": 4, "coreference_resolut": [4, 27], "han": 4, "v1": [4, 17, 21], "do": [4, 5, 9, 17, 18, 19, 26], "run": [4, 6, 14, 22], "txet": 4, "option": [4, 5, 9, 10, 12, 13, 14, 16, 17, 19, 21, 27], "default": [4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 27], "corf": 4, "orefer": 4, "print": [4, 5, 6, 8, 9, 13, 19, 22], "bill": 4, "gate": 4, "\u0e44\u0e14": [4, 7, 8, 13, 14, 19], "\u0e1a\u0e27": 4, "\u0e04\u0e0b": 4, "covid": 4, "19": [4, 14], "\u0e40\u0e02": [4, 13, 14], "\u0e21\u0e41\u0e23\u0e01\u0e41\u0e25": 4, "\u0e23\u0e30\u0e1a": 4, "\u0e1c\u0e21\u0e23": [4, 16], "\u0e2a": [4, 5, 11, 12, 13, 14, 19, 25], "\u0e01\u0e2a\u0e1a\u0e32\u0e22\u0e21\u0e32\u0e01": 4, "clusters_str": 4, "\u0e1c\u0e21": [4, 9, 13, 25], "cluster": [4, 14], "10": [4, 5, 12, 13, 19, 21, 23, 27], "52": [4, 10], "provid": [5, 11, 18], "access": [5, 14], "come": 5, "countri": 5, "frozenset": 5, "\u0e41\u0e04\u0e19\u0e32\u0e14\u0e32": 5, "\u0e42\u0e23\u0e21\u0e32\u0e40\u0e19": 5, "\u0e22": [5, 7, 11, 12, 13, 14, 18, 19, 25], "\u0e41\u0e2d\u0e25\u0e08": 5, "\u0e25\u0e32\u0e27": [5, 21], "dev": 5, "countries_th": 5, "rtype": [5, 8, 14, 17, 18], "get_corpu": 5, "filenam": 5, "as_i": 5, "read": [5, 9, 20, 24, 27], "data": [5, 15, 18, 19, 21, 25, 27], "each": [5, 12, 13, 14, 16, 19, 21, 27], "line": [5, 19, 23, 27], "member": [5, 18], "set": [5, 11, 13, 14, 18, 19, 26, 27], "By": [5, 11, 12, 15, 19, 27], "whitespac": [5, 14, 19], "strip": [5, 8], "empti": [5, 18, 19], "valu": [5, 7, 10, 11, 13, 14, 19], "duplic": [5, 7, 19], "If": [5, 9, 11, 12, 14, 15, 17, 19, 20, 21, 22, 23, 27], "modif": 5, "order": [5, 11, 13, 19], "consist": [5, 18], "negations_th": 5, "\u0e41\u0e15": [5, 13, 22], "\u0e44\u0e21": [5, 13, 14, 19, 25], "ttc_freq": [5, 15], "\u0e42\u0e14\u0e22\u0e19": 5, "t1": [5, 7], "\u0e27\u0e1a\u0e17": 5, "t10": 5, "\u0e2b\u0e22": 5, "\u0e1a\u0e22": 5, "t3": [5, 7], "get_corpus_db": 5, "url": [5, 13], "get": [5, 6, 14, 18, 21, 22, 23, 25, 27], "catalog": [5, 25], "server": 5, "get_corpus_db_detail": 5, "version": [5, 13, 14, 27, 28], "detail": [5, 13, 25, 27], "about": [5, 13, 19, 24, 27, 28], "inform": [5, 14, 27, 28], "local": [5, 14, 15, 19, 25], "get_corpus_default_db": 5, "default_db": 5, "json": 5, "doesn": [5, 13], "t": [5, 12, 13, 17, 18, 19], "exist": [5, 11, 14, 15, 18, 27], "edit": [5, 11], "can": [5, 9, 11, 12, 14, 15, 19, 20, 24, 25, 26, 27], "get_corpus_path": 5, "forc": 5, "alreadi": 5, "root": [5, 9, 15, 26], "ha": [5, 13, 19, 26], "been": 5, "yet": [5, 15, 19], "wiki_lm_lstm": 5, "32": [5, 27], "thwiki_lm": 5, "pth": 5, "dl": 5, "05gb": 5, "00": [5, 19], "25": [5, 18, 19], "41": 5, "5mb": 5, "": [5, 11, 13, 14, 17, 18, 19, 20, 25], "thwiki_model_lstm": 5, "avail": [5, 10, 13, 14, 20, 25], "seen": 5, "io": [5, 23], "db": 5, "found": [5, 11, 19], "succesfulli": 5, "otherwis": [5, 13, 14, 19, 20, 21], "26": 5, "114k": 5, "434k": 5, "690kb": 5, "save": [5, 25], "home": [5, 27], "e": [5, 12, 13, 14, 19], "g": [5, 12, 14], "user": [5, 14, 19, 25], "bact": 5, "filenotfounderror": 5, "errno": [5, 27], "No": [5, 9, 13, 17, 26], "directori": [5, 15, 27], "usr": [5, 15], "lib": [5, 15], "python3": [5, 15], "dist": [5, 15], "packag": [5, 15, 26, 27], "provinc": [5, 13], "thailand": [5, 10, 13, 16, 17, 19, 20], "\u0e01\u0e23\u0e30\u0e1a": [5, 11], "\u0e01\u0e23": [5, 12, 13, 25], "\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23": [5, 12], "\u0e01\u0e32\u0e0d\u0e08\u0e19\u0e1a": 5, "\u0e1a\u0e25\u0e23\u0e32\u0e0a\u0e18\u0e32\u0e19": 5, "thailand_provinces_th": 5, "param": [5, 8, 13, 14, 15, 16, 17, 18, 20], "name_th": 5, "\u0e19\u0e19\u0e17\u0e1a": 5, "abbr_th": 5, "\u0e19\u0e1a": [5, 12, 13], "name_en": 5, "nonthaburi": 5, "abbr_en": 5, "nbi": 5, "thai_dict": [5, 22], "dictionari": [5, 11, 12, 14, 17, 18, 19, 22], "wiktionari": [5, 22], "thai_stopword": [5, 12], "stopword": [5, 19], "\u0e21": [5, 8, 11, 12, 13, 14, 19, 25], "\u0e44\u0e07": 5, "\u0e02\u0e13\u0e30": 5, "\u0e01\u0e32\u0e23": [5, 13, 14, 19, 21, 25], "\u0e1b\u0e23\u0e30\u0e01\u0e32\u0e23\u0e2b\u0e19": 5, "stopwords_th": 5, "thesi": [5, 10], "\u0e40\u0e1e": [5, 13], "\u0e0d\u0e28": 5, "\u0e25": [5, 6, 10, 13, 14, 21], "\u0e15\u0e23\u0e30\u0e01": 5, "also": [5, 12, 14, 17, 18, 27], "\u0e01\u0e32\u0e23\u0e40\u0e25": 5, "\u0e2d\u0e01\u0e1b\u0e23\u0e30\u0e42\u0e22\u0e04\u0e2a\u0e33\u0e04": 5, "\u0e0d\u0e43\u0e19\u0e01\u0e32\u0e23\u0e2a\u0e23": 5, "\u0e1b\u0e04\u0e27\u0e32\u0e21\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\u0e42\u0e14\u0e22\u0e43\u0e0a": 5, "\u0e41\u0e1a\u0e1a\u0e08\u0e33\u0e25\u0e2d\u0e07\u0e41\u0e1a\u0e1a\u0e25\u0e33\u0e14": 5, "\u0e1a\u0e0a": 5, "\u0e21\u0e2b\u0e32\u0e27": 5, "\u0e17\u0e22\u0e32\u0e25": 5, "\u0e22\u0e18\u0e23\u0e23\u0e21\u0e28\u0e32\u0e2a\u0e15\u0e23": 5, "2551": 5, "thai_word": [5, 14], "\u0e01\u0e15": 5, "\u0e01\u0e32": [5, 14, 18, 19, 21, 25], "\u0e01\u0e14\u0e14": 5, "\u0e1e": [5, 10, 12, 13, 14, 17, 19, 21, 25], "\u0e29": [5, 6, 12], "\u0e29\u0e20": 5, "words_th": [5, 14], "languag": [5, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 23, 26, 28], "thai_wsd_dict": 5, "sens": [5, 22, 26], "disambigu": [5, 22], "thai_orst_word": 5, "royal": [5, 17, 19], "societi": [5, 13], "thai_syl": 5, "syllabl": [5, 8, 9, 14, 19, 25, 27], "\u0e01\u0e23\u0e2d\u0e1a": [5, 8, 22], "\u0e01": [5, 10, 11, 12, 13, 14, 17, 19, 22, 25, 26], "\u0e51": [5, 19], "\u0e42\u0e21\u0e1a": 5, "\u0e42\u0e21\u0e19": 5, "\u0e42\u0e21": 5, "\u0e32": [5, 12, 13, 17, 18, 19, 21, 25], "syllables_th": 5, "kucut": 5, "thai_neg": 5, "negat": [5, 13], "thai_family_nam": 5, "famili": 5, "family_names_th": 5, "thai_female_nam": 5, "femal": 5, "person_names_female_th": 5, "thai_male_nam": 5, "male": 5, "person_names_male_th": 5, "th_en_translit": 5, "get_transliteration_dict": 5, "defaultdict": 5, "transliter": [5, 10, 19, 23, 27], "english": [5, 10, 16, 17, 18, 19], "format": [5, 13, 14, 19, 20], "an": [5, 11, 12, 14, 18, 19, 26, 28], "open": [5, 14, 19], "multilingu": [5, 16, 22], "knowledg": [5, 14], "graph": [5, 14], "commonsens": 5, "conceptnet5": 5, "wiki": [5, 19], "api": 5, "edg": 5, "public": [5, 21, 23, 28], "semant": [5, 22], "network": [5, 14], "design": 5, "help": [5, 19, 25], "understand": [5, 26], "mean": [5, 12, 18, 19, 21, 27], "peopl": 5, "For": [5, 12, 13, 14, 19, 22, 26, 27, 28], "term": [5, 21, 26], "common": [5, 13, 14, 19, 28], "which": [5, 11, 14, 19], "artifici": [5, 16], "intelig": 5, "concepnet": 5, "natur": [5, 23, 26], "intellig": [5, 16], "With": [5, 21, 26, 27], "illustr": 5, "show": [5, 13, 18], "relationship": 5, "repres": [5, 19, 21], "between": [5, 8, 10, 13, 14, 21], "node": [5, 19, 27], "abbrevi": [5, 13, 19], "ja": 5, "japan": [5, 13], "given": [5, 10, 11, 12, 13, 15, 19, 21], "accord": [5, 8, 10, 11, 19], "hello": 5, "id": 5, "r": [5, 12, 14, 19], "isa": 5, "c": [5, 14, 19, 20, 27], "greet": 5, "dataset": [5, 14, 15, 20, 25, 28], "d": [5, 19], "4": [5, 7, 8, 9, 10, 13, 16, 17, 18, 19, 21, 28], "end": [5, 13, 14, 19, 26], "licens": [5, 14, 23], "rel": [5, 13, 19], "activ": [5, 13], "omc": 5, "vote": 5, "contributor": 5, "bmsacr": 5, "test": [5, 16, 18, 25], "start": [5, 19, 23], "surfacetext": 5, "kind": [5, 14, 28], "weight": [5, 18], "4641016151377544": 5, "\u0e2a\u0e27": 5, "\u0e2a\u0e14": 5, "relatedto": 5, "n": [5, 7, 10, 12, 17, 19, 20], "prosper": 5, "sa": [5, 19], "process": [5, 14, 18, 19, 23, 26, 27], "wikiparsec": 5, "sense_label": 5, "word_freq": 5, "frequenc": [5, 11, 12, 13, 19], "nation": [5, 7, 11, 13], "tnc_freq": 5, "credit": [5, 14], "korakot": [5, 14, 23], "chaovavanich": [5, 14, 23], "bit": [5, 27], "ly": 5, "3wskzsf": 5, "unigram_word_freq": 5, "unigram": [5, 7, 12], "bigram_word_freq": 5, "bigram": [5, 7, 12], "trigram_word_freq": 5, "trigram": [5, 7], "textbook": [5, 7], "icu": [5, 14, 26, 27], "find_badword": 5, "callabl": [5, 11, 18], "iter": [5, 11, 12, 13, 14, 19], "work": [5, 9, 14, 18, 19], "well": [5, 18], "consid": [5, 8, 13], "make": [5, 13, 18, 19, 21, 26], "unwel": 5, "revise_wordset": 5, "orig_word": 5, "revis": [5, 17], "could": [5, 14, 19, 27], "improv": [5, 14], "base": [5, 9, 10, 11, 12, 14, 17, 18, 19, 20, 22], "orign_word": 5, "remain": 5, "ani": [5, 11, 13, 14, 21, 28], "take": [5, 13, 27], "string": [5, 10, 14, 17, 18, 19], "input": [5, 8, 11, 12, 14, 15, 16, 17, 18, 19, 21, 25], "longest": [5, 25], "segment": [5, 14, 20, 26], "base_word": 5, "more_word": 5, "\u0e16\u0e27": 5, "\u0e14\u0e25": [5, 19], "\u0e17\u0e2d\u0e07\u0e2d": 5, "\u0e19\u0e17\u0e23": [5, 10, 13, 19], "\u0e20": [5, 13, 21], "\u0e12\u0e19": 5, "\u0e40\u0e15": [5, 18], "\u0e22\u0e07": [5, 13, 19, 21], "\u0e28": [5, 12, 13, 14, 17, 19, 21], "\u0e02": [5, 13, 14, 19], "\u0e19\u0e18": [5, 10, 19], "\u0e08\u0e33\u0e25\u0e2d\u0e07": 5, "\u0e14\u0e32\u0e27\u0e40\u0e23": 5, "\u0e2d\u0e07": [5, 13, 14, 25], "union": [5, 6, 8, 9, 13, 14, 19, 20, 22], "dict_tri": [5, 14, 19], "trie": [5, 14, 19], "wordlist": 5, "lambda": 5, "revised_word": 5, "revise_newmm_default_wordset": 5, "newmm": [5, 12, 18, 25, 26], "exact": [5, 13], "copi": [5, 14, 17, 28], "nltk": 5, "www": [5, 10, 11, 13, 14, 19, 27, 28], "org": [5, 13, 14, 18, 19, 20, 23, 28], "howto": 5, "synset": 5, "tha": 5, "all": [5, 8, 11, 12, 14, 16, 18, 19, 21, 27, 28], "lemma": 5, "argument": 5, "constrain": [5, 14], "its": [5, 11, 14, 15, 18, 19, 21], "constraint": 5, "noun": [5, 9, 13], "verb": [5, 9, 13], "adject": [5, 13], "satellit": 5, "adverb": [5, 13], "eng": [5, 10], "\u0e17\u0e33\u0e07\u0e32\u0e19": [5, 13], "01": [5, 19], "02": [5, 18, 20], "08": 5, "\u0e1a": [5, 10, 11, 12, 13, 14, 18, 19, 25, 26], "\u0e32\u0e19": [5, 10, 13, 18], "duplex_hous": 5, "dwell": 5, "hous": 5, "03": [5, 19], "14": [5, 13], "07": 5, "when": [5, 12, 21, 26], "specifi": [5, 12, 13, 15, 20, 27], "\u0e41\u0e23\u0e07": [5, 11], "cound": 5, "interpret": 5, "hard": [5, 26], "adj": [5, 13], "accept": 5, "strong": 5, "name_synset": 5, "dog": 5, "chase": 5, "sysset": 5, "difficult": 5, "easi": [5, 12, 26], "requir": [5, 11, 12, 14, 17, 21, 27, 28], "great": 5, "physic": 5, "mental": 5, "effort": [5, 27], "accomplish": 5, "comprehend": 5, "endur": 5, "all_lemma_nam": 5, "tag": [5, 6, 9, 14, 20, 23, 25], "\u0e2d\u0e40\u0e21\u0e23": [5, 21], "\u0e42\u0e01_\u0e40\u0e27\u0e2a\u0e1b": 5, "\u0e0a\u0e0a": 5, "\u0e40\u0e21": [5, 13, 19], "\u0e2d\u0e07\u0e0a": 5, "\u0e40\u0e2d\u0e19\u0e40\u0e19": 5, "\u0e01\u0e32\u0e23\u0e23": 5, "\u0e1a\u0e40\u0e25": 5, "\u0e22\u0e07\u0e1a": 5, "\u0e15\u0e23\u0e1a": 5, "\u0e0d\u0e18\u0e23\u0e23\u0e21": 5, "\u0e1c": [5, 13, 14, 21, 25], "\u0e15\u0e01\u0e41\u0e15": 5, "\u0e07\u0e40\u0e23": 5, "\u0e2d\u0e14": [5, 12], "\u0e27\u0e22\u0e18\u0e07": 5, "\u0e08": [5, 6, 13, 14, 17, 18, 19, 21, 25], "\u0e42\u0e2d\u0e27\u0e32\u0e19\u0e19": 5, "_\u0e40\u0e27\u0e2d\u0e23": 5, "\u0e42\u0e2d": [5, 13, 26], "80508": 5, "\u0e0b": [5, 12, 13, 17, 19], "\u0e07\u0e44\u0e21": 5, "\u0e41\u0e2d\u0e25\u0e01\u0e2d\u0e2e\u0e2d\u0e25": 5, "\u0e07\u0e15\u0e23\u0e07\u0e44\u0e1b\u0e15\u0e23\u0e07\u0e21\u0e32": 5, "\u0e40\u0e2a": [5, 11, 13, 19, 21, 25], "\u0e19\u0e28": 5, "\u0e19\u0e22": [5, 19, 25], "\u0e15\u0e23": [5, 19], "\u0e17\u0e32\u0e07\u0e08": 5, "\u0e15\u0e43\u0e08": 5, "5277": 5, "all_synset": 5, "over": 5, "next": [5, 11], "entiti": [5, 6, 13, 14, 20, 27], "physical_ent": 5, "abstract": 5, "06": [5, 19], "abl": 5, "unabl": 5, "iso": [5, 17], "639": 5, "code": [5, 10, 14, 15, 16, 18, 28], "arb": 5, "bul": 5, "cat": [5, 16], "cmn": 5, "dan": 5, "ell": 5, "eu": 5, "fa": 5, "fin": 5, "fra": 5, "glg": 5, "heb": 5, "hrv": 5, "ind": 5, "ita": 5, "jpn": 5, "nld": 5, "nno": 5, "nob": 5, "pol": 5, "por": 5, "qcn": 5, "slv": 5, "spa": 5, "swe": 5, "zsm": 5, "lamma": 5, "\u0e42\u0e1b\u0e23\u0e14": 5, "like": [5, 11, 13, 19, 20, 26, 27], "\u0e1e\u0e23\u0e30\u0e40\u0e08": [5, 12], "god": 5, "godhead": 5, "father": 5, "\u0e27\u0e19": [5, 12, 13, 14, 19], "roll": 5, "18": [5, 19], "17": [5, 19], "curl": 5, "roll_up": 5, "wind": 5, "11": [5, 6, 10, 13, 14, 19], "practic": 5, "exercis": 5, "drill": 5, "lemma_from_kei": 5, "kei": [5, 11, 19], "similar": [5, 11, 12, 18, 19, 21, 22, 26], "need": [5, 14, 27], "suppli": [5, 14], "instead": [5, 18], "path_similar": 5, "synsets1": 5, "synsets2": 5, "two": [5, 8, 12, 13, 14, 19, 21, 26, 27], "shortest": 5, "distanc": [5, 11, 22], "equat": 5, "follow": [5, 13, 14, 19, 23, 26], "_similar": 5, "_path": 5, "_distanc": 5, "calcul": [5, 19], "connect": 5, "through": [5, 15], "hypernym": 5, "hyponym": 5, "taxonomi": 5, "score": [5, 12, 21], "ranag": 5, "ident": 5, "first": [5, 11, 12, 19, 21], "measur": [5, 13, 22], "second": [5, 19, 21], "obj": [5, 9], "3333333333333333": 5, "07142857142857142": 5, "08333333333333333": 5, "lch_similar": 5, "leacock": 5, "chodorow": 5, "lch": 5, "maximum": [5, 11, 12, 14], "depth": 5, "shown": 5, "below": [5, 19], "log": 5, "_depth": 5, "538973871058276": 5, "9985288301111273": 5, "1526795099383855": 5, "wup_similar": 5, "wu": 5, "palmer": 5, "wup": 5, "least": 5, "subsum": 5, "most": [5, 11, 12, 21, 26], "specif": [5, 10, 14, 18, 21, 28], "ancestor": 5, "13333333333333333": 5, "35294117647058826": 5, "morphi": 5, "form": [5, 13, 19, 21], "possibl": [5, 11, 14, 19], "search": [5, 10, 11, 23], "thiev": 5, "thief": 5, "mix": 5, "custom_lemma": 5, "tab_fil": 5, "custom": [5, 11, 14, 19], "tab": 5, "compl": 5, "hss": 5, "ntu": 5, "edu": [5, 27], "sg": 5, "omw": 5, "map": [5, 13, 21], "share": 5, "link": [6, 14, 19], "entitylink": 6, "bela": 6, "wikidata": 6, "get_el": 6, "list_text": 6, "\u0e2d\u0e1a\u0e40\u0e04\u0e22\u0e40\u0e1b": 6, "\u0e19\u0e0b": 6, "\u0e42\u0e2d\u0e1a\u0e23": 6, "\u0e17\u0e41\u0e2d\u0e1b\u0e40\u0e1b": 6, "offset": 6, "23": [6, 19, 20], "length": [6, 10, 11, 19], "q484876": 6, "q312": 6, "md_score": 6, "30301809310913086": 6, "6399497389793396": 6, "el_scor": 6, "7142490744590759": 6, "8657019734382629": 6, "tnc": [7, 11, 13], "ttc": 7, "oscar": 7, "gen_sent": 7, "start_seq": 7, "prob": [7, 11], "001": 7, "output_str": 7, "begin": [7, 13, 19], "gen": 7, "\u0e41\u0e21\u0e27": [7, 8, 13, 18, 19], "ouput": 7, "\u0e41\u0e21\u0e27\u0e40\u0e27\u0e25\u0e32\u0e19\u0e30\u0e19": 7, "t2": 7, "\u0e41\u0e21\u0e27\u0e44\u0e21": 7, "\u0e1a\u0e40\u0e0a": 7, "\u0e2d\u0e21": [7, 22], "\u0e07\u0e17\u0e33\u0e15": 7, "\u0e27\u0e40\u0e1b": 7, "\u0e19\u0e40\u0e0b": 7, "\u0e1f\u0e40\u0e27\u0e2d\u0e23": 7, "\u0e04": [7, 10, 11, 13, 14, 19, 22, 25], "\u0e41\u0e04\u0e17\u0e23": 7, "\u0e22\u0e32": 7, "\u0e07\u0e25": 7, "\u0e01\u0e41\u0e2a\u0e14\u0e07": 7, "\u0e13\u0e2b\u0e25\u0e27\u0e07": 7, "is_exclud": 7, "5b": 7, "sft": 7, "shard": 7, "gen_instruct": 7, "max_new_token": 7, "512": 7, "top_p": 7, "95": [7, 13, 14, 19], "temperatur": 7, "9": [7, 11, 12, 13, 18, 19, 20], "top_k": 7, "no_repeat_ngram_s": 7, "typical_p": 7, "thai_onli": 7, "skip_special_token": 7, "instruct": 7, "new": [7, 14, 18, 19, 26, 27], "top": [7, 21], "repeat": [7, 19], "ngram": 7, "size": [7, 14, 18], "typic": 7, "skip": 7, "special": 7, "instruct_gener": 7, "context": [7, 13, 22, 26], "toolkit": [8, 13, 17], "poetri": 8, "\u0e01\u0e27": [8, 13, 21], "khaveeverifi": 8, "verifi": 8, "check_sara": 8, "check": [8, 11, 19], "vowel": [8, 19], "kv": 8, "\u0e40\u0e2d\u0e2d": [8, 13], "check_marttra": 8, "spell": [8, 14, 17, 19, 23, 27], "section": [8, 17], "\u0e2a\u0e32\u0e27": 8, "\u0e40\u0e01\u0e2d\u0e27": 8, "is_sumpu": 8, "word1": [8, 21], "word2": [8, 21], "rhyme": 8, "boolen": 8, "\u0e2a\u0e23\u0e23": 8, "check_karu_lahu": 8, "check_klon": 8, "k_type": 8, "8": [8, 10, 14, 18, 19, 20], "suitabl": [8, 27], "poem": 8, "principl": 8, "\u0e19\u0e0a": [8, 22], "\u0e2d\u0e2b\u0e21": 8, "\u0e19\u0e0a\u0e2d\u0e1a\u0e01": 8, "\u0e19\u0e44\u0e01": 8, "\u0e41\u0e25": [8, 22], "\u0e27\u0e01": 8, "\u0e07\u0e44\u0e25": 8, "\u0e2b\u0e21\u0e32\u0e0a": 8, "\u0e2d\u0e19": [8, 13, 21], "\u0e32\u0e17\u0e2d\u0e07": 8, "\u0e25\u0e04\u0e04\u0e19\u0e40\u0e01": 8, "\u0e40\u0e2d": [8, 13], "\u0e07\u0e40\u0e2d": 8, "\u0e07\u0e04\u0e30\u0e19\u0e2d\u0e07": 8, "\u0e04\u0e19\u0e08": 8, "\u0e1a\u0e08\u0e2d\u0e07": 8, "\u0e40\u0e02\u0e32\u0e0a": 8, "\u0e2d\u0e07\u0e40\u0e18": 8, "\u0e22\u0e23": 8, "\u0e07\u0e40\u0e2a": 8, "\u0e22\u0e07\u0e2b\u0e21\u0e32": 8, "cant": 8, "paragraph": [8, 14], "\u0e2b\u0e21\u0e32": 8, "\u0e08\u0e2d\u0e07": 8, "\u0e17\u0e2d\u0e07": 8, "check_aek_too": 8, "dead_syllable_as_aek": 8, "tonal": 8, "checker": [8, 11], "dead": [8, 19], "aek": 8, "too": 8, "both": [8, 14, 19, 21, 26], "\u0e01\u0e32\u0e23\u0e40\u0e0a": 8, "\u0e04\u0e04\u0e33\u0e40\u0e2d\u0e01\u0e42\u0e17": 8, "\u0e40\u0e2d\u0e07": 8, "\u0e43\u0e0a": [8, 13, 19, 22], "\u0e40\u0e2b\u0e21": [8, 13, 19], "\u0e2d\u0e19\u0e01": [8, 13], "handle_karun_sound_sil": 8, "handl": [8, 14], "sound": [8, 10, 19], "silenc": 8, "karun": 8, "should": [8, 17, 19, 26], "__dict__": [8, 11], "mappingproxi": [8, 11], "__module__": [8, 11], "core": [8, 18, 22], "attribut": [8, 11, 13, 28], "__weakref__": [8, 11], "__doc__": [8, 11], "__annotations__": [8, 11], "depend": [9, 13, 14, 27], "dependency_pars": [9, 27], "engin": [9, 10, 11, 16, 18, 26, 27], "esupar": [9, 27], "transformers_ud": [9, 27], "parser": 9, "conllu": 9, "tagger": [9, 14, 20], "bert": [9, 12, 14], "roberta": 9, "deberta": 9, "spacy_thai": [9, 27], "univers": [9, 10, 13, 16, 18, 28], "transformersud": 9, "ud_goeswith": 9, "goeswith": 9, "subword": [9, 20, 25, 26], "koichiyasuoka": 9, "spm": [9, 12, 20], "upo": 9, "huggingfac": [9, 16], "v2": [9, 13, 20, 22], "pre": [9, 13, 14, 18, 21, 27], "wikipedia": [9, 17, 19], "char": [9, 15, 19], "ud": [9, 13], "head": 9, "pretrain": [9, 16, 18, 20], "detect": 9, "question": [9, 24], "deriv": 9, "th_blackboard": 9, "conll": 9, "\u0e1c\u0e21\u0e40\u0e1b": 9, "\u0e19\u0e04\u0e19\u0e14": 9, "_": [9, 19], "pron": [9, 13], "nsubj": 9, "spaceaft": 9, "\u0e40\u0e1b": [9, 12, 13, 14, 19], "cop": 9, "\u0e04\u0e19": [9, 13, 18, 19], "acl": [9, 14], "ppr": [9, 13], "vsta": [9, 13], "\u0e04\u0e19\u0e14": [9, 19], "ncmn": [9, 13], "udom83": [10, 25], "convert": [10, 17, 19, 21], "phonet": [10, 17, 27], "prefer": 10, "metasound": [10, 25], "prayut_and_somchaip": 10, "algorithm": [10, 11, 12, 13, 14, 19], "propos": 10, "vichit": 10, "lorchirachoonkul": 10, "lk82": [10, 25], "wanne": 10, "udompanich": 10, "combin": [10, 14, 21], "metaphon": 10, "snae": 10, "br\u00fcckner": 10, "cross": [10, 14], "retriev": 10, "techniqu": [10, 12, 14, 26], "\u0e23100000": 10, "\u0e231000": 10, "\u0e25100": 10, "\u0e23100": 10, "\u0e01\u0e29": 10, "\u0e23\u0e13\u0e01\u0e32\u0e23": 10, "\u0e1a931900": 10, "\u0e1ae419": 10, "\u0e1a551": 10, "\u0e1b": [10, 11, 13, 17, 18, 19, 21], "\u0e08\u0e08": [10, 19], "\u0e1b775300": 10, "\u0e1b3e54": 10, "\u0e1b223": 10, "vp": [10, 13], "\u0e1a5515": 10, "mactch": 10, "call": [10, 12, 19, 27], "wa": [10, 14, 19], "develop": [10, 14, 19, 27], "\u0e1a55150": 10, "king": [10, 19], "word_approxim": 10, "list_word": [10, 11], "approxim": [10, 19], "smaller": [10, 14], "closer": 10, "\u0e23\u0e16": 10, "\u0e23\u0e14": 10, "\u0e23\u0e2a": 10, "\u0e23\u0e21": 10, "\u0e33": [10, 18, 21], "875": 10, "375": 10, "audio_vector": 10, "audio": 10, "featur": [10, 14, 18], "panphon": 10, "word2audio": 10, "ipa": [10, 19, 27], "tone": [10, 17, 19], "a\u02d0": [10, 17], "m": [10, 17, 19, 20], "2009": 10, "novel": 10, "match": [10, 13, 14, 19], "ontologi": 10, "analys": 10, "astrologi": 10, "1983": 10, "alik": 10, "homonym": 10, "approach": [10, 14, 27], "master": 10, "chulalongkorn": 10, "\u0e2b\u0e25": [10, 17], "\u0e2d\u0e08": 10, "\u0e23\u0e30\u0e0a": 10, "\u0e13\u0e2b": 10, "\u0e41\u0e25\u0e30": [10, 13, 14, 19, 25], "\u0e40\u0e08\u0e23": [10, 12], "\u0e0d": [10, 13, 21], "\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21\u0e01\u0e32\u0e23\u0e2a": 10, "\u0e1a\u0e04": [10, 17], "\u0e19\u0e04\u0e33\u0e44\u0e17\u0e22\u0e15\u0e32\u0e21\u0e40\u0e2a": 10, "\u0e22\u0e07\u0e2d": 10, "prayut": 10, "suwanvisat": 10, "somchai": 10, "prasitjutrakul": 10, "In": [10, 14, 19, 26], "1998": 10, "cite": [10, 14, 20, 23], "2022": [10, 19], "sep": 10, "cp": 10, "chula": [10, 11], "ac": [10, 11, 13], "spj": 10, "paper": 10, "thaitext": 10, "ncsec98": 10, "clir": 10, "pdf": [10, 14], "closest": 11, "pn": 11, "peter": 11, "norvig": 11, "phunspel": [11, 27], "spyll": 11, "port": 11, "hunspel": 11, "symspellpi": [11, 27], "python": [11, 14, 19, 23, 26, 27], "symspel": 11, "v6": 11, "\u0e19\u0e15\u0e23\u0e1a": 11, "\u0e19\u0e15\u0e23\u0e07": 11, "\u0e04\u0e23": [11, 13], "\u0e07\u0e40\u0e01\u0e15": 11, "\u0e01\u0e23\u0e30\u0e1b": 11, "\u0e01\u0e30\u0e1b": 11, "\u0e40\u0e2b\u0e15\u0e01\u0e32\u0e23\u0e13": 11, "\u0e40\u0e2b\u0e15": [11, 19, 25], "\u0e01\u0e32\u0e23\u0e13": [11, 19], "correct_s": 11, "\u0e40\u0e14": [11, 12, 19], "\u0e19\u0e2d\u0e23": 11, "\u0e40\u0e19": [11, 13, 22], "\u0e19\u0e40\u0e17\u0e2d\u0e23": [11, 22], "ar": [11, 12, 13, 14, 17, 18, 19, 21, 27, 28], "incur": 11, "result": [11, 13, 19, 25], "sort": [11, 19], "occurr": 11, "descend": [11, 19], "tltk": [11, 13, 14], "wrapper": [11, 13, 14, 18], "within": [11, 13, 14, 18, 27], "\u0e27\u0e23": 11, "\u0e1b\u0e23": 11, "\u0e1a\u0e23": 11, "\u0e04\u0e25": [11, 13], "spell_sent": 11, "norvigspellcheck": 11, "custom_dict": [11, 14, 22], "min_freq": 11, "min_len": [11, 19], "max_len": 11, "40": [11, 14, 19], "dict_filt": 11, "_is_thai_and_not_num": 11, "initi": [11, 14, 18], "basic": [11, 20], "choos": [11, 12, 13, 14, 19], "give": [11, 19], "candid": 11, "Then": [11, 12, 21], "select": [11, 12, 19], "highest": [11, 12], "just": [11, 19], "without": [11, 13, 14, 17, 19, 28], "case": [11, 18], "assign": [11, 14], "everi": [11, 19], "around": [11, 18], "000": [11, 13], "minimum": [11, 12], "keep": [11, 14, 15], "func": [11, 12, 18], "filter": [11, 12, 14, 18], "non": [11, 19], "itemsview": 11, "current": [11, 14, 27], "instanc": [11, 12, 13, 19], "\u0e2b\u0e27\u0e32\u0e19": 11, "30": [11, 13, 19], "\u0e21\u0e30\u0e19\u0e32\u0e27": 11, "\u0e41\u0e2d\u0e1a": 11, "3223": 11, "dict_item": 11, "known": [11, 26], "thei": [11, 14, 19], "intersect": 11, "\u0e40\u0e1e\u0e22\u0e19": 11, "\u0e40\u0e1e\u0e25": 11, "\u0e40\u0e1e\u0e25\u0e07": 11, "\u0e22\u0e01\u0e44": 11, "\u0e44\u0e1f\u0e25": 11, "0006959172792052158": 11, "\u0e32\u0e23": [11, 19], "482306849763902e": 11, "05": [11, 15, 19], "freq": 11, "\u0e0d\u0e0d\u0e32": [11, 18], "3639": 11, "\u0e0d\u0e0a\u0e32": 11, "whose": 11, "decreas": 11, "exactli": 11, "one": [11, 12, 14, 17, 19, 21, 27], "itself": 11, "look": [11, 17, 27], "expand": 11, "And": 11, "still": 11, "fail": [11, 27], "\u0e0d\u0e2b\u0e32": 11, "\u0e15\u0e23\u0e20\u0e32\u0e1a": 11, "\u0e15\u0e23\u0e20\u0e32\u0e1e": 11, "default_spell_check": 11, "standard": [11, 19], "art": [11, 14], "ling": 11, "2007": 11, "how": [11, 17, 18, 27], "write": [11, 14, 19, 26, 28], "corrector": 11, "under": [12, 14, 27, 28], "hood": 12, "sent_token": [12, 14], "normal": [12, 13, 18, 19], "frequnci": 12, "less": [12, 26], "than": [12, 14], "greater": 12, "out": [12, 14, 18, 19, 21, 26], "final": 12, "pick": [12, 21], "sum": [12, 18], "appear": 12, "summari": 12, "effect": [12, 17], "refer": [12, 14], "mt5": [12, 27], "small": 12, "xl": 12, "xxl": 12, "cpe": 12, "kmutt": 12, "\u0e17\u0e33\u0e40\u0e19": 12, "\u0e22\u0e1a\u0e17": 12, "\u0e32\u0e0a": 12, "\u0e32\u0e07": [12, 13, 25], "\u0e2b\u0e23": [12, 13], "\u0e07\u0e16\u0e19\u0e19\u0e1e\u0e23\u0e30\u0e2d\u0e32\u0e17": 12, "\u0e15\u0e22": [12, 19], "\u0e07\u0e2d\u0e22": 12, "\u0e1a\u0e19\u0e16\u0e19\u0e19\u0e1e\u0e23\u0e30\u0e2d\u0e32\u0e17": 12, "\u0e40\u0e02\u0e15\u0e1e\u0e23\u0e30\u0e19\u0e04\u0e23": 12, "\u0e21\u0e40\u0e1b": 12, "\u0e32\u0e19\u0e02\u0e2d\u0e07\u0e40\u0e08": 12, "\u0e32\u0e1e\u0e23\u0e30\u0e22\u0e32\u0e21\u0e2b\u0e32\u0e42\u0e22\u0e18\u0e32": 12, "\u0e17\u0e2d\u0e40\u0e23": 12, "\u0e22\u0e30": 12, "\u0e04\u0e0a\u0e40\u0e2a\u0e19": 12, "\u0e15\u0e23\u0e40\u0e08": 12, "\u0e32\u0e1e\u0e23\u0e30\u0e22\u0e32\u0e21\u0e2b\u0e32\u0e42\u0e22\u0e18\u0e32\u0e19\u0e23\u0e32\u0e18": 12, "\u0e1a\u0e14": 12, "\u0e28\u0e23": 12, "\u0e22\u0e13\u0e23\u0e07\u0e04": 12, "\u0e1e\u0e0d\u0e32\u0e40\u0e08": 12, "\u0e19\u0e2a\u0e01": 12, "\u0e25\u0e04\u0e0a\u0e40\u0e2a\u0e19": 12, "\u0e40\u0e0a": [12, 13], "\u0e2d\u0e2a\u0e32\u0e22\u0e21\u0e2d\u0e0d": 12, "\u0e40\u0e08": 12, "\u0e19\u0e1b": [12, 19], "\u0e02\u0e2d\u0e07\u0e40\u0e08": 12, "\u0e32\u0e08\u0e2d\u0e21\u0e21\u0e32\u0e23\u0e14\u0e32\u0e01\u0e25": 12, "\u0e19\u0e43\u0e19\u0e1e\u0e23\u0e30\u0e1a\u0e32\u0e17\u0e2a\u0e21\u0e40\u0e14": 12, "\u0e08\u0e1e\u0e23\u0e30\u0e08\u0e2d\u0e21\u0e40\u0e01\u0e25": 12, "\u0e32\u0e40\u0e08": 12, "\u0e32\u0e2d\u0e22": [12, 13], "\u0e2b": [12, 13, 14, 17, 19], "\u0e41\u0e25\u0e30\u0e40\u0e1b": 12, "\u0e19\u0e21\u0e23\u0e14\u0e01\u0e15\u0e01\u0e17\u0e2d\u0e14\u0e21\u0e32\u0e16": 12, "\u0e32\u0e1a\u0e23\u0e21\u0e27\u0e07\u0e28": 12, "\u0e40\u0e18\u0e2d": [12, 13], "\u0e01\u0e23\u0e21\u0e1e\u0e23\u0e30\u0e19\u0e40\u0e23\u0e28\u0e23\u0e27\u0e23\u0e24\u0e17\u0e18": 12, "\u0e1e\u0e23\u0e30\u0e2d\u0e07\u0e04": 12, "\u0e32\u0e01\u0e24\u0e14\u0e32\u0e20": 12, "\u0e2b\u0e32\u0e23": 12, "\u0e2d\u0e21\u0e32\u0e43\u0e19\u0e23": 12, "\u0e0a\u0e2a\u0e21": 12, "\u0e22\u0e1e\u0e23\u0e30\u0e1a\u0e32\u0e17\u0e2a\u0e21\u0e40\u0e14": 12, "\u0e08\u0e1e\u0e23\u0e30\u0e08": 12, "\u0e25\u0e08\u0e2d\u0e21\u0e40\u0e01\u0e25": 12, "\u0e27\u0e42\u0e1b\u0e23\u0e14\u0e40\u0e01\u0e25": 12, "\u0e32\u0e2f": 12, "\u0e43\u0e2b": [12, 13], "\u0e2a\u0e23": [12, 19], "\u0e32\u0e07\u0e15\u0e33\u0e2b\u0e19": 12, "\u0e19\u0e17": [12, 13, 14, 19], "\u0e1b\u0e23\u0e30\u0e17": 12, "\u0e1a\u0e02\u0e2d\u0e07\u0e1e\u0e23\u0e30\u0e40\u0e08": 12, "\u0e01\u0e23\u0e21\u0e1e\u0e23\u0e30\u0e19\u0e40\u0e23\u0e28\u0e27\u0e23\u0e24\u0e17": 12, "\u0e18": [12, 17, 19], "\u0e41\u0e25\u0e30\u0e40\u0e08": 12, "\u0e32\u0e08\u0e2d\u0e21\u0e21\u0e32\u0e23\u0e14\u0e32": 12, "\u0e2d\u0e21\u0e32\u0e40\u0e23": 12, "\u0e22\u0e01\u0e2d\u0e32\u0e04\u0e32\u0e23\u0e2b\u0e25": 12, "\u0e01\u0e19": [12, 13], "\u0e15\u0e33\u0e2b\u0e19": 12, "\u0e01\u0e40\u0e14": 12, "extra_id_0": 12, "\u0e2f\u0e25\u0e2f": 12, "\u0e07\u0e19": [12, 19, 21], "\u0e2d\u0e22": [12, 13, 14, 18, 19], "\u0e25\u0e1b\u0e27": 12, "\u0e12\u0e19\u0e18\u0e23\u0e23\u0e21": 12, "\u0e16": [12, 13, 19, 26], "\u0e32\u0e1e": 12, "\u0e14\u0e16": 12, "\u0e07\u0e02\u0e19\u0e21\u0e2b\u0e27\u0e32\u0e19\u0e43\u0e19\u0e15\u0e33\u0e19\u0e32\u0e19\u0e17": 12, "\u0e19\u0e43\u0e08\u0e17": 12, "\u0e14\u0e41\u0e25": 12, "\u0e27\u0e25\u0e30\u0e01": 12, "\u0e2d\u0e07\u0e44\u0e21": 12, "\u0e33\u0e41\u0e02": 12, "\u0e07\u0e43\u0e2a": 12, "\u0e41\u0e19": 12, "\u0e46": [12, 19, 22], "\u0e40\u0e1e\u0e23\u0e32\u0e30\u0e27": [12, 13], "\u0e32\u0e40\u0e1b": 12, "\u0e19\u0e2d\u0e30\u0e44\u0e23\u0e17": 12, "\u0e19\u0e43\u0e08\u0e2a": 12, "\u0e14\u0e46": 12, "\u0e32\u0e41\u0e02": 12, "\u0e07\u0e43\u0e2a\u0e40\u0e1b": 12, "extract_keyword": 12, "keyphrase_ngram_rang": 12, "max_keyword": 12, "min_df": 12, "stop_word": 12, "relev": 12, "keyphras": 12, "document": [12, 18, 19, 28], "mai": [12, 13, 14, 19, 27, 28], "produc": 12, "complet": 12, "differ": [12, 13, 14, 26], "so": [12, 27], "care": [12, 19], "note": [12, 13, 14, 18, 19, 21, 27], "expens": 12, "repetit": [12, 18], "creat": [12, 13, 14, 15, 19, 26, 27, 28], "highli": 12, "recommend": [12, 27], "unit": [12, 13, 14, 19], "defin": [12, 14], "vari": 12, "w": [12, 14, 19, 25], "tokenizer_engin": 12, "\u0e40\u0e2a\u0e32": 12, "\u0e44\u0e1f\u0e1f": 12, "consecut": 12, "\u0e40\u0e2a\u0e32\u0e44\u0e1f\u0e1f": 12, "stop": 12, "ignor": [12, 19], "\u0e2d\u0e32\u0e2b\u0e32\u0e23": [12, 13], "\u0e2b\u0e21\u0e32\u0e22\u0e16": 12, "\u0e02\u0e2d\u0e07\u0e41\u0e02": 12, "\u0e07\u0e2b\u0e23": 12, "\u0e2d\u0e02\u0e2d\u0e07\u0e40\u0e2b\u0e25\u0e27": 12, "\u0e19\u0e2b\u0e23": 12, "\u0e21\u0e40\u0e02": 12, "\u0e32\u0e2a": [12, 19], "\u0e32\u0e07\u0e01\u0e32\u0e22\u0e41\u0e25": 12, "\u0e08\u0e30\u0e17\u0e33\u0e43\u0e2b": 12, "\u0e40\u0e01": [12, 13, 14, 19], "\u0e14\u0e1e\u0e25": 12, "\u0e07\u0e07\u0e32\u0e19\u0e41\u0e25\u0e30\u0e04\u0e27\u0e32\u0e21\u0e23": 12, "\u0e2d\u0e19\u0e41\u0e01": 12, "\u0e32\u0e07\u0e01\u0e32\u0e22": 12, "\u0e17\u0e33\u0e43\u0e2b": 12, "\u0e32\u0e07\u0e01\u0e32\u0e22\u0e40\u0e08\u0e23": 12, "\u0e0d\u0e40\u0e15": 12, "\u0e1a\u0e42\u0e15": 12, "\u0e2d\u0e21\u0e41\u0e0b\u0e21\u0e2a": 12, "\u0e27\u0e19\u0e17": 12, "\u0e01\u0e2b\u0e23\u0e2d": 12, "\u0e04\u0e27\u0e1a\u0e04": 12, "\u0e21\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e25": 12, "\u0e22\u0e19\u0e41\u0e1b\u0e25\u0e07\u0e15": 12, "\u0e32\u0e07\u0e46": [12, 13], "\u0e43\u0e19\u0e23": [12, 19], "\u0e27\u0e22\u0e17\u0e33\u0e43\u0e2b": 12, "\u0e2d\u0e27": [12, 14], "\u0e22\u0e27\u0e30\u0e15": 12, "\u0e17\u0e33\u0e07\u0e32\u0e19\u0e44\u0e14": 12, "\u0e32\u0e07\u0e1b\u0e01\u0e15": 12, "\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e08\u0e30\u0e15": 12, "\u0e29\u0e41\u0e25\u0e30\u0e44\u0e21": 12, "\u0e14\u0e42\u0e17\u0e29\u0e15": 12, "\u0e2d\u0e23": 12, "\u0e22\u0e19\u0e41\u0e1b\u0e25\u0e07": 12, "\u0e29\u0e41\u0e25\u0e30": 12, "\u0e14\u0e42\u0e17\u0e29": 12, "minim": 12, "re": [12, 19], "implement": [12, 14, 19], "leverag": 12, "embed": [12, 18], "maartengr": 12, "airesearch": [12, 16], "att": [12, 20], "uncas": [12, 20], "return_similar": 12, "kb": 12, "3228477063109462": 12, "31320597838000375": 12, "29115434699705506": 12, "2678430841321016": 12, "24996827960821494": 12, "23876962942443258": 12, "23191285218852364": 12, "22425422716846247": 12, "22162962875299588": 12, "20773497763458507": 12, "emb": [12, 18], "ndarrai": [12, 18, 21], "averag": [12, 13, 18], "last": 12, "hidden": [12, 19], "layer": 12, "mark": [13, 14, 19, 26], "linguist": [13, 21], "annot": 13, "ne": 13, "three": 13, "lst20": 13, "tabl": 13, "\u0e43\u0e2b\u0e21": [13, 18], "\u0e40\u0e28\u0e29": 13, "\u0e21\u0e32\u0e01": [13, 19], "adp": 13, "adposit": 13, "\u0e41\u0e21": [13, 21], "\u0e02\u0e2d\u0e07": [13, 14], "\u0e2a\u0e33\u0e2b\u0e23": 13, "adv": 13, "\u0e40\u0e25": [13, 14], "\u0e40\u0e25\u0e22": 13, "aux": 13, "auxiliari": 13, "\u0e32\u0e22": [13, 19, 21], "cconj": 13, "coordin": 13, "conjunct": 13, "det": 13, "determin": 13, "\u0e2b\u0e25\u0e32\u0e22": 13, "intj": 13, "interject": 13, "\u0e01\u0e33\u0e21": 13, "\u0e1e\u0e27\u0e01": 13, "\u0e2a\u0e19\u0e32\u0e21": 13, "\u0e2c\u0e32": 13, "\u0e0d\u0e0a": 13, "num": 13, "numer": [13, 14, 19], "103": 13, "2004": 13, "\u0e2b\u0e19": [13, 17, 18, 19], "particl": 13, "\u0e21\u0e32": [13, 19], "pronoun": 13, "\u0e27\u0e40\u0e2d\u0e07": 13, "\u0e43\u0e04\u0e23": 13, "propn": 13, "proper": 13, "\u0e42\u0e2d\u0e1a\u0e32\u0e21\u0e32": 13, "\u0e41\u0e04\u0e1b": 13, "\u0e15\u0e2d\u0e25\u0e2e": 13, "\u0e42\u0e2d\u0e1e": 13, "\u0e44\u0e21\u0e40\u0e04": 13, "punct": 13, "punctuat": [13, 19], "sconj": 13, "subordin": 13, "\u0e2b\u0e32\u0e01": 13, "\u0e40\u0e1c\u0e0a": 13, "nprp": 13, "\u0e19\u0e42\u0e14\u0e27\u0e2a": 13, "\u0e42\u0e04\u0e42\u0e23\u0e19": 13, "\u0e42\u0e04": 13, "ncnm": 13, "cardin": 13, "\u0e2a\u0e2d\u0e07": [13, 19], "\u0e2a\u0e32\u0e21": 13, "nonm": 13, "ordin": 13, "nlbl": 13, "b": [13, 18, 19], "\u0e2d\u0e32\u0e04\u0e32\u0e23": 13, "nttl": 13, "titl": [13, 14], "\u0e1e\u0e25\u0e40\u0e2d\u0e01": 13, "person": [13, 14], "\u0e13": [13, 14, 16], "pdmn": 13, "demonstr": 13, "pntr": 13, "interrog": 13, "\u0e2d\u0e30\u0e44\u0e23": 13, "\u0e32\u0e07\u0e44\u0e23": 13, "prel": 13, "vact": 13, "\u0e2d\u0e07\u0e40\u0e1e\u0e25\u0e07": 13, "stativ": 13, "\u0e40\u0e2b": [13, 17], "vatt": 13, "\u0e2a\u0e27\u0e22": 13, "xvbm": 13, "\u0e2d\u0e1a": [13, 25], "\u0e01\u0e33\u0e25": 13, "xvam": 13, "after": [13, 14, 18, 19], "xvmm": 13, "\u0e04\u0e27\u0e23": [13, 25], "\u0e40\u0e04\u0e22": 13, "xvbb": 13, "imper": 13, "mood": 13, "\u0e13\u0e32": 13, "\u0e08\u0e07": 13, "\u0e32\u0e21": 13, "xvae": 13, "post": [13, 14, 16, 18], "ddan": 13, "definit": [13, 22], "classifi": 13, "\u0e42\u0e19": 13, "ddac": 13, "allow": [13, 14], "ddbq": 13, "preced": 13, "quantit": 13, "express": [13, 14, 26, 28], "ddaq": 13, "\u0e1e\u0e2d\u0e14": 13, "diac": 13, "indefinit": 13, "\u0e44\u0e2b\u0e19": 13, "dibq": 13, "\u0e1a\u0e32\u0e07": 13, "\u0e1b\u0e23\u0e30\u0e21\u0e32\u0e13": 13, "diaq": 13, "dcnm": 13, "donm": 13, "\u0e14\u0e17": 13, "\u0e2a\u0e22": 13, "advn": 13, "\u0e33\u0e40\u0e2a\u0e21\u0e2d": 13, "advi": 13, "\u0e27\u0e46": 13, "\u0e40\u0e2a\u0e17\u0e2d\u0e46": 13, "\u0e32\u0e46": 13, "advp": 13, "prefix": [13, 19], "\u0e42\u0e14\u0e22\u0e40\u0e23": 13, "sententi": 13, "\u0e42\u0e14\u0e22\u0e1b\u0e01\u0e15": 13, "\u0e18\u0e23\u0e23\u0e21\u0e14\u0e32": 13, "cnit": 13, "cltv": 13, "collect": [13, 14, 18, 19], "\u0e01\u0e25": 13, "\u0e1d": [13, 21], "\u0e17\u0e32\u0e07": 13, "\u0e41\u0e1a\u0e1a": 13, "cmtr": 13, "\u0e42\u0e25\u0e01\u0e23": 13, "\u0e41\u0e01": 13, "\u0e27\u0e42\u0e21\u0e07": 13, "cfqc": 13, "\u0e40\u0e17": 13, "\u0e22\u0e27": 13, "cvbl": 13, "verbal": 13, "jcrg": 13, "jcmp": 13, "compar": [13, 21], "\u0e32\u0e01": 13, "jsbr": 13, "\u0e2d\u0e07\u0e08\u0e32\u0e01": 13, "rpre": 13, "preposit": 13, "\u0e08\u0e32\u0e01": 13, "\u0e25\u0e30": 13, "\u0e43\u0e15": [13, 21], "fixn": 13, "nomin": 13, "\u0e04\u0e27\u0e32\u0e21": [13, 14], "\u0e2a\u0e19": 13, "\u0e19\u0e2a\u0e19\u0e32\u0e19": 13, "fixv": 13, "adverbi": 13, "eaff": 13, "affirm": 13, "\u0e30": 13, "\u0e19\u0e30": 13, "\u0e40\u0e16\u0e2d\u0e30": 13, "eitt": 13, "\u0e40\u0e2b\u0e23\u0e2d": 13, "\u0e44\u0e2b\u0e21": 13, "punc": 13, "thu": 13, "corespond": 13, "aj": 13, "av": 13, "ax": 13, "cl": [13, 23], "fx": 13, "ij": 13, "nn": 13, "nu": 13, "pa": 13, "pr": 13, "pu": 13, "vv": 13, "xx": [13, 16], "insid": 13, "outsid": 13, "beggin": 13, "iob": [13, 20], "chunk": [13, 14], "intermedi": 13, "o": [13, 17], "doe": [13, 14, 15, 18, 19, 26, 27], "belong": 13, "\u0e1a\u0e32\u0e23": 13, "\u0e42\u0e2d\u0e1a\u0e32\u0e21\u0e32\u0e40\u0e1b": 13, "\u0e19\u0e1b\u0e23\u0e30\u0e18\u0e32\u0e19\u0e18": 13, "\u0e1b\u0e14": 13, "would": [13, 14, 26], "\u0e1b\u0e23\u0e30\u0e18\u0e32\u0e19\u0e32\u0e18": 13, "respect": [13, 21], "date": [13, 14, 19], "21": [13, 14, 19], "16": 13, "time": [13, 14, 19, 27], "email": [13, 14], "info": [13, 25], "nrpsc": 13, "\u0e42\u0e25\u0e40\u0e21\u0e15\u0e23": 13, "\u0e01\u0e21": 13, "locat": [13, 14, 15, 19, 27], "\u0e44\u0e17\u0e22": [13, 17, 21], "\u0e1b\u0e23\u0e32\u0e08": 13, "\u0e01\u0e33\u0e41\u0e1e\u0e07\u0e40\u0e1e\u0e0a\u0e23": 13, "organ": [13, 14], "\u0e01\u0e23\u0e21\u0e27": 13, "\u0e17\u0e22\u0e32\u0e28\u0e32\u0e2a\u0e15\u0e23": 13, "\u0e01\u0e32\u0e23\u0e41\u0e1e\u0e17\u0e22": 13, "\u0e08\u0e23": 13, "\u0e19\u0e32\u0e07\u0e1b\u0e23\u0e30\u0e19\u0e2d\u0e21": 13, "\u0e17\u0e2d\u0e07\u0e08": 13, "phone": [13, 14], "1200": 13, "2670": 13, "8888": 13, "bangkokhealth": 13, "zip": 13, "10400": 13, "11130": 13, "monei": [13, 19], "\u0e32\u0e19\u0e1a\u0e32\u0e17": 13, "\u0e1a\u0e32\u0e17": [13, 14, 19], "law": [13, 14, 28], "\u0e42\u0e23\u0e04\u0e23\u0e30\u0e1a\u0e32\u0e14": 13, "2499": 13, "\u0e10\u0e18\u0e23\u0e23\u0e21\u0e19": 13, "pos_tag": 13, "It": [13, 14, 16, 19, 26, 27], "chang": [13, 14, 19], "academ": 13, "articl": 13, "orchid_ud": 13, "blackboard": [13, 14], "treebank": [13, 14], "blackboard_ud": 13, "universaldepend": 13, "pud": 13, "parallel": 13, "nativ": [13, 19, 26], "\u0e23\u0e2d\u0e14": 13, "\u0e43\u0e19": [13, 19, 25], "\u0e2b\u0e25\u0e1a\u0e20": 13, "\u0e19\u0e32\u0e22\u0e01": [13, 21], "\u0e40\u0e0a\u0e2d\u0e23": 13, "\u0e32\u0e2d": 13, "\u0e08\u0e33\u0e19\u0e27\u0e19": [13, 19], "\u0e02\u0e32": 13, "equal": [13, 17], "pos_tag_s": 13, "\u0e19\u0e01": [13, 18, 21], "tag_provinc": 13, "recogn": 13, "reutrn": 13, "ner": [13, 14, 20], "\u0e2b\u0e19\u0e2d\u0e07\u0e04\u0e32\u0e22": 13, "chunk_pars": 13, "crf": [13, 14], "orchidpp": 13, "pars": [13, 23, 27], "phrase": [13, 14], "structur": 13, "tokens_po": 13, "np": 13, "thainer": [13, 20, 25], "load_engin": 13, "entitii": [13, 20], "associ": [13, 20], "\u0e17\u0e14\u0e2a\u0e2d\u0e1a\u0e19\u0e32\u0e22\u0e27\u0e23\u0e23\u0e13\u0e1e\u0e07\u0e29": 13, "\u0e17\u0e17": 13, "\u0e22\u0e44\u0e1e\u0e1a": 13, "\u0e25\u0e22": 13, "\u0e17\u0e14\u0e2a\u0e2d\u0e1a": 13, "\u0e19\u0e32\u0e22": 13, "\u0e27\u0e23\u0e23\u0e13": [13, 25], "\u0e1e\u0e07\u0e29": 13, "\u0e44\u0e1e\u0e1a": 13, "\u0e19\u0e32\u0e22\u0e27\u0e23\u0e23\u0e13\u0e1e\u0e07\u0e29": 13, "nner": 13, "thai_nner": 13, "nest": 13, "recognit": [13, 20, 27], "named_ent": [13, 14], "\u0e41\u0e21\u0e27\u0e17\u0e33\u0e2d\u0e30\u0e44\u0e23\u0e15\u0e2d\u0e19\u0e2b": 13, "\u0e32\u0e42\u0e21\u0e07\u0e40\u0e0a": 13, "\u0e15\u0e2d\u0e19": 13, "\u0e42\u0e21\u0e07": 13, "span": 13, "entity_typ": 13, "thainametagg": [13, 20], "defualt": 13, "thainer14": 13, "get_ner": [13, 20], "15": [13, 18, 19, 21], "61": 13, "\u0e17\u0e14\u0e2a\u0e2d\u0e1a\u0e23\u0e30\u0e1a\u0e1a\u0e40\u0e27\u0e25\u0e32": 13, "49": 13, "To": 13, "exclud": [13, 19], "\u0e23\u0e30\u0e1a\u0e1a": 13, "\u0e40\u0e27\u0e25\u0e32": [13, 19], "\u0e40\u0e02\u0e32\u0e40\u0e23": 13, "\u0e22\u0e19\u0e17": 13, "\u0e22\u0e19\u0e19\u0e32\u0e07\u0e23\u0e2d\u0e07": 13, "l": [13, 19, 20], "\u0e19\u0e32\u0e07\u0e23\u0e2d\u0e07": 13, "account": 13, "virach": 13, "sornlertlamvanich": 13, "naoto": 13, "takahashi": 13, "hitoshi": 13, "isahara": 13, "2000": [13, 14], "build": [13, 22, 27], "Of": [13, 25], "journal": [13, 17], "acoust": 13, "vol": 13, "20": [13, 16], "pp": [13, 14], "189": 13, "198": 13, "1999": 13, "prachya": 13, "boonkwan": 13, "vorapon": 13, "luantangsrisuk": 13, "sitthaa": 13, "phaholphinyo": 13, "kanyanat": 13, "kriengket": 13, "dhanon": 13, "leenoi": 13, "charun": 13, "phrombut": 13, "monthika": 13, "boriboon": 13, "krit": 13, "kosawat": 13, "thepchai": 13, "supnithi": 13, "2020": [13, 14], "guidelin": 13, "arxiv": [13, 20], "2008": 13, "05055": 13, "multipl": [14, 18, 19, 21], "desir": 14, "clause_token": 14, "claus": 14, "split": 14, "claue": 14, "\u0e19\u0e2d\u0e19": 14, "\u0e2d\u0e16": [14, 19], "\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21": 14, "keep_whitespac": 14, "among": 14, "newlin": [14, 18, 19], "splite": 14, "ted": 14, "thaisum": 14, "nakhun": 14, "chumpolsathien": 14, "wtp": 14, "wtpsplitax": 14, "mani": [14, 19], "mini": 14, "tini": 14, "canin": 14, "1l": 14, "12l": 14, "specifiaclli": 14, "regex": 14, "pattern": 14, "sentence_1": 14, "\u0e19\u0e44\u0e1b\u0e1b\u0e23\u0e30\u0e0a": 14, "\u0e21\u0e40\u0e21": 14, "\u0e19\u0e32\u0e04\u0e21": [14, 19], "sentence_2": 14, "\u0e32\u0e23\u0e32\u0e0a\u0e01\u0e32\u0e23\u0e44\u0e14": 14, "\u0e1a\u0e01\u0e32\u0e23\u0e2b\u0e21": 14, "\u0e19\u0e40\u0e27": 14, "\u0e22\u0e19\u0e40\u0e1b": 14, "\u0e19\u0e23\u0e30\u0e22\u0e30": 14, "\u0e41\u0e25\u0e30\u0e44\u0e14": 14, "\u0e1a\u0e21\u0e2d\u0e1a\u0e2b\u0e21\u0e32\u0e22\u0e43\u0e2b": 14, "\u0e1b\u0e23\u0e30\u0e08\u0e33\u0e43\u0e19\u0e23\u0e30\u0e14": 14, "\u0e1a\u0e20": 14, "\u0e20\u0e32\u0e04": 14, "n\u0e41\u0e25\u0e30\u0e44\u0e14": 14, "\u0e41\u0e25\u0e30\u0e40\u0e02\u0e32\u0e44\u0e14": 14, "paragraph_token": 14, "paragraph_threshold": 14, "\u0e1a\u0e17\u0e04\u0e27\u0e32\u0e21\u0e19": 14, "\u0e22\u0e19\u0e2a": 14, "\u0e07\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b": 14, "\u0e19\u0e21\u0e32\u0e08\u0e32\u0e01\u0e1c\u0e25\u0e07\u0e32\u0e19\u0e27": 14, "\u0e22\u0e17": 14, "\u0e40\u0e04\u0e22\u0e17\u0e33\u0e21\u0e32\u0e43\u0e19\u0e2d\u0e14": 14, "\u0e17\u0e33\u0e01\u0e32\u0e23\u0e28": 14, "\u0e01\u0e29\u0e32\u0e04": 14, "\u0e19\u0e04\u0e27": 14, "\u0e32\u0e43\u0e2b\u0e21": 14, "\u0e32\u0e07\u0e01\u0e27": 14, "\u0e32\u0e07\u0e02\u0e27\u0e32\u0e07\u0e41\u0e15": 14, "\u0e32\u0e07\u0e43\u0e14": 14, "\u0e07\u0e43\u0e04\u0e23": 14, "\u0e02\u0e2d\u0e2d\u0e20": 14, "\u0e22\u0e43\u0e19\u0e04\u0e27\u0e32\u0e21\u0e1a\u0e01\u0e1e\u0e23": 14, "\u0e2d\u0e07\u0e17": [14, 25], "\u0e07\u0e1b\u0e27\u0e07\u0e21\u0e32": 14, "subword_token": 14, "insepar": 14, "contigu": 14, "separ": [14, 25], "further": 14, "\u0e08\u0e30": 14, "\u0e1d\u0e32": 14, "appli": [14, 17, 18, 19], "rule": [14, 17, 18, 19, 26], "smallest": 14, "\u0e02\u0e19\u0e21\u0e0a": 14, "enhanc": 14, "inrut": 14, "2001": 14, "ssg": [14, 27], "theeramunkong": 14, "tcc_p": 14, "sentencepiec": [14, 20], "text_1": 14, "\u0e04\u0e40\u0e23": 14, "\u0e21\u0e41\u0e23\u0e01\u0e02\u0e2d\u0e07": 14, "\u0e23\u0e32\u0e0a\u0e27\u0e07\u0e28": 14, "\u0e2b\u0e21": [14, 19, 25], "text_2": 14, "\u0e04\u0e27\u0e32\u0e21\u0e41\u0e1b\u0e25\u0e01\u0e41\u0e22\u0e01\u0e41\u0e25\u0e30\u0e1e": 14, "\u0e12\u0e19\u0e32\u0e01\u0e32\u0e23": 14, "\u0e41\u0e23": 14, "\u0e23\u0e32": [14, 17], "\u0e27\u0e32": 14, "\u0e41\u0e1b": 14, "\u0e41\u0e22": 14, "\u0e12": [14, 21], "\u0e19\u0e32": 14, "\u0e04\u0e27\u0e32\u0e21\u0e41\u0e1b\u0e25\u0e01\u0e41\u0e22\u0e01\u0e41\u0e25\u0e30": 14, "\u0e19\u0e32\u0e01\u0e32\u0e23": 14, "\u0e21\u0e41\u0e23\u0e01": 14, "\u0e41\u0e1b\u0e25\u0e01": [14, 19], "\u0e41\u0e22\u0e01": 14, "join_broken_num": 14, "omit": 14, "rejoin": 14, "wrongli": 14, "learn": [14, 17, 18], "intern": [14, 15, 17, 27, 28], "compon": [14, 17, 27], "unicod": [14, 17, 19, 27], "mm": 14, "multi": [14, 26], "cut": 14, "maxim": 14, "boundari": 14, "same": 14, "safe": 14, "mechan": 14, "avoid": 14, "long": [14, 19], "continu": 14, "ambigu": 14, "break": 14, "point": [14, 19], "adapt": 14, "rust": 14, "5x": 14, "faster": 14, "domain": [14, 28], "stack": 14, "sefr": 14, "ensembl": 14, "refin": 14, "colloc": 14, "\u0e42\u0e2d\u0e40\u0e04\u0e1a": [14, 26], "\u0e1e\u0e27\u0e01\u0e40\u0e23\u0e32\u0e23": 14, "\u0e01\u0e20\u0e32\u0e29\u0e32\u0e1a": 14, "\u0e32\u0e19\u0e40\u0e01": 14, "\u0e42\u0e2d\u0e40\u0e04": [14, 26], "\u0e20\u0e32\u0e29\u0e32": [14, 26], "\u0e27\u0e23\u0e23\u0e13\u0e01\u0e23\u0e23\u0e21": 14, "\u0e20\u0e32\u0e1e\u0e27\u0e32\u0e14": 14, "\u0e41\u0e25\u0e30\u0e01\u0e32\u0e23\u0e41\u0e2a\u0e14\u0e07\u0e07": 14, "\u0e01\u0e32\u0e23\u0e41\u0e2a\u0e14\u0e07": 14, "join": [14, 15], "broken": 14, "decim": [14, 19], "ip": 14, "address": 14, "\u0e40\u0e07": 14, "\u0e191": 14, "234\u0e1a\u0e32\u0e1719": 14, "32\u0e19": 14, "127": 14, "234": 14, "\u0e19\u0e42\u0e0b": 14, "\u0e2d\u0e32\u0e40\u0e1a\u0e30": 14, "\u0e19\u0e22\u0e32\u0e22\u0e19": 14, "\u0e42\u0e0b": 14, "\u0e2d\u0e32": [14, 19], "\u0e40\u0e1a\u0e30": 14, "custom_dict_japanese_nam": 14, "add": [14, 18, 19, 21], "dict_sourc": [14, 19], "word_detoken": 14, "detoken": 14, "along": 14, "encapsul": 14, "them": [14, 19, 26, 27], "singl": [14, 21], "instanti": 14, "custom_words_list": 14, "\u0e2d\u0e30\u0e40\u0e1f\u0e40\u0e0b": 14, "aphasia": 14, "\u0e19\u0e2d\u0e32\u0e01\u0e32\u0e23\u0e1c": 14, "\u0e14\u0e1b\u0e01\u0e15": 14, "\u0e02\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e1e": 14, "_token": 14, "\u0e2d\u0e32\u0e01\u0e32\u0e23": 14, "\u0e2d\u0e30": 14, "\u0e40\u0e1f\u0e40\u0e0b": 14, "explicitli": 14, "path_to_custom_dictionari": 14, "custom_dictionari": 14, "txtt": 14, "encod": [14, 18, 19], "utf": [14, 19], "f": [14, 19], "naphasia": 14, "n\u0e1c": 14, "n\u0e1b\u0e01\u0e15": 14, "init": 14, "\u0e1b\u0e01\u0e15": 14, "set_tokenizer_engin": 14, "\u0e19\u0e2d\u0e32\u0e01\u0e32\u0e23": 14, "vocaburai": 14, "main": 14, "set_tokenize_engin": 14, "condit": [14, 28], "random": 14, "field": [14, 19, 26], "accuraci": 14, "87": 14, "state": 14, "zhou": 14, "2016": [14, 23, 28], "aclweb": 14, "anthologi": 14, "c16": 14, "1031": 14, "82": 14, "notebook": [14, 18, 20, 23, 28], "vistec": [14, 16, 20], "ted_crawl": 14, "due": [14, 19], "unreli": 14, "extract_featur": 14, "window": [14, 21, 27], "max_n_gram": 14, "extract": 14, "slide": 14, "n_gram": 14, "gram": 14, "fed": 14, "origin": [14, 19], "nakhunchumpolsathien": 14, "mastersthesi": 14, "chumpolsathien_2020": 14, "distil": 14, "keyword": 14, "neural": 14, "lingual": 14, "summar": [14, 23, 27], "author": 14, "year": [14, 19], "school": 14, "beij": 14, "institut": [14, 16, 17, 20], "technologi": [14, 16], "copyright": [14, 28], "apach": [14, 23, 28], "except": [14, 28], "complianc": [14, 28], "obtain": [14, 19, 21, 28], "unless": [14, 28], "applic": [14, 28], "agre": [14, 28], "softwar": [14, 23, 28], "distribut": [14, 19, 27, 28], "AS": [14, 28], "basi": [14, 26, 28], "warranti": [14, 28], "OR": [14, 28], "OF": [14, 28], "either": [14, 21, 28], "impli": [14, 28], "govern": [14, 15, 28], "permiss": [14, 27, 28], "limit": [14, 28], "list_to_str": 14, "middle_cut": 14, "thaisentencesegmentor": 14, "split_into_sent": 14, "ismiddlecut": 14, "fast": [14, 18, 27], "reason": 14, "accur": [14, 19, 27], "repositori": 14, "attacuttoken": 14, "sc": 14, "librari": [14, 19, 23, 26, 27], "1d": 14, "convolut": 14, "instal": [14, 21, 23], "tensorflow": 14, "themselv": [14, 19], "facebook": [14, 16], "gist": 14, "latticestr": 14, "in_dict": 14, "mmcut": 14, "default_word_dict_tri": 14, "find_all_seg": 14, "variat": 14, "load_dict": 14, "file_path": 14, "dict_nam": 14, "memori": 14, "throught": 14, "overrid": 14, "uniqu": 14, "_67a47bf9": 14, "safe_mod": 14, "parallel_mod": 14, "bind": 14, "reduc": 14, "chanc": 14, "multithread": 14, "mode": [14, 27], "patorn": 14, "utenpattanun": 14, "longestmatchtoken": 14, "breakiter": 14, "wannaphong": [14, 17, 23], "phatthiyaphaibun": [14, 23], "taglist": 14, "parm": 14, "ws1000": 14, "framework": 14, "baselin": 14, "2021": [14, 20], "heurist": [14, 19], "exponenti": 14, "wait": 14, "colab": [14, 20], "research": [14, 16, 20, 26], "googl": [14, 20], "fileid": 14, "1v1z657_5eswpo8rlfvrwa0a5e4vkg7si": 14, "drive": 14, "14ibg": 14, "ngzxj15rkwjnwozlot32fqborbx": 14, "scrollto": 14, "myz7nzar7dmw": 14, "accorind": 14, "purpos": 14, "jakkrit": 14, "techo": 14, "grammar": 14, "wittawat": 14, "jitkrittum": 14, "tcc_po": 14, "automodul": 14, "reli": [14, 19], "1utqgxxmrxor9jp1b1jcq1frbnvorhtbq": 14, "jeeragon": 14, "patiroop": 14, "yuanghirun": 14, "sarayut": 14, "paludkong": 14, "supot": 14, "nitsuwat": 14, "para": 14, "limmaneepraserth": 14, "forward": 14, "backward": 14, "symposium": 14, "commun": 14, "iscit": 14, "37": 14, "concept": 14, "present": 14, "miscellan": 15, "get_full_data_path": 15, "full": [15, 19, 27], "get_pythainlp_data_path": 15, "where": [15, 18, 19, 26, 27], "environ": [15, 27], "variabl": [15, 27], "pythainlp_data_dir": [15, 27], "get_pythainlp_path": 15, "misspel": 15, "ratio": 15, "simul": 15, "some": [15, 25, 27], "mispel": 15, "per": 15, "100": [15, 16, 19], "\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\u0e1b\u0e23\u0e32\u0e01\u0e0f\u0e04\u0e23": 15, "\u0e07\u0e41\u0e23\u0e01\u0e43\u0e19\u0e1e": 15, "\u0e17\u0e18\u0e28": 15, "\u0e01\u0e23\u0e32\u0e0a": 15, "1826": 15, "\u0e07\u0e41\u0e23\u0e01\u0e43\u0e19\u0e01": 15, "1727": 15, "machin": [16, 27], "src_lang": 16, "target_lang": 16, "use_gpu": 16, "target": [16, 19], "gpu": [16, 20], "zh": [16, 17], "chines": [16, 26], "fr": 16, "french": [16, 26], "th2en": 16, "\u0e19\u0e23": 16, "\u0e01\u0e41\u0e21\u0e27": 16, "love": 16, "small100": 16, "cover": 16, "en_th": 16, "download_model_al": 16, "advanc": [16, 27], "enthtransl": 16, "depa": [16, 20], "websit": [16, 23], "releas": [16, 28], "enth": 16, "thentransl": 16, "zh_th": 16, "thzhtranslat": 16, "lalita": [16, 23], "marianmt": 16, "zh_cn": 16, "builder": 16, "lalitadeelert": 16, "mt": 16, "zhth": 16, "web": 16, "aibuildersx": 16, "166736255494822": 16, "thzh": 16, "\u0e01\u0e04": 16, "\u6211\u7231\u4f60": 16, "zhthtranslat": 16, "\u0e13\u0e19\u0e30": 16, "th_fr": 16, "thfrtranslat": 16, "helsinki": 16, "opu": 16, "group": [16, 20], "bleu": 16, "co": 16, "thfr": 16, "\u0e17\u0e14\u0e2a\u0e2d\u0e1a\u0e23\u0e30\u0e1a\u0e1a": 16, "du": 16, "syst\u00e8m": 16, "turn": 17, "put": [17, 19], "simpli": [17, 19], "fallback_engin": 17, "render": 17, "latin": 17, "alphabet": [17, 19, 27], "system": [17, 19, 26, 27], "transcript": [17, 19], "rtg": [17, 19], "offici": 17, "publish": 17, "\u0e16\u0e2d\u0e14\u0e40\u0e2a": 17, "\u0e22\u0e07\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\u0e40\u0e1b": 17, "\u0e19\u0e2d": [17, 19], "\u0e01\u0e29\u0e23\u0e25\u0e30\u0e15": 17, "One": 17, "thai2rom_onnx": 17, "lookup": 17, "more": [17, 19, 22, 27, 28], "issu": [17, 26], "deep": 17, "pytorch": 17, "onnx": 17, "runtim": 17, "compil": [17, 27], "\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16": [17, 19], "samant": 17, "samat": 17, "\u0e20\u0e32\u0e1e\u0e22\u0e19\u0e15\u0e23": 17, "phapn": 17, "phapphayon": 17, "\u0e2d\u0e1b\u0e1b": 17, "pronounc": 17, "graphem": 17, "phonem": [17, 19], "pyicu": [17, 27], "epitran": 17, "tltk_g2p": 17, "11940": 17, "tltk_ipa": 17, "\u0101m\u0101rt": 17, "h": [17, 19], "sa\u02d0ma\u02d0rot": 17, "sa\u02d05": 17, "ma\u02d0t3": 17, "saa4": 17, "maat2": 17, "h\u0101phyntr": 17, "p\u02b0a\u02d0pjanot": 17, "p\u02b0": 17, "j": [17, 19], "pronunci": [17, 19], "w2p": 17, "letter": [17, 26], "\u0e2a\u0e32": 17, "\u0e21\u0e32\u0e14": 17, "\u0e1e\u0e32\u0e1a": 17, "\u0e1e\u0e30": 17, "puan": 17, "show_pronunci": 17, "spooner": 17, "\u0e19\u0e32\u0e23": 17, "\u0e19\u0e23\u0e32": 17, "wunsen": 17, "wunsentransliter": 17, "japanes": [17, 26], "korean": 17, "mandarin": 17, "vietnames": 17, "jp_input": 17, "zh_sandhi": 17, "third": 17, "sandhi": 17, "jp": 17, "hepburn": 17, "ko": [17, 19], "vi": 17, "script": [17, 19], "hanyu": 17, "pinyin": 17, "diacrit": 17, "macron": 17, "ors61": 17, "\u0e01\u0e40\u0e01\u0e13\u0e11": 17, "\u0e01\u0e32\u0e23\u0e17": 17, "\u0e1a\u0e28": 17, "\u0e1e\u0e17": 17, "\u0e20\u0e32\u0e29\u0e32\u0e0d": 17, "\u0e2a\u0e33\u0e19": 17, "\u0e01\u0e07\u0e32\u0e19\u0e23\u0e32\u0e0a\u0e1a": 17, "\u0e13\u0e11": 17, "\u0e15\u0e22\u0e2a\u0e20\u0e32": 17, "2561": 17, "ri35": 17, "\u0e23\u0e32\u0e0a\u0e1a": 17, "\u0e15\u0e22\u0e2a\u0e16\u0e32\u0e19": 17, "2535": 17, "ri49": 17, "\u0e20\u0e32\u0e29\u0e32\u0e08": 17, "2549": 17, "thc43": 17, "\u0e40\u0e01\u0e13\u0e11": 17, "\u0e01\u0e32\u0e23\u0e16": 17, "\u0e32\u0e22\u0e17\u0e2d\u0e14\u0e40\u0e2a": 17, "\u0e22\u0e07\u0e20\u0e32\u0e29\u0e32\u0e08": 17, "\u0e19\u0e41\u0e21\u0e19\u0e14\u0e32\u0e23": 17, "\u0e27\u0e22\u0e2d": 17, "\u0e01\u0e02\u0e23\u0e27": 17, "\u0e04\u0e13\u0e30\u0e01\u0e23\u0e23\u0e21\u0e01\u0e32\u0e23\u0e2a": 17, "\u0e19\u0e1b\u0e23\u0e30\u0e27": 17, "\u0e28\u0e32\u0e2a\u0e15\u0e23": 17, "\u0e44\u0e17\u0e22\u0e43\u0e19\u0e40\u0e2d\u0e01\u0e2a\u0e32\u0e23": 17, "2543": 17, "wt": 17, "ohay\u014d": 17, "\u0e42\u0e2d\u0e2e\u0e32\u0e42\u0e22": 17, "ohay": 17, "\u0e42\u0e2d\u0e30\u0e2e\u0e30\u0e42\u0e22": 17, "annyeonghaseyo": 17, "\u0e19\u0e19\u0e22": 17, "\u0e2d\u0e07\u0e2e\u0e32\u0e40\u0e0b\u0e42\u0e22": 17, "xin": 17, "ch\u00e0o": 17, "\u0e32\u0e27": 17, "ni3": 17, "hao3": 17, "internaiton": 17, "trans_list": 17, "xsampa_list": 17, "nitaya": 17, "kanchanawan": 17, "2006": 17, "global": 17, "fine": 18, "tune": 18, "thaitoken": 18, "frozen": 18, "fastai": 18, "basetoken": 18, "transform": [18, 19, 20, 22], "static": 18, "dictonari": 18, "meth": 18, "\u0e2d\u0e32\u0e20\u0e23\u0e13": 18, "\u0e19\u0e15\u0e21\u0e22\u0e1b": 18, "\u0e20\u0e32\u0e27\u0e19\u0e32\u0e21\u0e22\u0e1b": 18, "\u0e15\u0e21": 18, "add_special_cas": 18, "tok": 18, "document_vector": 18, "agg": 18, "400": [18, 19], "dimens": [18, 21], "bunch": 18, "learner": 18, "aggreg": [18, 21], "avial": 18, "numpi": [18, 21], "arrai": [18, 21], "document_vectorr": 18, "load_data": 18, "thwiki_lm_data": 18, "pkl": 18, "language_model_learn": 18, "config": [18, 27], "emb_sz": 18, "n_hid": 18, "1550": 18, "n_layer": 18, "pad_token": 18, "qrnn": 18, "tie_weight": 18, "out_bia": 18, "output_p": 18, "hidden_p": 18, "input_p": 18, "embed_p": 18, "weight_p": 18, "trn_arg": 18, "drop_mult": 18, "clip": 18, "12": [18, 19], "alpha": 18, "beta": 18, "awd_lstm": 18, "\u0e19\u0e19": 18, "\u0e19\u0e14": [18, 19], "jupyt": 18, "fix_html": 18, "anbsp": 18, "amp": 18, "nbsp": 18, "lowercase_al": 18, "lowercas": 18, "don": 18, "usual": 18, "nuanc": 18, "capit": 18, "merge_wgt": 18, "em_sz": 18, "wgt": 18, "itos_pr": 18, "itos_new": 18, "insert": 18, "vocab": 18, "updat": 18, "merg": 18, "randn": 18, "\u0e1b\u0e25\u0e32": 18, "tensor": 18, "5952": 18, "4453": 18, "0011": 18, "encoder_dp": 18, "decod": 18, "process_thai": 18, "pre_rul": 18, "reorder_vowel": [18, 19], "spec_add_spac": 18, "rm_useless_spac": 18, "rm_useless_newlin": 18, "rm_bracket": 18, "replace_url": 18, "replace_rep_nonum": 18, "tok_func": 18, "bound": 18, "post_rul": 18, "ungroup_emoji": 18, "replace_wrep_post_nonum": 18, "spars": [18, 21], "\u0e32\u0e19\u0e19\u0e19\u0e19\u0e19": 18, "\u0e19\u0e32\u0e19\u0e19\u0e32\u0e19\u0e19\u0e32\u0e19": 18, "xxrep": 18, "xxwrep": 18, "\u0e19\u0e32\u0e19": 18, "modifi": [18, 19], "arug": 18, "replace_rep_aft": 18, "replace_wrep_post": 18, "bracket": 18, "artifact": 18, "bag": 18, "done": 18, "prevent": 18, "\u0e2d\u0e22\u0e22\u0e22\u0e22\u0e22\u0e22\u0e22\u0e22": 18, "becom": 18, "retain": 18, "counter": [18, 19], "\u0e01\u0e32\u0e32\u0e32\u0e32\u0e32\u0e32\u0e32": 18, "\u0e01\u0e32xxrep7": 18, "reptit": 18, "replace_wrep": 18, "front": [18, 19], "ungroup": 18, "zero": [18, 19, 28], "width": [18, 19], "joiner": [18, 19], "zvj": 18, "emoji": [18, 19], "emojipedia": 18, "zwj": 18, "convers": 19, "arabic_digit_to_thai_digit": 19, "arab": 19, "digit": 19, "\u0e53": 19, "\u0e51\u0e50": 19, "\u0e52": 19, "\u0e19\u0e08\u0e33\u0e19\u0e27\u0e19": 19, "123": 19, "\u0e51\u0e52\u0e53": 19, "\u0e54\u0e50\u0e50": 19, "\u0e52\u0e55": 19, "bahttext": 19, "suffix": 19, "baht": 19, "fix": [19, 27], "place": 19, "fit": 19, "\u0e2a\u0e15\u0e32\u0e07\u0e04": 19, "satang": 19, "microsoft": [19, 27], "excel": 19, "currenc": 19, "amount": 19, "\u0e07\u0e1a\u0e32\u0e17\u0e16": 19, "\u0e1a\u0e40\u0e2d": 19, "\u0e14\u0e1a\u0e32\u0e17\u0e16": 19, "200": 19, "\u0e2a\u0e2d\u0e07\u0e23": 19, "\u0e2d\u0e22\u0e1a\u0e32\u0e17\u0e16": 19, "convert_year": 19, "src": 19, "buddhist": 19, "calendar": 19, "anno": 19, "domini": 19, "rattanakosin": 19, "era": 19, "ah": 19, "hejira": 19, "warn": 19, "properli": 19, "1941": 19, "becaus": [19, 26], "travel": 19, "historian": 19, "collat": 19, "revers": 19, "almost": 19, "symbol": 19, "ascend": 19, "\u0e44\u0e01": 19, "\u0e01\u0e32\u0e25": 19, "count_thai_char": 19, "count": 19, "conson": 19, "lead_vowel": 19, "follow_vowel": 19, "above_vowel": 19, "below_vowel": 19, "tonemark": 19, "sign": 19, "thai_digit": 19, "non_thai": 19, "\u0e17\u0e14\u0e2a\u0e2d\u0e1a\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22": 19, "countthai": 19, "ignore_char": 19, "x0b": 19, "x0c0123456789": 19, "proport": 19, "puntuat": 19, "percent": 19, "\u0e44\u0e17\u0e22\u0e40\u0e2d": 19, "\u0e19\u0e41\u0e2d\u0e25\u0e1e": 19, "\u0e07\u0e32\u0e19": [19, 22, 25], "digit_to_text": 19, "\u0e54": 19, "display_thai_char": 19, "ch": 19, "underscor": 19, "high": 19, "eas": 19, "readabl": 19, "emoji_to_thai": 19, "delimit": 19, "\u0e08\u0e30\u0e21\u0e32\u0e19": 19, "\u0e07\u0e23\u0e16\u0e40\u0e21\u0e25": 19, "\u0e2d\u0e19\u0e1c\u0e21\u0e01": 19, "\u0e19\u0e30\u0e04\u0e23": 19, "\u0e43\u0e01\u0e25": 19, "\u0e14\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e0a\u0e19\u0e14": 19, "\u0e21\u0e22": 19, "\u0e07\u0e1f": 19, "\u0e27\u0e02": 19, "\u0e32\u0e27\u0e2d\u0e22\u0e32\u0e01\u0e01": 19, "\u0e19\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e0d": 19, "\u0e2d\u0e18\u0e07\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e44\u0e17\u0e22": 19, "\u0e18\u0e07_\u0e44\u0e17\u0e22": 19, "eng_to_thai": 19, "incorrectli": 19, "u": 19, "qwerti": 19, "keyboard": 19, "layout": 19, "intend": 19, "kedmane": 19, "incorrect": 19, "intention": 19, "\u0e18\u0e19\u0e32\u0e04\u0e32\u0e23\u0e41\u0e2b": 19, "\u0e07\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e44\u0e17\u0e22": 19, "got": 19, "tok8kicsj": 19, "xitgmlwmp": 19, "find_keyword": 19, "word_list": 19, "mininum": 19, "pair": 19, "raw": 19, "\u0e25\u0e32\u0e22\u0e25": 19, "\u0e01\u0e29\u0e13": 19, "\u0e01\u0e29\u0e23": 19, "\u0e01\u0e29\u0e23\u0e41\u0e25\u0e30": 19, "ipa_to_rtg": 19, "kluaj": 19, "kluai": 19, "is_native_thai": 19, "\u0e04\u0e33\u0e44\u0e17\u0e22\u0e41\u0e17": 19, "simpl": 19, "cannot": 19, "entir": 19, "reliabl": 19, "avocado": 19, "\u0e21\u0e30\u0e21": 19, "\u0e27\u0e07": 19, "\u0e15\u0e30\u0e27": 19, "\u0e22\u0e32\u0e20\u0e23\u0e13": 19, "isthai": 19, "\u0e01\u0e32\u0e25\u0e40\u0e27\u0e25\u0e32": 19, "66": 19, "01234567890": 19, "isthaichar": 19, "characttr": 19, "kai": 19, "\u0e55": 19, "five": 19, "maiyamok": 19, "\u0e01\u0e46\u0e0a\u0e2d\u0e1a\u0e44\u0e1b\u0e42\u0e23\u0e07\u0e40\u0e23": 19, "\u0e17\u0e33\u0e44\u0e21": 19, "\u0e17\u0e33": [19, 25], "nectec_to_ipa": 19, "nectec": 19, "kl": 19, "uua": 19, "pornpimon": 19, "palingoon": 19, "sumonma": 19, "thatphithakkul": 19, "chapter": 19, "handbook": 19, "electron": 19, "1st": 19, "ed": 19, "122": 19, "56": 19, "reorder": 19, "dangl": 19, "remove_zw": 19, "remove_dup_spac": 19, "remove_repeat_vowel": 19, "remove_dangl": 19, "those": 19, "unicodedata": 19, "fule": 19, "\u0e40\u0e40\u0e1b\u0e25\u0e01": 19, "sara": 19, "\u0e19\u0e32\u0e19\u0e32\u0e32\u0e32": 19, "\u0e19\u0e32\u0e19\u0e32": 19, "now_reign_year": 19, "reign": 19, "10th": 19, "chakri": 19, "dynasti": 19, "reign_year": 19, "\u0e0a\u0e01\u0e32\u0e25\u0e1b": 19, "\u0e0a\u0e01\u0e32\u0e23\u0e1b": 19, "num_to_thaiword": 19, "integ": 19, "rank": 19, "exclude_stopword": 19, "frequeci": 19, "reign_year_to_ad": 19, "reigh": 19, "7th": 19, "4th": 19, "2019": 19, "rama": 19, "ix": 19, "1946": 19, "typo": 19, "especi": 19, "visual": [19, 27], "who": 19, "accident": 19, "abov": 19, "AND": 19, "sure": 19, "doubl": 19, "ae": 19, "remove_tone_ipa": 19, "delet": 19, "la\u02d0": 19, "maj": 19, "remove_tonemark": 19, "four": 19, "down": [19, 26], "\u0e40\u0e2d\u0e01": 19, "fall": 19, "\u0e42\u0e17": 19, "rise": 19, "\u0e15\u0e27\u0e32": 19, "wrong": 19, "mistak": 19, "\u0e2a\u0e2d\u0e07\u0e1e": 19, "\u0e19\u0e2b\u0e19": 19, "\u0e07\u0e23": 19, "\u0e2d\u0e22\u0e2a": 19, "\u0e1a\u0e40\u0e08": 19, "\u0e32\u0e19\u0e2a": 19, "\u0e41\u0e2a\u0e19\u0e41\u0e1b\u0e14\u0e2b\u0e21": 19, "\u0e19\u0e2a\u0e32\u0e21\u0e1e": 19, "\u0e19\u0e2b\u0e01\u0e23": 19, "\u0e07\u0e23\u0e2d\u0e22\u0e2a": 19, "\u0e14\u0e25\u0e32\u0e19\u0e2a": 19, "\u0e19\u0e2b\u0e01\u0e23\u0e2d\u0e22\u0e2a": 19, "visibl": 19, "caus": 19, "unexpect": 19, "view": 19, "robust": 19, "zwsp": 19, "zwjp": 19, "logic": 19, "nikhahit": 19, "aa": 19, "am": 19, "sound_syl": 19, "live": 19, "\u0e40\u0e25\u0e02": 19, "syllable_length": 19, "short": 19, "\u0e04\u0e30": 19, "syllable_open_close_detector": 19, "close": 19, "detector": 19, "text_to_arabic_digit": 19, "\u0e41\u0e1b\u0e14": 19, "text_to_num": 19, "\u0e2d\u0e22\u0e41\u0e1b\u0e14\u0e2a": 19, "\u0e1a\u0e08": 19, "\u0e14\u0e40\u0e01": 19, "\u0e32\u0e2b": 19, "\u0e32\u0e1a\u0e32\u0e17\u0e19": 19, "\u0e2d\u0e08\u0e33\u0e19\u0e27\u0e19\u0e17": 19, "980": 19, "\u0e1a\u0e25": 19, "\u0e32\u0e19\u0e2a\u0e2d\u0e07\u0e2b\u0e21": 19, "\u0e07\u0e1e": 19, "\u0e19\u0e41\u0e1b\u0e14\u0e23": 19, "\u0e1a\u0e40\u0e01": [19, 22], "\u0e32\u0e1a\u0e32\u0e17": 19, "10021889": 19, "text_to_thai_digit": 19, "\u0e50": 19, "\u0e58": 19, "\u0e59": 19, "thai_digit_to_arabic_digit": 19, "thai_strftim": 19, "dt_obj": 19, "datetim": 19, "fmt": 19, "y": 19, "thaidigit": 19, "direct": 19, "datatim": 19, "strrftime": 19, "weekdai": 19, "\u0e1e\u0e24": 19, "\u0e19\u0e08": 19, "\u0e07\u0e04\u0e32\u0e23": 19, "\u0e19\u0e40\u0e2a\u0e32\u0e23": 19, "\u0e19\u0e2d\u0e32\u0e17": 19, "month": 19, "\u0e21\u0e01\u0e23\u0e32\u0e04\u0e21": 19, "\u0e21\u0e20\u0e32\u0e1e": 19, "\u0e1e\u0e24\u0e28\u0e08": 19, "\u0e01\u0e32\u0e22\u0e19": 19, "\u0e19\u0e27\u0e32\u0e04\u0e21": 19, "centuri": 19, "2556": 19, "2410": 19, "represent": [19, 21], "2519": 19, "2562": 19, "27": [19, 20, 23], "2555": 19, "pass": 19, "strftime": 19, "BE": 19, "543": 19, "certainli": 19, "dai": 19, "meant": 19, "interrim": 19, "solut": 19, "sinc": 19, "th_th": 19, "setlocal": 19, "lc_time": 19, "try": [19, 27], "platform": 19, "independ": 19, "extent": 19, "extens": 19, "posix": 19, "bsd": 19, "gnu": 19, "libc": 19, "strptime": 19, "behavior": 19, "cplusplu": 19, "ctime": 19, "metacpan": 19, "pod": 19, "linux": 19, "die": 19, "net": 19, "man": 19, "openbsd": 19, "freebsd": 19, "unix": 19, "page": [19, 23], "maco": 19, "appl": 19, "archiv": 19, "conceptu": 19, "manpages_iphoneo": 19, "man3": 19, "php": 19, "secur": 19, "manual": 19, "javascript": 19, "samsonj": 19, "quick": [19, 26], "instantiatetd": 19, "datetime_obj": 19, "hour": 19, "minut": 19, "59": 19, "microsecond": 19, "09": 19, "\u0e19\u0e32\u0e22\u0e19": 19, "pad": 19, "62": [19, 27], "_d": 19, "0d": 19, "\u0e19\u0e32\u0e2c": 19, "\u0e19\u0e32\u0e17": 19, "\u0e55\u0e59": 19, "thai_strptim": 19, "add_year": 19, "tzinfo": 19, "backport": 19, "zoneinfo": 19, "asia": 19, "bangkok": 19, "isanno": 19, "31": 19, "2566": 19, "2565": 19, "thai_to_eng": 19, "bank": 19, "\u0e1f": [19, 25], "\u0e1f\u0e23\u0e2a\u0e1f": 19, "thai_word_tone_detector": 19, "thaiword_to_d": 19, "\u0e1e\u0e23": [19, 21], "tomorrow": 19, "thaiword_to_num": 19, "actual": 19, "correspond": 19, "\u0e2a\u0e2d\u0e07\u0e25": 19, "\u0e32\u0e19\u0e2a\u0e32\u0e21\u0e41\u0e2a\u0e19\u0e2b\u0e01\u0e23": 19, "\u0e1a\u0e2a\u0e2d\u0e07": 19, "2300612": 19, "thaiword_to_tim": 19, "\u0e32\u0e22\u0e42\u0e21\u0e07\u0e04\u0e23": 19, "13": [19, 27], "time_to_thaiword": 19, "time_data": 19, "24h": 19, "24": 19, "clock": 19, "6h": 19, "m6h": 19, "alwai": 19, "\u0e41\u0e1b\u0e14\u0e19\u0e32\u0e2c": 19, "\u0e01\u0e32\u0e2a": 19, "\u0e14\u0e19\u0e32\u0e17": 19, "\u0e2a\u0e2d\u0e07\u0e42\u0e21\u0e07\u0e40\u0e0a": 19, "\u0e41\u0e1b\u0e14\u0e42\u0e21\u0e07\u0e2a": 19, "\u0e2b\u0e01\u0e42\u0e21\u0e07\u0e04\u0e23": 19, "\u0e1a\u0e2a\u0e2d\u0e07\u0e19\u0e32\u0e2c": 19, "\u0e01\u0e32\u0e2a\u0e32\u0e21\u0e19\u0e32\u0e17": 19, "tis620_to_utf8": 19, "ti": 19, "620": 19, "\u00e3\u00f0": 19, "\u00e3\u00e7": 19, "\u00ed\u00f8\u00b5\u00ea\u00f2\u00eb": 19, "\u00e3\u00e3\u00e1": 19, "\u0e01\u0e23\u0e30\u0e17\u0e23\u0e27\u0e07\u0e2d": 19, "\u0e15\u0e2a\u0e32\u0e2b\u0e01\u0e23\u0e23\u0e21": 19, "tone_detector": 19, "words_to_num": 19, "spell_word": 19, "spell_syl": 19, "\u0e21\u0e2d": 19, "\u0e27\u0e2d": 19, "\u0e41\u0e2d": 19, "\u0e04\u0e2d": 19, "\u0e14\u0e2d": 19, "children": 19, "noth": 19, "finetun": 20, "thai2transform": 20, "speed": 20, "benchmark": [20, 23, 25, 27], "89": 20, "312": 20, "64": [20, 27], "65": 20, "namedentityrecognit": 20, "power": 20, "dataset_nam": 20, "grouped_ent": 20, "lowphansirikul": [20, 23], "polpanuma": [20, 23], "jantrakulchai": 20, "nutanong": 20, "210109635": 20, "internet": 20, "jan": 20, "feb": 20, "ab": 20, "2101": 20, "09635": 20, "gensim": 21, "wordvector": 21, "thai2fit_wv": [21, 25], "v0": 21, "ltw2v_v1": 21, "0_15_window": 21, "0_5_window": 21, "load_wordvector": 21, "get_model": 21, "keyedvector": 21, "word2veckeyedvector": 21, "doesnt_match": 21, "mostli": 21, "unrel": 21, "rais": 21, "keyerror": 21, "vocabulari": 21, "strt": 21, "\u0e01\u0e44\u0e17\u0e22": 21, "food": 21, "meal": 21, "\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e40\u0e0a": 21, "\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e40\u0e17": 21, "\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e40\u0e22": 21, "wv": 21, "vehicl": 21, "occup": 21, "\u0e44\u0e0b\u0e19": 21, "\u0e40\u0e19\u0e2d\u0e23": 21, "\u0e1e\u0e19": 21, "\u0e01\u0e07\u0e32\u0e19\u0e40\u0e07": 21, "\u0e19\u0e40\u0e14": 21, "\u0e2b\u0e21\u0e2d": 21, "most_similar_cosmul": 21, "omer": 21, "levi": 21, "yoav": 21, "goldberg": 21, "omerlevy_yoavgoldberg_2014": 21, "directli": [21, 25, 27], "substract": 21, "most_similar": 21, "list_posit": 21, "list_neg": 21, "\u0e25\u0e33\u0e19": 21, "8206598162651062": 21, "\u0e17\u0e30\u0e40\u0e25\u0e2a\u0e32\u0e1a": 21, "775945782661438": 21, "\u0e21\u0e19": 21, "7490593194961548": 21, "\u0e04\u0e25\u0e2d\u0e07": 21, "7471904754638672": 21, "\u0e1b\u0e32\u0e01\u0e41\u0e21": 21, "7354257106781006": 21, "\u0e07\u0e41\u0e21": 21, "7120099067687988": 21, "\u0e17\u0e30\u0e40\u0e25": 21, "7030453681945801": 21, "\u0e21\u0e41\u0e21": 21, "7015200257301331": 21, "\u0e41\u0e2b\u0e25": 21, "6997432112693787": 21, "6960948705673218": 21, "\u0e10\u0e21\u0e19\u0e15\u0e23": 21, "\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28": 21, "\u0e23\u0e2d\u0e07\u0e19\u0e32\u0e22\u0e01\u0e23": 21, "2730445861816406": 21, "\u0e40\u0e2d\u0e01\u0e2d": 21, "\u0e04\u0e23\u0e23\u0e32\u0e0a\u0e17": 21, "26500266790390015": 21, "\u0e19\u0e32\u0e22\u0e01\u0e23": 21, "2649088203907013": 21, "\u0e32\u0e23\u0e32\u0e0a\u0e01\u0e32\u0e23\u0e08": 21, "\u0e07\u0e2b\u0e27": 21, "25119125843048096": 21, "\u0e32\u0e01\u0e32\u0e23": 21, "2510434687137604": 21, "\u0e40\u0e25\u0e02\u0e32\u0e18": 21, "24824175238609314": 21, "2453523576259613": 21, "\u0e1b\u0e23\u0e30\u0e18\u0e32\u0e19\u0e01\u0e23\u0e23\u0e21\u0e01\u0e32\u0e23": 21, "24147476255893707": 21, "\u0e23\u0e2d\u0e07\u0e1b\u0e23\u0e30\u0e18\u0e32\u0e19": 21, "24123257398605347": 21, "\u0e2a\u0e21\u0e32\u0e0a": 21, "\u0e2a\u0e20\u0e32": 21, "2405330240726471": 21, "\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e08": 21, "22022421658039093": 21, "\u0e40\u0e01\u0e32\u0e2b\u0e25": 21, "2196873426437378": 21, "\u0e2a\u0e2b\u0e23": 21, "\u0e10\u0e2d\u0e40\u0e21\u0e23": 21, "21660110354423523": 21, "\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e0d": 21, "21205860376358032": 21, "\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e44\u0e17\u0e22": 21, "21159221231937408": 21, "20321202278137207": 21, "\u0e07\u0e01\u0e24\u0e29": 21, "19610872864723206": 21, "\u0e2e": 21, "\u0e2d\u0e07\u0e01\u0e07": 21, "1928885132074356": 21, "\u0e1d\u0e23": 21, "\u0e07\u0e40\u0e28\u0e2a": 21, "18383873999118805": 21, "\u0e1e\u0e21": 21, "18369348347187042": 21, "3278159201145172": 21, "3201899230480194": 21, "31755179166793823": 21, "30845439434051514": 21, "306713730096817": 21, "3003999888896942": 21, "2995176911354065": 21, "\u0e04\u0e19\u0e44\u0e17\u0e22": 21, "2885020673274994": 21, "\u0e40\u0e27": [21, 22], "\u0e22\u0e14\u0e19\u0e32\u0e21": 21, "2878379821777344": 21, "\u0e0a\u0e32\u0e27\u0e44\u0e17\u0e22": 21, "28480708599090576": 21, "\u0e40\u0e21\u0e19": 21, "\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e44\u0e17\u0e22": 21, "computa": 21, "cosin": 21, "consin": 21, "\u0e23\u0e16\u0e44\u0e1f": 21, "\u0e23\u0e16\u0e44\u0e1f\u0e1f": 21, "electr": 21, "43387136": 21, "\u0e2d\u0e14\u0e32\u0e27": 21, "leopard": 21, "04300258": 21, "sentence_vector": 21, "use_mean": 21, "aggregatesd": 21, "calul": 21, "summat": 21, "\u0e27\u0e19\u0e40\u0e2a": 21, "\u0e22\u0e27\u0e40\u0e02": 21, "\u0e14\u0e41\u0e04\u0e27": 21, "\u0e43\u0e19\u0e1b": 21, "735": 21, "meanthod": 21, "00421414": 21, "08881307": 21, "05081136": 21, "05632929": 21, "06607185": 21, "03059357": 21, "113882": 21, "00074836": 21, "05035743": 21, "02914307": 21, "02893357": 21, "11327957": 21, "04562086": 21, "05015393": 21, "11641257": 21, "32304936": 21, "05054322": 21, "03639471": 21, "06531371": 21, "05048079": 21, "05899798": 21, "24338295": 21, "711359": 21, "78861002": 21, "92500597": 21, "42831": 21, "59434797": 21, "01047703": 21, "705004": 21, "40800299": 21, "40506999": 21, "58591403": 21, "63869202": 21, "702155": 21, "62977601": 21, "52269109": 21, "70760502": 21, "50952601": 21, "914392": 21, "70673105": 21, "2014": 21, "regular": 21, "explicit": 21, "get_sens": 22, "custom_token": 22, "idea": 22, "awar": 22, "unsupervis": 22, "paraphras": 22, "mpnet": 22, "\u0e40\u0e02\u0e32\u0e01\u0e33\u0e25": 22, "\u0e07\u0e2d\u0e1a\u0e02\u0e19\u0e21\u0e04": 22, "\u0e01\u0e01": 22, "\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21\u0e04\u0e2d\u0e21\u0e1e": 22, "\u0e27\u0e40\u0e15\u0e2d\u0e23": 22, "\u0e43\u0e19\u0e17\u0e32\u0e07\u0e2d": 22, "\u0e15\u0e2a\u0e33\u0e2b\u0e23": 22, "\u0e1a\u0e02": 22, "\u0e25\u0e02\u0e2d\u0e07\u0e1c": 22, "0974416732788086": 22, "\u0e2d\u0e02\u0e19\u0e21\u0e0a\u0e19": 22, "\u0e14\u0e2b\u0e19": 22, "\u0e07\u0e08\u0e33\u0e1e\u0e27\u0e01\u0e02\u0e19\u0e21\u0e40\u0e04": 22, "\u0e17\u0e33\u0e40\u0e1b": 22, "\u0e19\u0e40\u0e25": 22, "\u0e41\u0e1a\u0e19": 22, "\u0e27\u0e2d\u0e1a\u0e43\u0e2b": 22, "09319090843200684": 22, "\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e04": 22, "\u0e43\u0e19\u0e01\u0e32\u0e23\u0e17\u0e33\u0e07\u0e32\u0e19": 22, "1005704402923584": 22, "12473666667938232": 22, "faq": 23, "command": [23, 27], "tutori": 23, "augment": [23, 27], "chat": 23, "coref": 23, "el": [23, 27], "khave": 23, "soundex": [23, 25], "tool": [23, 27], "translat": [23, 26, 27], "ulmfit": [23, 27], "word_vector": 23, "wsd": [23, 27], "index": 23, "modul": 23, "your": [23, 27], "project": [23, 28], "charin": 23, "arthit": 23, "suriyawongkul": 23, "pattarawat": 23, "chormai": 23, "jun": 23, "zenodo": 23, "doi": 23, "5281": 23, "3519354": 23, "maintain": 23, "team": 23, "frequent": 24, "pythainlp": [24, 25, 26, 27, 28], "thainlp": [25, 27], "nw": 25, "attacut": [25, 27], "\u0e2a\u0e20\u0e32\u0e1e\u0e01\u0e32\u0e23\u0e08": 25, "\u0e32\u0e07\u0e41\u0e25\u0e30\u0e2a\u0e20\u0e32\u0e1e\u0e01\u0e32\u0e23\u0e17\u0e33\u0e07\u0e32\u0e19": 25, "\u0e2a\u0e20\u0e32\u0e1e": 25, "\u0e01\u0e32\u0e23\u0e17\u0e33\u0e07\u0e32\u0e19": 25, "\u0e20\u0e32": 25, "\u0e07\u0e32": 25, "\u0e41\u0e23\u0e07\u0e07\u0e32\u0e19\u0e01\u0e30\u0e14": 25, "\u0e19\u0e40\u0e1f": 25, "\u0e07\u0e2b\u0e21": 25, "\u0e19\u0e43\u0e19\u0e04\u0e33": 25, "\u0e19\u0e21": 25, "\u0e40\u0e04\u0e2d\u0e23": 25, "\u0e41\u0e23\u0e07\u0e07\u0e32\u0e19": 25, "\u0e01\u0e30": 25, "\u0e04\u0e33": 25, "\u0e1c\u0e25": 25, "\u0e2d\u0e1e": 25, "\u0e01\u0e40\u0e09": 25, "\u0e2b\u0e25\u0e32\u0e22\u0e1b": 25, "\u0e32\u0e19\u0e21\u0e32": 25, "\u0e0a\u0e32\u0e27\u0e0a": 25, "\u0e21\u0e0a\u0e19\u0e42\u0e04\u0e01\u0e22\u0e32\u0e27\u0e2b\u0e25\u0e32\u0e22\u0e04\u0e19\u0e44\u0e14": 25, "\u0e1e\u0e32\u0e01": 25, "\u0e32\u0e22\u0e2d\u0e2d\u0e01": 25, "\u0e32\u0e07\u0e01": 25, "\u0e22\u0e0a": 25, "\u0e1a\u0e32\u0e07\u0e04\u0e19\u0e16": 25, "\u0e01\u0e08\u0e33\u0e04": 25, "\u0e01\u0e43\u0e19\u0e02": 25, "\u0e01\u0e1b": 25, "\u0e32\u0e2b\u0e23": 25, "\u0e2d\u0e41\u0e21": 25, "\u0e01\u0e23\u0e30\u0e17": 25, "\u0e0d\u0e2b\u0e32\u0e22": 25, "tagg": 25, "\u0e40\u0e1c": 25, "\u0e27330000": 25, "\u0e274000": 25, "manag": 25, "rm": 25, "user1": 25, "crfcut": 25, "g2p": 25, "36": 25, "wisesight": 25, "1000": 25, "deepcut": 25, "against": 25, "993": 25, "total": 25, "char_level": 25, "tp": 25, "17654": 25, "0000": 25, "fn": 25, "1153": 25, "tn": 25, "50755": 25, "fp": 25, "1478": 25, "9227": 25, "9387": 25, "word_level": 25, "total_words_in_sampl": 25, "19132": 25, "total_words_in_ref_sampl": 25, "18807": 25, "correctly_tokenised_word": 25, "15637": 25, "8173": 25, "8314": 25, "\u0e40\u0e23\u0e32\u0e23": 26, "\u0e01\u0e20\u0e32\u0e29\u0e32\u0e16": 26, "\u0e20\u0e32\u0e29\u0e32\u0e16": 26, "\u0e40\u0e04": 26, "histor": 26, "face": 26, "lot": 26, "challeng": 26, "arguabl": 26, "biggest": 26, "problem": [26, 27], "lack": 26, "eo": 26, "prong": 26, "comma": 26, "period": 26, "habit": 26, "connector": 26, "etc": [26, 27], "often": 26, "even": 26, "decid": 26, "boil": 26, "asian": 26, "degre": 26, "extrem": 26, "potato": 26, "pomm": 26, "de": 26, "terr": 26, "best": 26, "\u0e15\u0e32": 26, "\u0e01\u0e25\u0e21": 26, "\u0e15\u0e32\u0e01": 26, "\u0e25\u0e21": 26, "As": 26, "recent": 26, "captur": 26, "seem": 26, "pois": 26, "overcom": 26, "stabl": 27, "pip": 27, "upgrad": 27, "extra": 27, "extra1": 27, "extra2": 27, "ml": 27, "thai2rom": 27, "learnt": 27, "roman": 27, "umlfit": 27, "oskut": 27, "nlpo3": 27, "esolut": 27, "everyth": 27, "setup": 27, "py": 27, "built": 27, "wheel": 27, "lfd": 27, "uci": 27, "gohlk": 27, "pythonlib": 27, "architectur": 27, "win32": 27, "amd64": 27, "xxx": 27, "cp36": 27, "cp36m": 27, "whl": 27, "technic": 27, "skill": 27, "thing": 27, "accommod": 27, "icu_vers": 27, "obvious": 27, "good": 27, "side": 27, "optim": 27, "better": 27, "databas": 27, "store": 27, "automat": 27, "pythainlp_read_mod": 27, "q": 27, "crfsuit": 27, "executor": 27, "permissionerror": 27, "deni": 27, "corpora": 28, "creativ": 28, "dedic": 28, "cc0": 28, "advis": 28}, "objects": {"pythainlp.augment": [[0, 0, 1, "", "WordNetAug"]], "pythainlp.augment.WordNetAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "find_synonyms"]], "pythainlp.augment.lm": [[0, 0, 1, "", "FastTextAug"], [0, 0, 1, "", "Thai2transformersAug"]], "pythainlp.augment.lm.FastTextAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "modify_sent"], [0, 1, 1, "", "tokenize"]], "pythainlp.augment.lm.Thai2transformersAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "generate"]], "pythainlp.augment.word2vec": [[0, 0, 1, "", "LTW2VAug"], [0, 0, 1, "", "Thai2fitAug"], [0, 0, 1, "", "Word2VecAug"]], "pythainlp.augment.word2vec.LTW2VAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "load_w2v"], [0, 1, 1, "", "tokenizer"]], "pythainlp.augment.word2vec.Thai2fitAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "load_w2v"], [0, 1, 1, "", "tokenizer"]], "pythainlp.augment.word2vec.Word2VecAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "modify_sent"]], "pythainlp.augment.word2vec.bpemb_wv": [[0, 0, 1, "", "BPEmbAug"]], "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "load_w2v"], [0, 1, 1, "", "tokenizer"]], "pythainlp.benchmarks.word_tokenization": [[1, 2, 1, "", "benchmark"], [1, 2, 1, "", "compute_stats"], [1, 2, 1, "", "preprocessing"]], "pythainlp.chat": [[2, 0, 1, "", "ChatBotModel"]], "pythainlp.chat.ChatBotModel": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "chat"], [2, 1, 1, "", "load_model"], [2, 1, 1, "", "reset_chat"]], "pythainlp.cls": [[3, 0, 1, "", "GzipModel"]], "pythainlp.cls.GzipModel": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "predict"], [3, 1, 1, "", "train"]], "pythainlp.coref": [[4, 2, 1, "", "coreference_resolution"]], "pythainlp.corpus.conceptnet": [[5, 2, 1, "", "edges"]], "pythainlp.corpus": [[5, 2, 1, "", "countries"], [5, 2, 1, "", "download"], [5, 2, 1, "", "get_corpus"], [5, 2, 1, "", "get_corpus_db"], [5, 2, 1, "", "get_corpus_db_detail"], [5, 2, 1, "", "get_corpus_default_db"], [5, 2, 1, "", "get_corpus_path"], [5, 2, 1, "", "provinces"], [5, 2, 1, "", "remove"], [5, 2, 1, "", "thai_dict"], [5, 2, 1, "", "thai_family_names"], [5, 2, 1, "", "thai_female_names"], [5, 2, 1, "", "thai_male_names"], [5, 2, 1, "", "thai_negations"], [5, 2, 1, "", "thai_orst_words"], [5, 2, 1, "", "thai_stopwords"], [5, 2, 1, "", "thai_syllables"], [5, 2, 1, "", "thai_words"], [5, 2, 1, "", "thai_wsd_dict"]], "pythainlp.corpus.oscar": [[5, 2, 1, "", "unigram_word_freqs"], [5, 2, 1, "", "word_freqs"]], "pythainlp.corpus.th_en_translit": [[5, 2, 1, "", "get_transliteration_dict"]], "pythainlp.corpus.tnc": [[5, 2, 1, "", "bigram_word_freqs"], [5, 2, 1, "", "trigram_word_freqs"], [5, 2, 1, "", "unigram_word_freqs"], [5, 2, 1, "", "word_freqs"]], "pythainlp.corpus.ttc": [[5, 2, 1, "", "unigram_word_freqs"], [5, 2, 1, "", "word_freqs"]], "pythainlp.corpus.util": [[5, 2, 1, "", "find_badwords"], [5, 2, 1, "", "revise_newmm_default_wordset"], [5, 2, 1, "", "revise_wordset"]], "pythainlp.corpus.wordnet": [[5, 2, 1, "", "all_lemma_names"], [5, 2, 1, "", "all_synsets"], [5, 2, 1, "", "custom_lemmas"], [5, 2, 1, "", "langs"], [5, 2, 1, "", "lch_similarity"], [5, 2, 1, "", "lemma"], [5, 2, 1, "", "lemma_from_key"], [5, 2, 1, "", "lemmas"], [5, 2, 1, "", "morphy"], [5, 2, 1, "", "path_similarity"], [5, 2, 1, "", "synset"], [5, 2, 1, "", "synsets"], [5, 2, 1, "", "wup_similarity"]], "pythainlp.el": [[6, 0, 1, "", "EntityLinker"]], "pythainlp.el.EntityLinker": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "get_el"]], "pythainlp.generate": [[7, 0, 1, "", "Bigram"], [7, 0, 1, "", "Trigram"], [7, 0, 1, "", "Unigram"]], "pythainlp.generate.Bigram": [[7, 1, 1, "", "__init__"], [7, 1, 1, "", "gen_sentence"], [7, 1, 1, "", "prob"]], "pythainlp.generate.Trigram": [[7, 1, 1, "", "__init__"], [7, 1, 1, "", "gen_sentence"], [7, 1, 1, "", "prob"]], "pythainlp.generate.Unigram": [[7, 1, 1, "", "__init__"], [7, 1, 1, "", "gen_sentence"]], "pythainlp.generate.thai2fit": [[7, 2, 1, "", "gen_sentence"]], "pythainlp.generate.wangchanglm": [[7, 0, 1, "", "WangChanGLM"]], "pythainlp.generate.wangchanglm.WangChanGLM": [[7, 1, 1, "", "__init__"], [7, 1, 1, "", "gen_instruct"], [7, 1, 1, "", "instruct_generate"], [7, 1, 1, "", "is_exclude"], [7, 1, 1, "", "load_model"]], "pythainlp.khavee": [[8, 0, 1, "", "KhaveeVerifier"]], "pythainlp.khavee.KhaveeVerifier": [[8, 3, 1, "", "__dict__"], [8, 1, 1, "", "__init__"], [8, 3, 1, "", "__module__"], [8, 1, 1, "", "check_aek_too"], [8, 1, 1, "", "check_karu_lahu"], [8, 1, 1, "", "check_klon"], [8, 1, 1, "", "check_marttra"], [8, 1, 1, "", "check_sara"], [8, 1, 1, "", "handle_karun_sound_silence"], [8, 1, 1, "", "is_sumpus"]], "pythainlp.parse": [[9, 2, 1, "", "dependency_parsing"]], "pythainlp.soundex": [[10, 2, 1, "", "lk82"], [10, 2, 1, "", "metasound"], [10, 2, 1, "", "prayut_and_somchaip"], [10, 2, 1, "", "soundex"], [10, 2, 1, "", "udom83"]], "pythainlp.soundex.sound": [[10, 2, 1, "", "audio_vector"], [10, 2, 1, "", "word2audio"], [10, 2, 1, "", "word_approximation"]], "pythainlp.spell": [[11, 4, 1, "", "DEFAULT_SPELL_CHECKER"], [11, 0, 1, "", "NorvigSpellChecker"], [11, 2, 1, "", "correct"], [11, 2, 1, "", "correct_sent"], [11, 2, 1, "", "spell"], [11, 2, 1, "", "spell_sent"]], "pythainlp.spell.NorvigSpellChecker": [[11, 3, 1, "", "__dict__"], [11, 1, 1, "", "__init__"], [11, 3, 1, "", "__module__"], [11, 1, 1, "", "correct"], [11, 1, 1, "", "dictionary"], [11, 1, 1, "", "freq"], [11, 1, 1, "", "known"], [11, 1, 1, "", "prob"], [11, 1, 1, "", "spell"]], "pythainlp.summarize": [[12, 2, 1, "", "extract_keywords"], [12, 5, 0, "-", "keybert"], [12, 2, 1, "", "summarize"]], "pythainlp.summarize.keybert": [[12, 0, 1, "id0", "KeyBERT"]], "pythainlp.summarize.keybert.KeyBERT": [[12, 1, 1, "id5", "__init__"], [12, 1, 1, "id9", "embed"], [12, 1, 1, "id6", "extract_keywords"]], "pythainlp.tag": [[13, 0, 1, "", "NER"], [13, 0, 1, "", "NNER"], [13, 2, 1, "", "chunk_parse"], [13, 2, 1, "", "pos_tag"], [13, 2, 1, "", "pos_tag_sents"], [13, 2, 1, "", "tag_provinces"]], "pythainlp.tag.NER": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "load_engine"], [13, 1, 1, "", "tag"]], "pythainlp.tag.NNER": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "load_engine"], [13, 1, 1, "", "tag"]], "pythainlp.tag.thainer": [[13, 0, 1, "", "ThaiNameTagger"]], "pythainlp.tag.thainer.ThaiNameTagger": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "get_ner"]], "pythainlp.tag.tltk": [[13, 2, 1, "", "get_ner"]], "pythainlp.tokenize": [[14, 0, 1, "", "Tokenizer"], [14, 5, 0, "-", "attacut"], [14, 2, 1, "", "clause_tokenize"], [14, 5, 0, "-", "crfcut"], [14, 5, 0, "-", "deepcut"], [14, 5, 0, "-", "etcc"], [14, 5, 0, "-", "longest"], [14, 5, 0, "-", "multi_cut"], [14, 5, 0, "-", "nercut"], [14, 5, 0, "-", "newmm"], [14, 5, 0, "-", "nlpo3"], [14, 5, 0, "-", "oskut"], [14, 2, 1, "", "paragraph_tokenize"], [14, 5, 0, "-", "pyicu"], [14, 5, 0, "-", "sefr_cut"], [14, 2, 1, "", "sent_tokenize"], [14, 2, 1, "", "subword_tokenize"], [14, 5, 0, "-", "tcc"], [14, 5, 0, "-", "thaisumcut"], [14, 2, 1, "", "word_detokenize"], [14, 2, 1, "", "word_tokenize"]], "pythainlp.tokenize.Tokenizer": [[14, 1, 1, "", "__init__"], [14, 1, 1, "", "set_tokenize_engine"], [14, 1, 1, "", "word_tokenize"]], "pythainlp.tokenize.attacut": [[14, 0, 1, "id9", "AttacutTokenizer"], [14, 2, 1, "", "segment"]], "pythainlp.tokenize.attacut.AttacutTokenizer": [[14, 1, 1, "id10", "__init__"], [14, 1, 1, "id11", "tokenize"]], "pythainlp.tokenize.crfcut": [[14, 2, 1, "id0", "extract_features"], [14, 2, 1, "id3", "segment"]], "pythainlp.tokenize.deepcut": [[14, 2, 1, "", "segment"]], "pythainlp.tokenize.etcc": [[14, 2, 1, "id32", "segment"]], "pythainlp.tokenize.longest": [[14, 0, 1, "", "LongestMatchTokenizer"], [14, 2, 1, "id20", "segment"]], "pythainlp.tokenize.longest.LongestMatchTokenizer": [[14, 1, 1, "", "__init__"], [14, 1, 1, "", "tokenize"]], "pythainlp.tokenize.multi_cut": [[14, 0, 1, "", "LatticeString"], [14, 2, 1, "id15", "find_all_segment"], [14, 2, 1, "", "mmcut"], [14, 2, 1, "id14", "segment"]], "pythainlp.tokenize.multi_cut.LatticeString": [[14, 1, 1, "", "__init__"]], "pythainlp.tokenize.nercut": [[14, 2, 1, "id23", "segment"]], "pythainlp.tokenize.newmm": [[14, 2, 1, "id28", "segment"]], "pythainlp.tokenize.nlpo3": [[14, 2, 1, "id17", "load_dict"], [14, 2, 1, "id18", "segment"]], "pythainlp.tokenize.oskut": [[14, 2, 1, "", "segment"]], "pythainlp.tokenize.pyicu": [[14, 2, 1, "", "segment"]], "pythainlp.tokenize.sefr_cut": [[14, 2, 1, "", "segment"]], "pythainlp.tokenize.tcc": [[14, 2, 1, "id29", "segment"], [14, 2, 1, "id30", "tcc"], [14, 2, 1, "id31", "tcc_pos"]], "pythainlp.tokenize.tcc_p": [[14, 2, 1, "", "segment"], [14, 2, 1, "", "tcc"], [14, 2, 1, "", "tcc_pos"]], "pythainlp.tokenize.thaisumcut": [[14, 0, 1, "id6", "ThaiSentenceSegmentor"], [14, 2, 1, "id4", "list_to_string"], [14, 2, 1, "id5", "middle_cut"]], "pythainlp.tokenize.thaisumcut.ThaiSentenceSegmentor": [[14, 1, 1, "id7", "split_into_sentences"]], "pythainlp.tools": [[15, 2, 1, "", "get_full_data_path"], [15, 2, 1, "", "get_pythainlp_data_path"], [15, 2, 1, "", "get_pythainlp_path"]], "pythainlp.tools.misspell": [[15, 2, 1, "", "misspell"]], "pythainlp.translate": [[16, 0, 1, "", "Translate"]], "pythainlp.translate.Translate": [[16, 1, 1, "", "__init__"], [16, 1, 1, "", "load_model"], [16, 1, 1, "", "translate"]], "pythainlp.translate.en_th": [[16, 0, 1, "", "EnThTranslator"], [16, 0, 1, "", "ThEnTranslator"], [16, 2, 1, "", "download_model_all"]], "pythainlp.translate.en_th.EnThTranslator": [[16, 1, 1, "", "__init__"], [16, 1, 1, "", "translate"]], "pythainlp.translate.en_th.ThEnTranslator": [[16, 1, 1, "", "__init__"], [16, 1, 1, "", "translate"]], "pythainlp.translate.th_fr": [[16, 0, 1, "", "ThFrTranslator"]], "pythainlp.translate.th_fr.ThFrTranslator": [[16, 1, 1, "", "__init__"], [16, 1, 1, "", "translate"]], "pythainlp.translate.zh_th": [[16, 0, 1, "", "ThZhTranslator"], [16, 0, 1, "", "ZhThTranslator"]], "pythainlp.translate.zh_th.ThZhTranslator": [[16, 1, 1, "", "__init__"], [16, 1, 1, "", "translate"]], "pythainlp.translate.zh_th.ZhThTranslator": [[16, 1, 1, "", "__init__"], [16, 1, 1, "", "translate"]], "pythainlp.transliterate": [[17, 5, 0, "-", "ipa"], [17, 5, 0, "-", "iso_11940"], [17, 2, 1, "", "pronunciate"], [17, 2, 1, "", "puan"], [17, 5, 0, "-", "pyicu"], [17, 2, 1, "", "romanize"], [17, 2, 1, "", "transliterate"]], "pythainlp.transliterate.ipa": [[17, 2, 1, "id5", "trans_list"], [17, 2, 1, "id4", "transliterate"], [17, 2, 1, "id6", "xsampa_list"]], "pythainlp.transliterate.iso_11940": [[17, 2, 1, "", "transliterate"]], "pythainlp.transliterate.pyicu": [[17, 2, 1, "id0", "transliterate"]], "pythainlp.transliterate.royin": [[17, 5, 0, "-", "romanize"]], "pythainlp.transliterate.thai2rom": [[17, 5, 0, "-", "romanize"]], "pythainlp.transliterate.thaig2p": [[17, 2, 1, "", "transliterate"], [17, 5, 0, "-", "transliterate"]], "pythainlp.transliterate.tltk": [[17, 2, 1, "", "romanize"], [17, 2, 1, "", "tltk_g2p"], [17, 2, 1, "", "tltk_ipa"]], "pythainlp.transliterate.wunsen": [[17, 0, 1, "", "WunsenTransliterate"]], "pythainlp.transliterate.wunsen.WunsenTransliterate": [[17, 1, 1, "", "__init__"], [17, 1, 1, "", "transliterate"]], "pythainlp.ulmfit": [[18, 0, 1, "", "ThaiTokenizer"], [18, 2, 1, "", "document_vector"], [18, 2, 1, "", "fix_html"], [18, 2, 1, "", "lowercase_all"], [18, 2, 1, "", "merge_wgts"], [18, 2, 1, "", "process_thai"], [18, 2, 1, "", "remove_space"], [18, 2, 1, "", "replace_rep_after"], [18, 2, 1, "", "replace_rep_nonum"], [18, 2, 1, "", "replace_wrep_post"], [18, 2, 1, "", "replace_wrep_post_nonum"], [18, 2, 1, "", "rm_brackets"], [18, 2, 1, "", "rm_useless_newlines"], [18, 2, 1, "", "rm_useless_spaces"], [18, 2, 1, "", "spec_add_spaces"], [18, 2, 1, "", "ungroup_emoji"]], "pythainlp.ulmfit.ThaiTokenizer": [[18, 1, 1, "", "__init__"], [18, 1, 1, "", "add_special_cases"], [18, 1, 1, "", "tokenizer"]], "pythainlp.util": [[19, 0, 1, "", "Trie"], [19, 2, 1, "", "arabic_digit_to_thai_digit"], [19, 2, 1, "", "bahttext"], [19, 2, 1, "", "collate"], [19, 2, 1, "", "convert_years"], [19, 2, 1, "", "count_thai_chars"], [19, 2, 1, "", "countthai"], [19, 2, 1, "", "dict_trie"], [19, 2, 1, "", "digit_to_text"], [19, 2, 1, "", "display_thai_char"], [19, 2, 1, "", "emoji_to_thai"], [19, 2, 1, "", "eng_to_thai"], [19, 2, 1, "", "find_keyword"], [19, 2, 1, "", "ipa_to_rtgs"], [19, 2, 1, "", "is_native_thai"], [19, 2, 1, "", "isthai"], [19, 2, 1, "", "isthaichar"], [19, 2, 1, "", "maiyamok"], [19, 2, 1, "", "nectec_to_ipa"], [19, 2, 1, "", "normalize"], [19, 2, 1, "", "now_reign_year"], [19, 2, 1, "", "num_to_thaiword"], [19, 2, 1, "", "rank"], [19, 2, 1, "", "reign_year_to_ad"], [19, 2, 1, "", "remove_dangling"], [19, 2, 1, "", "remove_dup_spaces"], [19, 2, 1, "", "remove_repeat_vowels"], [19, 2, 1, "", "remove_tone_ipa"], [19, 2, 1, "", "remove_tonemark"], [19, 2, 1, "", "remove_zw"], [19, 2, 1, "", "reorder_vowels"], [19, 2, 1, "", "sound_syllable"], [19, 2, 1, "", "syllable_length"], [19, 2, 1, "", "syllable_open_close_detector"], [19, 2, 1, "", "text_to_arabic_digit"], [19, 2, 1, "", "text_to_num"], [19, 2, 1, "", "text_to_thai_digit"], [19, 2, 1, "", "thai_digit_to_arabic_digit"], [19, 2, 1, "", "thai_strftime"], [19, 2, 1, "", "thai_strptime"], [19, 2, 1, "", "thai_to_eng"], [19, 2, 1, "", "thai_word_tone_detector"], [19, 2, 1, "", "thaiword_to_date"], [19, 2, 1, "", "thaiword_to_num"], [19, 2, 1, "", "thaiword_to_time"], [19, 2, 1, "", "time_to_thaiword"], [19, 2, 1, "", "tis620_to_utf8"], [19, 2, 1, "", "tone_detector"], [19, 2, 1, "", "words_to_num"]], "pythainlp.util.Trie": [[19, 0, 1, "", "Node"], [19, 1, 1, "", "__init__"], [19, 1, 1, "", "add"], [19, 1, 1, "", "prefixes"], [19, 1, 1, "", "remove"]], "pythainlp.util.Trie.Node": [[19, 1, 1, "", "__init__"], [19, 3, 1, "", "children"], [19, 3, 1, "", "end"]], "pythainlp.util.spell_words": [[19, 2, 1, "", "spell_syllable"], [19, 2, 1, "", "spell_word"]], "pythainlp.wangchanberta": [[20, 0, 1, "", "NamedEntityRecognition"], [20, 0, 1, "", "ThaiNameTagger"], [20, 2, 1, "", "segment"]], "pythainlp.wangchanberta.NamedEntityRecognition": [[20, 1, 1, "", "__init__"], [20, 1, 1, "", "get_ner"]], "pythainlp.wangchanberta.ThaiNameTagger": [[20, 1, 1, "", "__init__"], [20, 1, 1, "", "get_ner"]], "pythainlp.word_vector": [[21, 0, 1, "", "WordVector"]], "pythainlp.word_vector.WordVector": [[21, 1, 1, "", "__init__"], [21, 1, 1, "", "doesnt_match"], [21, 1, 1, "", "get_model"], [21, 1, 1, "", "load_wordvector"], [21, 1, 1, "", "most_similar_cosmul"], [21, 1, 1, "", "sentence_vectorizer"], [21, 1, 1, "", "similarity"]], "pythainlp.wsd": [[22, 2, 1, "", "get_sense"]], "": [[27, 6, 1, "-", "PYTHAINLP_DATA_DIR"], [27, 6, 1, "-", "PYTHAINLP_READ_MODE"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:data", "5": "py:module", "6": "std:envvar"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "data", "Python data"], "5": ["py", "module", "Python module"], "6": ["std", "envvar", "environment variable"]}, "titleterms": {"pythainlp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "augment": 0, "modul": [0, 1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "benchmark": 1, "token": [1, 14], "qualiti": 1, "chat": 2, "cl": 3, "coref": 4, "corpu": 5, "conceptnet": 5, "tnc": 5, "ttc": 5, "oscar": 5, "util": [5, 19], "wordnet": 5, "definit": 5, "el": 6, "gener": 7, "khave": 8, "pars": 9, "soundex": 10, "refer": [10, 11, 13, 17, 19, 20, 21, 23], "spell": 11, "summar": 12, "keyword": 12, "extract": 12, "engin": [12, 13, 14, 17], "keybert": 12, "tag": 13, "tagger": 13, "perceptron": 13, "unigram": 13, "sentenc": 14, "level": 14, "crfcut": 14, "thaisumcut": 14, "word": 14, "attacut": 14, "deepcut": 14, "multi_cut": 14, "nlpo3": 14, "longest": 14, "pyicu": 14, "nercut": 14, "sefr_cut": 14, "oskut": 14, "newmm": 14, "subword": 14, "tcc": 14, "etcc": 14, "tool": 15, "translat": 16, "transliter": 17, "roman": 17, "thai2rom": 17, "royin": 17, "icu": 17, "ipa": 17, "thaig2p": 17, "tltk": 17, "iso_11940": 17, "ulmfit": 18, "wangchanberta": 20, "word_vector": 21, "depend": 21, "wsd": 22, "document": 23, "note": 23, "packag": 23, "indic": 23, "tabl": 23, "citat": 23, "faq": [24, 27], "command": 25, "line": 25, "get": 26, "start": 26, "tutori": 26, "notebook": 26, "instal": 27, "runtim": 27, "configur": 27, "licens": 28}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"pythainlp.augment": [[0, "pythainlp-augment"]], "Modules": [[0, "modules"], [1, "modules"], [4, "modules"], [5, "modules"], [7, "modules"], [8, "modules"], [9, "modules"], [10, "modules"], [11, "modules"], [12, "modules"], [13, "modules"], [14, "modules"], [15, "modules"], [16, "modules"], [17, "modules"], [18, "modules"], [19, "modules"], [20, "modules"], [21, "modules"], [22, "modules"]], "pythainlp.benchmarks": [[1, "pythainlp-benchmarks"]], "Tokenization": [[1, "tokenization"]], "Quality": [[1, "quality"]], "pythainlp.chat": [[2, "pythainlp-chat"]], "pythainlp.cls": [[3, "pythainlp-cls"]], "pythainlp.coref": [[4, "pythainlp-coref"]], "pythainlp.corpus": [[5, "pythainlp-corpus"]], "ConceptNet": [[5, "conceptnet"]], "TNC": [[5, "tnc"]], "TTC": [[5, "ttc"]], "OSCAR": [[5, "oscar"]], "Util": [[5, "util"]], "WordNet": [[5, "wordnet"]], "Definition": [[5, "definition"]], "pythainlp.el": [[6, "pythainlp-el"]], "pythainlp.generate": [[7, "pythainlp-generate"]], "pythainlp.khavee": [[8, "pythainlp-khavee"]], "pythainlp.parse": [[9, "pythainlp-parse"]], "pythainlp.soundex": [[10, "pythainlp-soundex"]], "References": [[10, "references"], [11, "references"], [13, "references"], [17, "references"], [19, "references"], [20, "references"], [21, "references"]], "pythainlp.spell": [[11, "pythainlp-spell"]], "pythainlp.summarize": [[12, "pythainlp-summarize"]], "Keyword Extraction Engines": [[12, "keyword-extraction-engines"]], "KeyBERT": [[12, "module-pythainlp.summarize.keybert"]], "pythainlp.tag": [[13, "pythainlp-tag"]], "Tagger Engines": [[13, "tagger-engines"]], "perceptron": [[13, "perceptron"]], "unigram": [[13, "unigram"]], "pythainlp.tokenize": [[14, "pythainlp-tokenize"]], "Tokenization Engines": [[14, "tokenization-engines"]], "Sentence level": [[14, "sentence-level"]], "crfcut": [[14, "module-pythainlp.tokenize.crfcut"]], "thaisumcut": [[14, "module-pythainlp.tokenize.thaisumcut"]], "Word level": [[14, "word-level"]], "attacut": [[14, "id8"]], "deepcut": [[14, "id12"]], "multi_cut": [[14, "module-pythainlp.tokenize.multi_cut"]], "nlpo3": [[14, "id16"]], "longest": [[14, "module-pythainlp.tokenize.longest"]], "pyicu": [[14, "id21"]], "nercut": [[14, "module-pythainlp.tokenize.nercut"]], "sefr_cut": [[14, "module-pythainlp.tokenize.sefr_cut"]], "oskut": [[14, "id26"]], "newmm": [[14, "newmm"]], "Subword level": [[14, "subword-level"]], "tcc": [[14, "module-pythainlp.tokenize.tcc"]], "etcc": [[14, "module-pythainlp.tokenize.etcc"]], "pythainlp.tools": [[15, "pythainlp-tools"]], "pythainlp.translate": [[16, "pythainlp-translate"]], "pythainlp.transliterate": [[17, "pythainlp-transliterate"]], "Romanize Engines": [[17, "romanize-engines"]], "thai2rom": [[17, "module-pythainlp.transliterate.thai2rom.romanize"]], "royin": [[17, "module-pythainlp.transliterate.royin.romanize"]], "Transliterate Engines": [[17, "transliterate-engines"]], "icu": [[17, "module-pythainlp.transliterate.pyicu"]], "ipa": [[17, "module-pythainlp.transliterate.ipa"]], "thaig2p": [[17, "module-pythainlp.transliterate.thaig2p.transliterate"]], "tltk": [[17, "id7"]], "iso_11940": [[17, "module-pythainlp.transliterate.iso_11940"]], "pythainlp.ulmfit": [[18, "pythainlp-ulmfit"]], "pythainlp.util": [[19, "pythainlp-util"]], "pythainlp.wangchanberta": [[20, "pythainlp-wangchanberta"]], "pythainlp.word_vector": [[21, "pythainlp-word-vector"]], "Dependencies": [[21, "dependencies"]], "pythainlp.wsd": [[22, "pythainlp-wsd"]], "PyThaiNLP documentation": [[23, "pythainlp-documentation"]], "Notes": [[23, null]], "Package reference:": [[23, null]], "Indices and tables": [[23, "indices-and-tables"]], "Citations": [[23, "citations"]], "FAQ": [[24, "faq"], [27, "faq"]], "Command Line": [[25, "command-line"]], "Getting Started": [[26, "getting-started"]], "Tutorial Notebooks": [[26, "tutorial-notebooks"]], "Installation": [[27, "installation"]], "Runtime Configurations": [[27, "runtime-configurations"]], "License": [[28, "license"]]}, "indexentries": {"bpembaug (class in pythainlp.augment.word2vec.bpemb_wv)": [[0, "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug"]], "fasttextaug (class in pythainlp.augment.lm)": [[0, "pythainlp.augment.lm.FastTextAug"]], "ltw2vaug (class in pythainlp.augment.word2vec)": [[0, "pythainlp.augment.word2vec.LTW2VAug"]], "thai2fitaug (class in pythainlp.augment.word2vec)": [[0, "pythainlp.augment.word2vec.Thai2fitAug"]], "thai2transformersaug (class in pythainlp.augment.lm)": [[0, "pythainlp.augment.lm.Thai2transformersAug"]], "word2vecaug (class in pythainlp.augment.word2vec)": [[0, "pythainlp.augment.word2vec.Word2VecAug"]], "wordnetaug (class in pythainlp.augment)": [[0, "pythainlp.augment.WordNetAug"]], "__init__() (pythainlp.augment.wordnetaug method)": [[0, "pythainlp.augment.WordNetAug.__init__"]], "__init__() (pythainlp.augment.lm.fasttextaug method)": [[0, "pythainlp.augment.lm.FastTextAug.__init__"]], "__init__() (pythainlp.augment.lm.thai2transformersaug method)": [[0, "pythainlp.augment.lm.Thai2transformersAug.__init__"]], "__init__() (pythainlp.augment.word2vec.ltw2vaug method)": [[0, "pythainlp.augment.word2vec.LTW2VAug.__init__"]], "__init__() (pythainlp.augment.word2vec.thai2fitaug method)": [[0, "pythainlp.augment.word2vec.Thai2fitAug.__init__"]], "__init__() (pythainlp.augment.word2vec.word2vecaug method)": [[0, "pythainlp.augment.word2vec.Word2VecAug.__init__"]], "__init__() (pythainlp.augment.word2vec.bpemb_wv.bpembaug method)": [[0, "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug.__init__"]], "augment() (pythainlp.augment.wordnetaug method)": [[0, "pythainlp.augment.WordNetAug.augment"]], "augment() (pythainlp.augment.lm.fasttextaug method)": [[0, "pythainlp.augment.lm.FastTextAug.augment"]], "augment() (pythainlp.augment.lm.thai2transformersaug method)": [[0, "pythainlp.augment.lm.Thai2transformersAug.augment"]], "augment() (pythainlp.augment.word2vec.ltw2vaug method)": [[0, "pythainlp.augment.word2vec.LTW2VAug.augment"]], "augment() (pythainlp.augment.word2vec.thai2fitaug method)": [[0, "pythainlp.augment.word2vec.Thai2fitAug.augment"]], "augment() (pythainlp.augment.word2vec.word2vecaug method)": [[0, "pythainlp.augment.word2vec.Word2VecAug.augment"]], "augment() (pythainlp.augment.word2vec.bpemb_wv.bpembaug method)": [[0, "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug.augment"]], "find_synonyms() (pythainlp.augment.wordnetaug method)": [[0, "pythainlp.augment.WordNetAug.find_synonyms"]], "generate() (pythainlp.augment.lm.thai2transformersaug method)": [[0, "pythainlp.augment.lm.Thai2transformersAug.generate"]], "load_w2v() (pythainlp.augment.word2vec.ltw2vaug method)": [[0, "pythainlp.augment.word2vec.LTW2VAug.load_w2v"]], "load_w2v() (pythainlp.augment.word2vec.thai2fitaug method)": [[0, "pythainlp.augment.word2vec.Thai2fitAug.load_w2v"]], "load_w2v() (pythainlp.augment.word2vec.bpemb_wv.bpembaug method)": [[0, "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug.load_w2v"]], "modify_sent() (pythainlp.augment.lm.fasttextaug method)": [[0, "pythainlp.augment.lm.FastTextAug.modify_sent"]], "modify_sent() (pythainlp.augment.word2vec.word2vecaug method)": [[0, "pythainlp.augment.word2vec.Word2VecAug.modify_sent"]], "tokenize() (pythainlp.augment.lm.fasttextaug method)": [[0, "pythainlp.augment.lm.FastTextAug.tokenize"]], "tokenizer() (pythainlp.augment.word2vec.ltw2vaug method)": [[0, "pythainlp.augment.word2vec.LTW2VAug.tokenizer"]], "tokenizer() (pythainlp.augment.word2vec.thai2fitaug method)": [[0, "pythainlp.augment.word2vec.Thai2fitAug.tokenizer"]], "tokenizer() (pythainlp.augment.word2vec.bpemb_wv.bpembaug method)": [[0, "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug.tokenizer"]], "benchmark() (in module pythainlp.benchmarks.word_tokenization)": [[1, "pythainlp.benchmarks.word_tokenization.benchmark"]], "compute_stats() (in module pythainlp.benchmarks.word_tokenization)": [[1, "pythainlp.benchmarks.word_tokenization.compute_stats"]], "preprocessing() (in module pythainlp.benchmarks.word_tokenization)": [[1, "pythainlp.benchmarks.word_tokenization.preprocessing"]], "chatbotmodel (class in pythainlp.chat)": [[2, "pythainlp.chat.ChatBotModel"]], "__init__() (pythainlp.chat.chatbotmodel method)": [[2, "pythainlp.chat.ChatBotModel.__init__"]], "chat() (pythainlp.chat.chatbotmodel method)": [[2, "pythainlp.chat.ChatBotModel.chat"]], "load_model() (pythainlp.chat.chatbotmodel method)": [[2, "pythainlp.chat.ChatBotModel.load_model"]], "reset_chat() (pythainlp.chat.chatbotmodel method)": [[2, "pythainlp.chat.ChatBotModel.reset_chat"]], "gzipmodel (class in pythainlp.cls)": [[3, "pythainlp.cls.GzipModel"]], "__init__() (pythainlp.cls.gzipmodel method)": [[3, "pythainlp.cls.GzipModel.__init__"]], "predict() (pythainlp.cls.gzipmodel method)": [[3, "pythainlp.cls.GzipModel.predict"]], "train() (pythainlp.cls.gzipmodel method)": [[3, "pythainlp.cls.GzipModel.train"]], "coreference_resolution() (in module pythainlp.coref)": [[4, "pythainlp.coref.coreference_resolution"]], "all_lemma_names() (in module pythainlp.corpus.wordnet)": [[5, "pythainlp.corpus.wordnet.all_lemma_names"]], "all_synsets() (in module pythainlp.corpus.wordnet)": [[5, "pythainlp.corpus.wordnet.all_synsets"]], "bigram_word_freqs() (in module pythainlp.corpus.tnc)": [[5, "pythainlp.corpus.tnc.bigram_word_freqs"]], "countries() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.countries"]], "custom_lemmas() (in module pythainlp.corpus.wordnet)": [[5, "pythainlp.corpus.wordnet.custom_lemmas"]], "download() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.download"]], "edges() (in module pythainlp.corpus.conceptnet)": [[5, "pythainlp.corpus.conceptnet.edges"]], "find_badwords() (in module pythainlp.corpus.util)": [[5, "pythainlp.corpus.util.find_badwords"]], "get_corpus() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.get_corpus"]], "get_corpus_db() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.get_corpus_db"]], "get_corpus_db_detail() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.get_corpus_db_detail"]], "get_corpus_default_db() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.get_corpus_default_db"]], "get_corpus_path() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.get_corpus_path"]], "get_transliteration_dict() (in module pythainlp.corpus.th_en_translit)": [[5, "pythainlp.corpus.th_en_translit.get_transliteration_dict"]], "langs() (in module pythainlp.corpus.wordnet)": [[5, "pythainlp.corpus.wordnet.langs"]], "lch_similarity() (in module pythainlp.corpus.wordnet)": [[5, "pythainlp.corpus.wordnet.lch_similarity"]], "lemma() (in module pythainlp.corpus.wordnet)": [[5, "pythainlp.corpus.wordnet.lemma"]], "lemma_from_key() (in module pythainlp.corpus.wordnet)": [[5, "pythainlp.corpus.wordnet.lemma_from_key"]], "lemmas() (in module pythainlp.corpus.wordnet)": [[5, "pythainlp.corpus.wordnet.lemmas"]], "morphy() (in module pythainlp.corpus.wordnet)": [[5, "pythainlp.corpus.wordnet.morphy"]], "path_similarity() (in module pythainlp.corpus.wordnet)": [[5, "pythainlp.corpus.wordnet.path_similarity"]], "provinces() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.provinces"]], "remove() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.remove"]], "revise_newmm_default_wordset() (in module pythainlp.corpus.util)": [[5, "pythainlp.corpus.util.revise_newmm_default_wordset"]], "revise_wordset() (in module pythainlp.corpus.util)": [[5, "pythainlp.corpus.util.revise_wordset"]], "synset() (in module pythainlp.corpus.wordnet)": [[5, "pythainlp.corpus.wordnet.synset"]], "synsets() (in module pythainlp.corpus.wordnet)": [[5, "pythainlp.corpus.wordnet.synsets"]], "thai_dict() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.thai_dict"]], "thai_family_names() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.thai_family_names"]], "thai_female_names() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.thai_female_names"]], "thai_male_names() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.thai_male_names"]], "thai_negations() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.thai_negations"]], "thai_orst_words() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.thai_orst_words"]], "thai_stopwords() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.thai_stopwords"]], "thai_syllables() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.thai_syllables"]], "thai_words() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.thai_words"]], "thai_wsd_dict() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.thai_wsd_dict"]], "trigram_word_freqs() (in module pythainlp.corpus.tnc)": [[5, "pythainlp.corpus.tnc.trigram_word_freqs"]], "unigram_word_freqs() (in module pythainlp.corpus.oscar)": [[5, "pythainlp.corpus.oscar.unigram_word_freqs"]], "unigram_word_freqs() (in module pythainlp.corpus.tnc)": [[5, "pythainlp.corpus.tnc.unigram_word_freqs"]], "unigram_word_freqs() (in module pythainlp.corpus.ttc)": [[5, "pythainlp.corpus.ttc.unigram_word_freqs"]], "word_freqs() (in module pythainlp.corpus.oscar)": [[5, "pythainlp.corpus.oscar.word_freqs"]], "word_freqs() (in module pythainlp.corpus.tnc)": [[5, "pythainlp.corpus.tnc.word_freqs"]], "word_freqs() (in module pythainlp.corpus.ttc)": [[5, "pythainlp.corpus.ttc.word_freqs"]], "wup_similarity() (in module pythainlp.corpus.wordnet)": [[5, "pythainlp.corpus.wordnet.wup_similarity"]], "entitylinker (class in pythainlp.el)": [[6, "pythainlp.el.EntityLinker"]], "__init__() (pythainlp.el.entitylinker method)": [[6, "pythainlp.el.EntityLinker.__init__"]], "get_el() (pythainlp.el.entitylinker method)": [[6, "pythainlp.el.EntityLinker.get_el"]], "bigram (class in pythainlp.generate)": [[7, "pythainlp.generate.Bigram"]], "trigram (class in pythainlp.generate)": [[7, "pythainlp.generate.Trigram"]], "unigram (class in pythainlp.generate)": [[7, "pythainlp.generate.Unigram"]], "wangchanglm (class in pythainlp.generate.wangchanglm)": [[7, "pythainlp.generate.wangchanglm.WangChanGLM"]], "__init__() (pythainlp.generate.bigram method)": [[7, "pythainlp.generate.Bigram.__init__"]], "__init__() (pythainlp.generate.trigram method)": [[7, "pythainlp.generate.Trigram.__init__"]], "__init__() (pythainlp.generate.unigram method)": [[7, "pythainlp.generate.Unigram.__init__"]], "__init__() (pythainlp.generate.wangchanglm.wangchanglm method)": [[7, "pythainlp.generate.wangchanglm.WangChanGLM.__init__"]], "gen_instruct() (pythainlp.generate.wangchanglm.wangchanglm method)": [[7, "pythainlp.generate.wangchanglm.WangChanGLM.gen_instruct"]], "gen_sentence() (in module pythainlp.generate.thai2fit)": [[7, "pythainlp.generate.thai2fit.gen_sentence"]], "gen_sentence() (pythainlp.generate.bigram method)": [[7, "pythainlp.generate.Bigram.gen_sentence"]], "gen_sentence() (pythainlp.generate.trigram method)": [[7, "pythainlp.generate.Trigram.gen_sentence"]], "gen_sentence() (pythainlp.generate.unigram method)": [[7, "pythainlp.generate.Unigram.gen_sentence"]], "instruct_generate() (pythainlp.generate.wangchanglm.wangchanglm method)": [[7, "pythainlp.generate.wangchanglm.WangChanGLM.instruct_generate"]], "is_exclude() (pythainlp.generate.wangchanglm.wangchanglm method)": [[7, "pythainlp.generate.wangchanglm.WangChanGLM.is_exclude"]], "load_model() (pythainlp.generate.wangchanglm.wangchanglm method)": [[7, "pythainlp.generate.wangchanglm.WangChanGLM.load_model"]], "prob() (pythainlp.generate.bigram method)": [[7, "pythainlp.generate.Bigram.prob"]], "prob() (pythainlp.generate.trigram method)": [[7, "pythainlp.generate.Trigram.prob"]], "khaveeverifier (class in pythainlp.khavee)": [[8, "pythainlp.khavee.KhaveeVerifier"]], "__dict__ (pythainlp.khavee.khaveeverifier attribute)": [[8, "pythainlp.khavee.KhaveeVerifier.__dict__"]], "__init__() (pythainlp.khavee.khaveeverifier method)": [[8, "pythainlp.khavee.KhaveeVerifier.__init__"]], "__module__ (pythainlp.khavee.khaveeverifier attribute)": [[8, "pythainlp.khavee.KhaveeVerifier.__module__"]], "check_aek_too() (pythainlp.khavee.khaveeverifier method)": [[8, "pythainlp.khavee.KhaveeVerifier.check_aek_too"]], "check_karu_lahu() (pythainlp.khavee.khaveeverifier method)": [[8, "pythainlp.khavee.KhaveeVerifier.check_karu_lahu"]], "check_klon() (pythainlp.khavee.khaveeverifier method)": [[8, "pythainlp.khavee.KhaveeVerifier.check_klon"]], "check_marttra() (pythainlp.khavee.khaveeverifier method)": [[8, "pythainlp.khavee.KhaveeVerifier.check_marttra"]], "check_sara() (pythainlp.khavee.khaveeverifier method)": [[8, "pythainlp.khavee.KhaveeVerifier.check_sara"]], "handle_karun_sound_silence() (pythainlp.khavee.khaveeverifier method)": [[8, "pythainlp.khavee.KhaveeVerifier.handle_karun_sound_silence"]], "is_sumpus() (pythainlp.khavee.khaveeverifier method)": [[8, "pythainlp.khavee.KhaveeVerifier.is_sumpus"]], "dependency_parsing() (in module pythainlp.parse)": [[9, "pythainlp.parse.dependency_parsing"]], "audio_vector() (in module pythainlp.soundex.sound)": [[10, "pythainlp.soundex.sound.audio_vector"]], "lk82() (in module pythainlp.soundex)": [[10, "pythainlp.soundex.lk82"]], "metasound() (in module pythainlp.soundex)": [[10, "pythainlp.soundex.metasound"]], "prayut_and_somchaip() (in module pythainlp.soundex)": [[10, "pythainlp.soundex.prayut_and_somchaip"]], "soundex() (in module pythainlp.soundex)": [[10, "pythainlp.soundex.soundex"]], "udom83() (in module pythainlp.soundex)": [[10, "pythainlp.soundex.udom83"]], "word2audio() (in module pythainlp.soundex.sound)": [[10, "pythainlp.soundex.sound.word2audio"]], "word_approximation() (in module pythainlp.soundex.sound)": [[10, "pythainlp.soundex.sound.word_approximation"]], "default_spell_checker (in module pythainlp.spell)": [[11, "pythainlp.spell.DEFAULT_SPELL_CHECKER"]], "norvigspellchecker (class in pythainlp.spell)": [[11, "pythainlp.spell.NorvigSpellChecker"]], "__dict__ (pythainlp.spell.norvigspellchecker attribute)": [[11, "pythainlp.spell.NorvigSpellChecker.__dict__"]], "__init__() (pythainlp.spell.norvigspellchecker method)": [[11, "pythainlp.spell.NorvigSpellChecker.__init__"]], "__module__ (pythainlp.spell.norvigspellchecker attribute)": [[11, "pythainlp.spell.NorvigSpellChecker.__module__"]], "correct() (in module pythainlp.spell)": [[11, "pythainlp.spell.correct"]], "correct() (pythainlp.spell.norvigspellchecker method)": [[11, "pythainlp.spell.NorvigSpellChecker.correct"]], "correct_sent() (in module pythainlp.spell)": [[11, "pythainlp.spell.correct_sent"]], "dictionary() (pythainlp.spell.norvigspellchecker method)": [[11, "pythainlp.spell.NorvigSpellChecker.dictionary"]], "freq() (pythainlp.spell.norvigspellchecker method)": [[11, "pythainlp.spell.NorvigSpellChecker.freq"]], "known() (pythainlp.spell.norvigspellchecker method)": [[11, "pythainlp.spell.NorvigSpellChecker.known"]], "prob() (pythainlp.spell.norvigspellchecker method)": [[11, "pythainlp.spell.NorvigSpellChecker.prob"]], "spell() (in module pythainlp.spell)": [[11, "pythainlp.spell.spell"]], "spell() (pythainlp.spell.norvigspellchecker method)": [[11, "pythainlp.spell.NorvigSpellChecker.spell"]], "spell_sent() (in module pythainlp.spell)": [[11, "pythainlp.spell.spell_sent"]], "keybert (class in pythainlp.summarize.keybert)": [[12, "id0"], [12, "pythainlp.summarize.keybert.KeyBERT"]], "__init__() (pythainlp.summarize.keybert.keybert method)": [[12, "id5"], [12, "pythainlp.summarize.keybert.KeyBERT.__init__"]], "embed() (pythainlp.summarize.keybert.keybert method)": [[12, "id9"], [12, "pythainlp.summarize.keybert.KeyBERT.embed"]], "extract_keywords() (in module pythainlp.summarize)": [[12, "pythainlp.summarize.extract_keywords"]], "extract_keywords() (pythainlp.summarize.keybert.keybert method)": [[12, "id6"], [12, "pythainlp.summarize.keybert.KeyBERT.extract_keywords"]], "module": [[12, "module-pythainlp.summarize.keybert"], [14, "module-pythainlp.tokenize.attacut"], [14, "module-pythainlp.tokenize.crfcut"], [14, "module-pythainlp.tokenize.deepcut"], [14, "module-pythainlp.tokenize.etcc"], [14, "module-pythainlp.tokenize.longest"], [14, "module-pythainlp.tokenize.multi_cut"], [14, "module-pythainlp.tokenize.nercut"], [14, "module-pythainlp.tokenize.newmm"], [14, "module-pythainlp.tokenize.nlpo3"], [14, "module-pythainlp.tokenize.oskut"], [14, "module-pythainlp.tokenize.pyicu"], [14, "module-pythainlp.tokenize.sefr_cut"], [14, "module-pythainlp.tokenize.tcc"], [14, "module-pythainlp.tokenize.thaisumcut"], [17, "module-pythainlp.transliterate.ipa"], [17, "module-pythainlp.transliterate.iso_11940"], [17, "module-pythainlp.transliterate.pyicu"], [17, "module-pythainlp.transliterate.royin.romanize"], [17, "module-pythainlp.transliterate.thai2rom.romanize"], [17, "module-pythainlp.transliterate.thaig2p.transliterate"]], "pythainlp.summarize.keybert": [[12, "module-pythainlp.summarize.keybert"]], "summarize() (in module pythainlp.summarize)": [[12, "pythainlp.summarize.summarize"]], "ner (class in pythainlp.tag)": [[13, "pythainlp.tag.NER"]], "nner (class in pythainlp.tag)": [[13, "pythainlp.tag.NNER"]], "thainametagger (class in pythainlp.tag.thainer)": [[13, "pythainlp.tag.thainer.ThaiNameTagger"]], "__init__() (pythainlp.tag.ner method)": [[13, "pythainlp.tag.NER.__init__"]], "__init__() (pythainlp.tag.nner method)": [[13, "pythainlp.tag.NNER.__init__"]], "__init__() (pythainlp.tag.thainer.thainametagger method)": [[13, "pythainlp.tag.thainer.ThaiNameTagger.__init__"]], "chunk_parse() (in module pythainlp.tag)": [[13, "pythainlp.tag.chunk_parse"]], "get_ner() (in module pythainlp.tag.tltk)": [[13, "pythainlp.tag.tltk.get_ner"]], "get_ner() (pythainlp.tag.thainer.thainametagger method)": [[13, "pythainlp.tag.thainer.ThaiNameTagger.get_ner"]], "load_engine() (pythainlp.tag.ner method)": [[13, "pythainlp.tag.NER.load_engine"]], "load_engine() (pythainlp.tag.nner method)": [[13, "pythainlp.tag.NNER.load_engine"]], "pos_tag() (in module pythainlp.tag)": [[13, "pythainlp.tag.pos_tag"]], "pos_tag_sents() (in module pythainlp.tag)": [[13, "pythainlp.tag.pos_tag_sents"]], "tag() (pythainlp.tag.ner method)": [[13, "pythainlp.tag.NER.tag"]], "tag() (pythainlp.tag.nner method)": [[13, "pythainlp.tag.NNER.tag"]], "tag_provinces() (in module pythainlp.tag)": [[13, "pythainlp.tag.tag_provinces"]], "attacuttokenizer (class in pythainlp.tokenize.attacut)": [[14, "id9"], [14, "pythainlp.tokenize.attacut.AttacutTokenizer"]], "latticestring (class in pythainlp.tokenize.multi_cut)": [[14, "pythainlp.tokenize.multi_cut.LatticeString"]], "longestmatchtokenizer (class in pythainlp.tokenize.longest)": [[14, "pythainlp.tokenize.longest.LongestMatchTokenizer"]], "thaisentencesegmentor (class in pythainlp.tokenize.thaisumcut)": [[14, "id6"], [14, "pythainlp.tokenize.thaisumcut.ThaiSentenceSegmentor"]], "tokenizer (class in pythainlp.tokenize)": [[14, "pythainlp.tokenize.Tokenizer"]], "__init__() (pythainlp.tokenize.tokenizer method)": [[14, "pythainlp.tokenize.Tokenizer.__init__"]], "__init__() (pythainlp.tokenize.attacut.attacuttokenizer method)": [[14, "id10"], [14, "pythainlp.tokenize.attacut.AttacutTokenizer.__init__"]], "__init__() (pythainlp.tokenize.longest.longestmatchtokenizer method)": [[14, "pythainlp.tokenize.longest.LongestMatchTokenizer.__init__"]], "__init__() (pythainlp.tokenize.multi_cut.latticestring method)": [[14, "pythainlp.tokenize.multi_cut.LatticeString.__init__"]], "clause_tokenize() (in module pythainlp.tokenize)": [[14, "pythainlp.tokenize.clause_tokenize"]], "extract_features() (in module pythainlp.tokenize.crfcut)": [[14, "id0"], [14, "pythainlp.tokenize.crfcut.extract_features"]], "find_all_segment() (in module pythainlp.tokenize.multi_cut)": [[14, "id15"], [14, "pythainlp.tokenize.multi_cut.find_all_segment"]], "list_to_string() (in module pythainlp.tokenize.thaisumcut)": [[14, "id4"], [14, "pythainlp.tokenize.thaisumcut.list_to_string"]], "load_dict() (in module pythainlp.tokenize.nlpo3)": [[14, "id17"], [14, "pythainlp.tokenize.nlpo3.load_dict"]], "middle_cut() (in module pythainlp.tokenize.thaisumcut)": [[14, "id5"], [14, "pythainlp.tokenize.thaisumcut.middle_cut"]], "mmcut() (in module pythainlp.tokenize.multi_cut)": [[14, "pythainlp.tokenize.multi_cut.mmcut"]], "paragraph_tokenize() (in module pythainlp.tokenize)": [[14, "pythainlp.tokenize.paragraph_tokenize"]], "pythainlp.tokenize.attacut": [[14, "module-pythainlp.tokenize.attacut"]], "pythainlp.tokenize.crfcut": [[14, "module-pythainlp.tokenize.crfcut"]], "pythainlp.tokenize.deepcut": [[14, "module-pythainlp.tokenize.deepcut"]], "pythainlp.tokenize.etcc": [[14, "module-pythainlp.tokenize.etcc"]], "pythainlp.tokenize.longest": [[14, "module-pythainlp.tokenize.longest"]], "pythainlp.tokenize.multi_cut": [[14, "module-pythainlp.tokenize.multi_cut"]], "pythainlp.tokenize.nercut": [[14, "module-pythainlp.tokenize.nercut"]], "pythainlp.tokenize.newmm": [[14, "module-pythainlp.tokenize.newmm"]], "pythainlp.tokenize.nlpo3": [[14, "module-pythainlp.tokenize.nlpo3"]], "pythainlp.tokenize.oskut": [[14, "module-pythainlp.tokenize.oskut"]], "pythainlp.tokenize.pyicu": [[14, "module-pythainlp.tokenize.pyicu"]], "pythainlp.tokenize.sefr_cut": [[14, "module-pythainlp.tokenize.sefr_cut"]], "pythainlp.tokenize.tcc": [[14, "module-pythainlp.tokenize.tcc"]], "pythainlp.tokenize.thaisumcut": [[14, "module-pythainlp.tokenize.thaisumcut"]], "segment() (in module pythainlp.tokenize.attacut)": [[14, "pythainlp.tokenize.attacut.segment"]], "segment() (in module pythainlp.tokenize.crfcut)": [[14, "id3"], [14, "pythainlp.tokenize.crfcut.segment"]], "segment() (in module pythainlp.tokenize.deepcut)": [[14, "pythainlp.tokenize.deepcut.segment"]], "segment() (in module pythainlp.tokenize.etcc)": [[14, "id32"], [14, "pythainlp.tokenize.etcc.segment"]], "segment() (in module pythainlp.tokenize.longest)": [[14, "id20"], [14, "pythainlp.tokenize.longest.segment"]], "segment() (in module pythainlp.tokenize.multi_cut)": [[14, "id14"], [14, "pythainlp.tokenize.multi_cut.segment"]], "segment() (in module pythainlp.tokenize.nercut)": [[14, "id23"], [14, "pythainlp.tokenize.nercut.segment"]], "segment() (in module pythainlp.tokenize.newmm)": [[14, "id28"], [14, "pythainlp.tokenize.newmm.segment"]], "segment() (in module pythainlp.tokenize.nlpo3)": [[14, "id18"], [14, "pythainlp.tokenize.nlpo3.segment"]], "segment() (in module pythainlp.tokenize.oskut)": [[14, "pythainlp.tokenize.oskut.segment"]], "segment() (in module pythainlp.tokenize.pyicu)": [[14, "pythainlp.tokenize.pyicu.segment"]], "segment() (in module pythainlp.tokenize.sefr_cut)": [[14, "pythainlp.tokenize.sefr_cut.segment"]], "segment() (in module pythainlp.tokenize.tcc)": [[14, "id29"], [14, "pythainlp.tokenize.tcc.segment"]], "segment() (in module pythainlp.tokenize.tcc_p)": [[14, "pythainlp.tokenize.tcc_p.segment"]], "sent_tokenize() (in module pythainlp.tokenize)": [[14, "pythainlp.tokenize.sent_tokenize"]], "set_tokenize_engine() (pythainlp.tokenize.tokenizer method)": [[14, "pythainlp.tokenize.Tokenizer.set_tokenize_engine"]], "split_into_sentences() (pythainlp.tokenize.thaisumcut.thaisentencesegmentor method)": [[14, "id7"], [14, "pythainlp.tokenize.thaisumcut.ThaiSentenceSegmentor.split_into_sentences"]], "subword_tokenize() (in module pythainlp.tokenize)": [[14, "pythainlp.tokenize.subword_tokenize"]], "tcc() (in module pythainlp.tokenize.tcc)": [[14, "id30"], [14, "pythainlp.tokenize.tcc.tcc"]], "tcc() (in module pythainlp.tokenize.tcc_p)": [[14, "pythainlp.tokenize.tcc_p.tcc"]], "tcc_pos() (in module pythainlp.tokenize.tcc)": [[14, "id31"], [14, "pythainlp.tokenize.tcc.tcc_pos"]], "tcc_pos() (in module pythainlp.tokenize.tcc_p)": [[14, "pythainlp.tokenize.tcc_p.tcc_pos"]], "tokenize() (pythainlp.tokenize.attacut.attacuttokenizer method)": [[14, "id11"], [14, "pythainlp.tokenize.attacut.AttacutTokenizer.tokenize"]], "tokenize() (pythainlp.tokenize.longest.longestmatchtokenizer method)": [[14, "pythainlp.tokenize.longest.LongestMatchTokenizer.tokenize"]], "word_detokenize() (in module pythainlp.tokenize)": [[14, "pythainlp.tokenize.word_detokenize"]], "word_tokenize() (in module pythainlp.tokenize)": [[14, "pythainlp.tokenize.word_tokenize"]], "word_tokenize() (pythainlp.tokenize.tokenizer method)": [[14, "pythainlp.tokenize.Tokenizer.word_tokenize"]], "pythainlp_data_dir": [[15, "index-0"], [27, "envvar-PYTHAINLP_DATA_DIR"]], "environment variable": [[15, "index-0"], [27, "envvar-PYTHAINLP_DATA_DIR"], [27, "envvar-PYTHAINLP_READ_MODE"]], "get_full_data_path() (in module pythainlp.tools)": [[15, "pythainlp.tools.get_full_data_path"]], "get_pythainlp_data_path() (in module pythainlp.tools)": [[15, "pythainlp.tools.get_pythainlp_data_path"]], "get_pythainlp_path() (in module pythainlp.tools)": [[15, "pythainlp.tools.get_pythainlp_path"]], "misspell() (in module pythainlp.tools.misspell)": [[15, "pythainlp.tools.misspell.misspell"]], "enthtranslator (class in pythainlp.translate.en_th)": [[16, "pythainlp.translate.en_th.EnThTranslator"]], "thentranslator (class in pythainlp.translate.en_th)": [[16, "pythainlp.translate.en_th.ThEnTranslator"]], "thfrtranslator (class in pythainlp.translate.th_fr)": [[16, "pythainlp.translate.th_fr.ThFrTranslator"]], "thzhtranslator (class in pythainlp.translate.zh_th)": [[16, "pythainlp.translate.zh_th.ThZhTranslator"]], "translate (class in pythainlp.translate)": [[16, "pythainlp.translate.Translate"]], "zhthtranslator (class in pythainlp.translate.zh_th)": [[16, "pythainlp.translate.zh_th.ZhThTranslator"]], "__init__() (pythainlp.translate.translate method)": [[16, "pythainlp.translate.Translate.__init__"]], "__init__() (pythainlp.translate.en_th.enthtranslator method)": [[16, "pythainlp.translate.en_th.EnThTranslator.__init__"]], "__init__() (pythainlp.translate.en_th.thentranslator method)": [[16, "pythainlp.translate.en_th.ThEnTranslator.__init__"]], "__init__() (pythainlp.translate.th_fr.thfrtranslator method)": [[16, "pythainlp.translate.th_fr.ThFrTranslator.__init__"]], "__init__() (pythainlp.translate.zh_th.thzhtranslator method)": [[16, "pythainlp.translate.zh_th.ThZhTranslator.__init__"]], "__init__() (pythainlp.translate.zh_th.zhthtranslator method)": [[16, "pythainlp.translate.zh_th.ZhThTranslator.__init__"]], "download_model_all() (in module pythainlp.translate.en_th)": [[16, "pythainlp.translate.en_th.download_model_all"]], "load_model() (pythainlp.translate.translate method)": [[16, "pythainlp.translate.Translate.load_model"]], "translate() (pythainlp.translate.translate method)": [[16, "pythainlp.translate.Translate.translate"]], "translate() (pythainlp.translate.en_th.enthtranslator method)": [[16, "pythainlp.translate.en_th.EnThTranslator.translate"]], "translate() (pythainlp.translate.en_th.thentranslator method)": [[16, "pythainlp.translate.en_th.ThEnTranslator.translate"]], "translate() (pythainlp.translate.th_fr.thfrtranslator method)": [[16, "pythainlp.translate.th_fr.ThFrTranslator.translate"]], "translate() (pythainlp.translate.zh_th.thzhtranslator method)": [[16, "pythainlp.translate.zh_th.ThZhTranslator.translate"]], "translate() (pythainlp.translate.zh_th.zhthtranslator method)": [[16, "pythainlp.translate.zh_th.ZhThTranslator.translate"]], "wunsentransliterate (class in pythainlp.transliterate.wunsen)": [[17, "pythainlp.transliterate.wunsen.WunsenTransliterate"]], "__init__() (pythainlp.transliterate.wunsen.wunsentransliterate method)": [[17, "pythainlp.transliterate.wunsen.WunsenTransliterate.__init__"]], "pronunciate() (in module pythainlp.transliterate)": [[17, "pythainlp.transliterate.pronunciate"]], "puan() (in module pythainlp.transliterate)": [[17, "pythainlp.transliterate.puan"]], "pythainlp.transliterate.ipa": [[17, "module-pythainlp.transliterate.ipa"]], "pythainlp.transliterate.iso_11940": [[17, "module-pythainlp.transliterate.iso_11940"]], "pythainlp.transliterate.pyicu": [[17, "module-pythainlp.transliterate.pyicu"]], "pythainlp.transliterate.royin.romanize": [[17, "module-pythainlp.transliterate.royin.romanize"]], "pythainlp.transliterate.thai2rom.romanize": [[17, "module-pythainlp.transliterate.thai2rom.romanize"]], "pythainlp.transliterate.thaig2p.transliterate": [[17, "module-pythainlp.transliterate.thaig2p.transliterate"]], "romanize() (in module pythainlp.transliterate)": [[17, "pythainlp.transliterate.romanize"]], "romanize() (in module pythainlp.transliterate.tltk)": [[17, "pythainlp.transliterate.tltk.romanize"]], "tltk_g2p() (in module pythainlp.transliterate.tltk)": [[17, "pythainlp.transliterate.tltk.tltk_g2p"]], "tltk_ipa() (in module pythainlp.transliterate.tltk)": [[17, "pythainlp.transliterate.tltk.tltk_ipa"]], "trans_list() (in module pythainlp.transliterate.ipa)": [[17, "id5"], [17, "pythainlp.transliterate.ipa.trans_list"]], "transliterate() (in module pythainlp.transliterate)": [[17, "pythainlp.transliterate.transliterate"]], "transliterate() (in module pythainlp.transliterate.ipa)": [[17, "id4"], [17, "pythainlp.transliterate.ipa.transliterate"]], "transliterate() (in module pythainlp.transliterate.iso_11940)": [[17, "pythainlp.transliterate.iso_11940.transliterate"]], "transliterate() (in module pythainlp.transliterate.pyicu)": [[17, "id0"], [17, "pythainlp.transliterate.pyicu.transliterate"]], "transliterate() (in module pythainlp.transliterate.thaig2p)": [[17, "pythainlp.transliterate.thaig2p.transliterate"]], "transliterate() (pythainlp.transliterate.wunsen.wunsentransliterate method)": [[17, "pythainlp.transliterate.wunsen.WunsenTransliterate.transliterate"]], "xsampa_list() (in module pythainlp.transliterate.ipa)": [[17, "id6"], [17, "pythainlp.transliterate.ipa.xsampa_list"]], "thaitokenizer (class in pythainlp.ulmfit)": [[18, "pythainlp.ulmfit.ThaiTokenizer"]], "__init__() (pythainlp.ulmfit.thaitokenizer method)": [[18, "pythainlp.ulmfit.ThaiTokenizer.__init__"]], "add_special_cases() (pythainlp.ulmfit.thaitokenizer method)": [[18, "pythainlp.ulmfit.ThaiTokenizer.add_special_cases"]], "document_vector() (in module pythainlp.ulmfit)": [[18, "pythainlp.ulmfit.document_vector"]], "fix_html() (in module pythainlp.ulmfit)": [[18, "pythainlp.ulmfit.fix_html"]], "lowercase_all() (in module pythainlp.ulmfit)": [[18, "pythainlp.ulmfit.lowercase_all"]], "merge_wgts() (in module pythainlp.ulmfit)": [[18, "pythainlp.ulmfit.merge_wgts"]], "process_thai() (in module pythainlp.ulmfit)": [[18, "pythainlp.ulmfit.process_thai"]], "remove_space() (in module pythainlp.ulmfit)": [[18, "pythainlp.ulmfit.remove_space"]], "replace_rep_after() (in module pythainlp.ulmfit)": [[18, "pythainlp.ulmfit.replace_rep_after"]], "replace_rep_nonum() (in module pythainlp.ulmfit)": [[18, "pythainlp.ulmfit.replace_rep_nonum"]], "replace_wrep_post() (in module pythainlp.ulmfit)": [[18, "pythainlp.ulmfit.replace_wrep_post"]], "replace_wrep_post_nonum() (in module pythainlp.ulmfit)": [[18, "pythainlp.ulmfit.replace_wrep_post_nonum"]], "rm_brackets() (in module pythainlp.ulmfit)": [[18, "pythainlp.ulmfit.rm_brackets"]], "rm_useless_newlines() (in module pythainlp.ulmfit)": [[18, "pythainlp.ulmfit.rm_useless_newlines"]], "rm_useless_spaces() (in module pythainlp.ulmfit)": [[18, "pythainlp.ulmfit.rm_useless_spaces"]], "spec_add_spaces() (in module pythainlp.ulmfit)": [[18, "pythainlp.ulmfit.spec_add_spaces"]], "tokenizer() (pythainlp.ulmfit.thaitokenizer static method)": [[18, "pythainlp.ulmfit.ThaiTokenizer.tokenizer"]], "ungroup_emoji() (in module pythainlp.ulmfit)": [[18, "pythainlp.ulmfit.ungroup_emoji"]], "trie (class in pythainlp.util)": [[19, "pythainlp.util.Trie"]], "trie.node (class in pythainlp.util)": [[19, "pythainlp.util.Trie.Node"]], "__init__() (pythainlp.util.trie method)": [[19, "pythainlp.util.Trie.__init__"]], "__init__() (pythainlp.util.trie.node method)": [[19, "pythainlp.util.Trie.Node.__init__"]], "add() (pythainlp.util.trie method)": [[19, "pythainlp.util.Trie.add"]], "arabic_digit_to_thai_digit() (in module pythainlp.util)": [[19, "pythainlp.util.arabic_digit_to_thai_digit"]], "bahttext() (in module pythainlp.util)": [[19, "pythainlp.util.bahttext"]], "children (pythainlp.util.trie.node attribute)": [[19, "pythainlp.util.Trie.Node.children"]], "collate() (in module pythainlp.util)": [[19, "pythainlp.util.collate"]], "convert_years() (in module pythainlp.util)": [[19, "pythainlp.util.convert_years"]], "count_thai_chars() (in module pythainlp.util)": [[19, "pythainlp.util.count_thai_chars"]], "countthai() (in module pythainlp.util)": [[19, "pythainlp.util.countthai"]], "dict_trie() (in module pythainlp.util)": [[19, "pythainlp.util.dict_trie"]], "digit_to_text() (in module pythainlp.util)": [[19, "pythainlp.util.digit_to_text"]], "display_thai_char() (in module pythainlp.util)": [[19, "pythainlp.util.display_thai_char"]], "emoji_to_thai() (in module pythainlp.util)": [[19, "pythainlp.util.emoji_to_thai"]], "end (pythainlp.util.trie.node attribute)": [[19, "pythainlp.util.Trie.Node.end"]], "eng_to_thai() (in module pythainlp.util)": [[19, "pythainlp.util.eng_to_thai"]], "find_keyword() (in module pythainlp.util)": [[19, "pythainlp.util.find_keyword"]], "ipa_to_rtgs() (in module pythainlp.util)": [[19, "pythainlp.util.ipa_to_rtgs"]], "is_native_thai() (in module pythainlp.util)": [[19, "pythainlp.util.is_native_thai"]], "isthai() (in module pythainlp.util)": [[19, "pythainlp.util.isthai"]], "isthaichar() (in module pythainlp.util)": [[19, "pythainlp.util.isthaichar"]], "maiyamok() (in module pythainlp.util)": [[19, "pythainlp.util.maiyamok"]], "nectec_to_ipa() (in module pythainlp.util)": [[19, "pythainlp.util.nectec_to_ipa"]], "normalize() (in module pythainlp.util)": [[19, "pythainlp.util.normalize"]], "now_reign_year() (in module pythainlp.util)": [[19, "pythainlp.util.now_reign_year"]], "num_to_thaiword() (in module pythainlp.util)": [[19, "pythainlp.util.num_to_thaiword"]], "prefixes() (pythainlp.util.trie method)": [[19, "pythainlp.util.Trie.prefixes"]], "rank() (in module pythainlp.util)": [[19, "pythainlp.util.rank"]], "reign_year_to_ad() (in module pythainlp.util)": [[19, "pythainlp.util.reign_year_to_ad"]], "remove() (pythainlp.util.trie method)": [[19, "pythainlp.util.Trie.remove"]], "remove_dangling() (in module pythainlp.util)": [[19, "pythainlp.util.remove_dangling"]], "remove_dup_spaces() (in module pythainlp.util)": [[19, "pythainlp.util.remove_dup_spaces"]], "remove_repeat_vowels() (in module pythainlp.util)": [[19, "pythainlp.util.remove_repeat_vowels"]], "remove_tone_ipa() (in module pythainlp.util)": [[19, "pythainlp.util.remove_tone_ipa"]], "remove_tonemark() (in module pythainlp.util)": [[19, "pythainlp.util.remove_tonemark"]], "remove_zw() (in module pythainlp.util)": [[19, "pythainlp.util.remove_zw"]], "reorder_vowels() (in module pythainlp.util)": [[19, "pythainlp.util.reorder_vowels"]], "sound_syllable() (in module pythainlp.util)": [[19, "pythainlp.util.sound_syllable"]], "spell_syllable() (in module pythainlp.util.spell_words)": [[19, "pythainlp.util.spell_words.spell_syllable"]], "spell_word() (in module pythainlp.util.spell_words)": [[19, "pythainlp.util.spell_words.spell_word"]], "syllable_length() (in module pythainlp.util)": [[19, "pythainlp.util.syllable_length"]], "syllable_open_close_detector() (in module pythainlp.util)": [[19, "pythainlp.util.syllable_open_close_detector"]], "text_to_arabic_digit() (in module pythainlp.util)": [[19, "pythainlp.util.text_to_arabic_digit"]], "text_to_num() (in module pythainlp.util)": [[19, "pythainlp.util.text_to_num"]], "text_to_thai_digit() (in module pythainlp.util)": [[19, "pythainlp.util.text_to_thai_digit"]], "thai_digit_to_arabic_digit() (in module pythainlp.util)": [[19, "pythainlp.util.thai_digit_to_arabic_digit"]], "thai_strftime() (in module pythainlp.util)": [[19, "pythainlp.util.thai_strftime"]], "thai_strptime() (in module pythainlp.util)": [[19, "pythainlp.util.thai_strptime"]], "thai_to_eng() (in module pythainlp.util)": [[19, "pythainlp.util.thai_to_eng"]], "thai_word_tone_detector() (in module pythainlp.util)": [[19, "pythainlp.util.thai_word_tone_detector"]], "thaiword_to_date() (in module pythainlp.util)": [[19, "pythainlp.util.thaiword_to_date"]], "thaiword_to_num() (in module pythainlp.util)": [[19, "pythainlp.util.thaiword_to_num"]], "thaiword_to_time() (in module pythainlp.util)": [[19, "pythainlp.util.thaiword_to_time"]], "time_to_thaiword() (in module pythainlp.util)": [[19, "pythainlp.util.time_to_thaiword"]], "tis620_to_utf8() (in module pythainlp.util)": [[19, "pythainlp.util.tis620_to_utf8"]], "tone_detector() (in module pythainlp.util)": [[19, "pythainlp.util.tone_detector"]], "words_to_num() (in module pythainlp.util)": [[19, "pythainlp.util.words_to_num"]], "namedentityrecognition (class in pythainlp.wangchanberta)": [[20, "pythainlp.wangchanberta.NamedEntityRecognition"]], "thainametagger (class in pythainlp.wangchanberta)": [[20, "pythainlp.wangchanberta.ThaiNameTagger"]], "__init__() (pythainlp.wangchanberta.namedentityrecognition method)": [[20, "pythainlp.wangchanberta.NamedEntityRecognition.__init__"]], "__init__() (pythainlp.wangchanberta.thainametagger method)": [[20, "pythainlp.wangchanberta.ThaiNameTagger.__init__"]], "get_ner() (pythainlp.wangchanberta.namedentityrecognition method)": [[20, "pythainlp.wangchanberta.NamedEntityRecognition.get_ner"]], "get_ner() (pythainlp.wangchanberta.thainametagger method)": [[20, "pythainlp.wangchanberta.ThaiNameTagger.get_ner"]], "segment() (in module pythainlp.wangchanberta)": [[20, "pythainlp.wangchanberta.segment"]], "wordvector (class in pythainlp.word_vector)": [[21, "pythainlp.word_vector.WordVector"]], "__init__() (pythainlp.word_vector.wordvector method)": [[21, "pythainlp.word_vector.WordVector.__init__"]], "doesnt_match() (pythainlp.word_vector.wordvector method)": [[21, "pythainlp.word_vector.WordVector.doesnt_match"]], "get_model() (pythainlp.word_vector.wordvector method)": [[21, "pythainlp.word_vector.WordVector.get_model"]], "load_wordvector() (pythainlp.word_vector.wordvector method)": [[21, "pythainlp.word_vector.WordVector.load_wordvector"]], "most_similar_cosmul() (pythainlp.word_vector.wordvector method)": [[21, "pythainlp.word_vector.WordVector.most_similar_cosmul"]], "sentence_vectorizer() (pythainlp.word_vector.wordvector method)": [[21, "pythainlp.word_vector.WordVector.sentence_vectorizer"]], "similarity() (pythainlp.word_vector.wordvector method)": [[21, "pythainlp.word_vector.WordVector.similarity"]], "get_sense() (in module pythainlp.wsd)": [[22, "pythainlp.wsd.get_sense"]], "pythainlp_read_mode": [[27, "envvar-PYTHAINLP_READ_MODE"]]}})