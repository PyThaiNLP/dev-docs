Search.setIndex({"docnames": ["api/augment", "api/benchmarks", "api/chat", "api/cls", "api/coref", "api/corpus", "api/generate", "api/khavee", "api/parse", "api/soundex", "api/spell", "api/summarize", "api/tag", "api/tokenize", "api/tools", "api/translate", "api/transliterate", "api/ulmfit", "api/util", "api/wangchanberta", "api/word_vector", "api/wsd", "index", "notes/FAQ", "notes/command_line", "notes/getting_started", "notes/installation", "notes/license"], "filenames": ["api/augment.rst", "api/benchmarks.rst", "api/chat.rst", "api/cls.rst", "api/coref.rst", "api/corpus.rst", "api/generate.rst", "api/khavee.rst", "api/parse.rst", "api/soundex.rst", "api/spell.rst", "api/summarize.rst", "api/tag.rst", "api/tokenize.rst", "api/tools.rst", "api/translate.rst", "api/transliterate.rst", "api/ulmfit.rst", "api/util.rst", "api/wangchanberta.rst", "api/word_vector.rst", "api/wsd.rst", "index.rst", "notes/FAQ.rst", "notes/command_line.rst", "notes/getting_started.rst", "notes/installation.rst", "notes/license.rst"], "titles": ["pythainlp.augment", "pythainlp.benchmarks", "pythainlp.chat", "pythainlp.cls", "pythainlp.coref", "pythainlp.corpus", "pythainlp.generate", "pythainlp.khavee", "pythainlp.parse", "pythainlp.soundex", "pythainlp.spell", "pythainlp.summarize", "pythainlp.tag", "pythainlp.tokenize", "pythainlp.tools", "pythainlp.translate", "pythainlp.transliterate", "pythainlp.ulmfit", "pythainlp.util", "pythainlp.wangchanberta", "pythainlp.word_vector", "pythainlp.wsd", "PyThaiNLP documentation", "FAQ", "Command Line", "Getting Started", "Installation", "License"], "terms": {"The": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 25], "textaug": [0, 26], "i": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27], "thai": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26], "text": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 24, 25, 26], "thi": [0, 3, 5, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 25, 26, 27], "function": [0, 1, 5, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 26], "task": [0, 1, 19, 25], "class": [0, 2, 3, 6, 7, 10, 11, 12, 13, 15, 16, 17, 18, 20], "wordnetaug": 0, "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 27], "us": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27], "wordnet": [0, 26], "__init__": [0, 2, 3, 6, 7, 10, 11, 12, 13, 15, 16, 17, 18, 20], "find_synonym": 0, "word": [0, 1, 5, 6, 7, 9, 10, 11, 12, 16, 17, 18, 20, 21, 24, 25, 26], "str": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "po": [0, 5, 8, 12, 13, 24], "none": [0, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 20, 21], "postag_corpu": 0, "orchid": [0, 12, 13], "list": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 25], "find": [0, 3, 5, 7, 10, 13, 18, 20, 26], "synonym": [0, 5], "from": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21], "part": [0, 5, 12, 13, 18, 19, 24], "speech": [0, 5, 12, 18, 19, 24], "type": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26], "postag": 0, "corpu": [0, 6, 10, 11, 12, 13, 15, 18, 22, 24, 26, 27], "name": [0, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 17, 18, 19, 20, 26], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "sentenc": [0, 10, 11, 12, 14, 18, 20, 21, 25], "token": [0, 5, 6, 8, 11, 12, 17, 19, 20, 21, 22, 24, 25, 26], "object": [0, 5, 7, 10, 11, 13, 17, 18, 20, 21], "word_token": [0, 1, 11, 13, 17, 25], "max_syn_s": 0, "int": [0, 3, 5, 6, 7, 9, 10, 11, 12, 13, 17, 18], "6": [0, 5, 9, 14, 18, 26], "bool": [0, 1, 2, 5, 6, 7, 10, 11, 12, 13, 15, 16, 18, 20], "true": [0, 1, 2, 5, 6, 7, 11, 12, 13, 16, 17, 18, 20, 26], "max": [0, 6], "number": [0, 6, 10, 11, 12, 14, 18], "tupl": [0, 3, 5, 10, 11, 12, 18, 20, 21], "exampl": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 26], "import": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 25], "aug": 0, "\u0e40\u0e23\u0e32\u0e0a\u0e2d\u0e1a\u0e44\u0e1b\u0e42\u0e23\u0e07\u0e40\u0e23": 0, "\u0e22\u0e19": [0, 5, 12, 13, 16, 18], "output": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "\u0e40\u0e23\u0e32": [0, 12, 25], "\u0e0a\u0e2d\u0e1a": [0, 18], "\u0e44\u0e1b": [0, 5, 12, 18], "\u0e23": [0, 4, 5, 6, 9, 10, 11, 12, 13, 20, 24, 25], "\u0e23\u0e23": 0, "\u0e42\u0e23\u0e07\u0e40\u0e23": [0, 12, 18], "\u0e2d\u0e32\u0e04\u0e32\u0e23\u0e40\u0e23": 0, "\u0e44\u0e1b\u0e22": 0, "\u0e07": [0, 5, 7, 9, 10, 11, 12, 13, 18, 24], "word2vec": [0, 20], "word2vecaug": 0, "model": [0, 2, 4, 5, 6, 8, 11, 12, 13, 15, 17, 19, 20, 21, 26, 27], "file": [0, 5, 13, 17, 18, 24, 26, 27], "path": [0, 5, 6, 13, 14, 18, 24, 26], "moodel": 0, "binari": 0, "modify_s": 0, "sent": [0, 5, 6, 12, 13, 14, 18, 24], "p": [0, 6, 12, 16, 18], "float": [0, 1, 5, 6, 10, 11, 13, 14, 18, 20, 21], "0": [0, 1, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20, 21, 22, 24, 26, 27], "7": [0, 6, 12, 18, 19], "probabl": [0, 6, 10], "n_sent": 0, "1": [0, 1, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 24, 26, 27], "thai2fitaug": 0, "thai2fit": [0, 6, 20, 26], "github": [0, 5, 8, 11, 13, 15, 16, 18, 19, 22, 23], "com": [0, 5, 11, 12, 13, 15, 18, 19], "cstorm125": 0, "load_w2v": 0, "load": [0, 2, 6, 13, 15, 17, 20], "\u0e1c\u0e21\u0e40\u0e23": 0, "2": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 22, 26, 27], "5": [0, 5, 9, 10, 11, 12, 13, 14, 17, 18, 20, 24, 26], "\u0e1e\u0e27\u0e01\u0e40\u0e23\u0e32": [0, 13], "\u0e40\u0e23": [0, 5, 7, 12, 13, 20], "\u0e09": [0, 7, 12, 13, 15, 24], "\u0e19": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 20, 24, 25], "ltw2vaug": 0, "ltw2v": [0, 20], "larg": [0, 11, 13, 20], "thaiword2vec": 0, "\u0e40\u0e02\u0e32": [0, 12, 20], "\u0e22\u0e19\u0e2b\u0e19": 0, "\u0e07\u0e2a": [0, 12, 24], "\u0e2d": [0, 5, 6, 7, 10, 11, 12, 13, 16, 17, 18, 20, 24], "\u0e2a\u0e21": [0, 12], "\u0e04\u0e23\u0e40\u0e23": 0, "lm": 0, "fasttextaug": 0, "model_path": [0, 6, 17], "fasttext": 0, "you": [0, 5, 8, 12, 13, 18, 19, 22, 23, 24, 25, 26, 27], "want": [0, 1, 3, 5, 8, 16, 18, 19], "download": [0, 5, 14, 15, 24, 26], "http": [0, 5, 9, 10, 11, 12, 13, 15, 17, 18, 19, 22, 26, 27], "cc": [0, 5, 12, 27], "doc": [0, 11, 13, 17, 18], "en": [0, 5, 6, 15, 18], "crawl": 0, "vector": [0, 9, 11, 17, 20, 25, 26], "html": [0, 5, 12, 17, 18], "thai2transformersaug": 0, "gener": [0, 2, 5, 13, 16, 18, 22, 26], "num_replace_token": 0, "3": [0, 5, 6, 8, 9, 11, 12, 13, 17, 18, 24, 26], "wangchanberta": [0, 11, 12, 13, 22, 26], "replac": [0, 17, 18], "\u0e0a": [0, 6, 9, 10, 11, 12, 13, 18, 21], "\u0e32\u0e07\u0e21": 0, "\u0e17": [0, 5, 11, 12, 13, 18, 24], "\u0e07\u0e2b\u0e21\u0e14": [0, 12, 18], "50": [0, 4, 6, 18], "\u0e15": [0, 5, 9, 10, 11, 12, 13, 16, 18, 20, 21, 24], "\u0e27": [0, 4, 7, 9, 10, 11, 12, 13, 17, 18, 20, 24], "\u0e1a\u0e19": [0, 12, 21], "\u0e1a\u0e19\u0e42\u0e25\u0e01\u0e43\u0e1a\u0e19": 0, "\u0e1a\u0e19\u0e2a": 0, "\u0e14": [0, 5, 8, 10, 11, 12, 13, 16, 18, 20, 24], "\u0e1a\u0e19\u0e1a\u0e01": 0, "\u0e1a\u0e19\u0e19": 0, "\u0e1a\u0e19\u0e2b": 0, "bpemb_wv": 0, "bpembaug": 0, "lang": [0, 5, 16, 17], "th": [0, 5, 8, 9, 10, 12, 15, 17, 18], "v": [0, 5, 13, 18], "100000": 0, "dim": 0, "300": [0, 20], "bpemb": 0, "bheinzerl": 0, "\u0e1c\u0e21\u0e2a\u0e2d\u0e19": 0, "\u0e1c\u0e21\u0e40\u0e02": 0, "\u0e32\u0e40\u0e23": 0, "contain": [1, 5, 12, 13, 14, 18, 20, 21], "util": [1, 10, 13, 17, 22], "relat": [1, 5, 17, 20], "nlp": [1, 15, 22, 25], "At": 1, "moment": 1, "we": [1, 2, 5, 12, 18, 19, 20, 21, 26], "have": [1, 17, 20, 25, 26], "onli": [1, 2, 5, 6, 9, 11, 12, 13, 16, 18, 20, 26], "other": [1, 2, 4, 6, 11, 12, 16, 18, 20, 25, 27], "ad": [1, 13, 17, 18], "soon": 1, "qualit": 1, "evalu": 1, "compute_stat": 1, "ref_sampl": 1, "raw_sampl": 1, "dict": [1, 4, 5, 10, 12, 13, 16, 17, 18, 21], "comput": [1, 5, 11, 20], "statist": [1, 9], "These": [1, 18], "includ": [1, 5, 11, 12, 13, 17, 18, 25, 27], "charact": [1, 7, 10, 13, 16, 17, 18], "level": [1, 8, 17, 18], "posit": [1, 13, 18, 20], "fals": [1, 2, 5, 6, 7, 11, 12, 13, 15, 16, 17, 18, 20, 26], "neg": [1, 12, 20], "precis": [1, 18, 24], "recal": [1, 24], "f1": 1, "correct": [1, 7, 10, 13, 18], "indic": [1, 5, 12, 16, 18, 25], "sequenc": [1, 17, 18], "correspod": 1, "correctli": [1, 10], "ground": 1, "truth": 1, "sampl": [1, 13, 24], "metric": [1, 10], "datafram": 1, "performac": 1, "pleas": [1, 5, 11, 22, 27], "see": [1, 5, 11, 13, 16, 17, 18, 21, 26, 27], "being": [1, 18], "row": 1, "x": [1, 12, 18], "col": 1, "len": [1, 5, 12], "panda": 1, "preprocess": [1, 18], "txt": [1, 5, 13, 14, 17, 24], "remove_spac": [1, 17], "clean": [1, 2, 17, 18], "up": [1, 16], "befor": [1, 7, 12, 13, 17, 18, 26], "perform": [1, 5, 13, 25, 26], "whether": 1, "remov": [1, 5, 9, 10, 17, 18], "white": 1, "space": [1, 12, 13, 17, 18, 25], "chatbotmodel": 2, "ai": [2, 13, 15, 17, 19], "reset_chat": 2, "reset": 2, "histori": 2, "load_model": [2, 6, 15], "model_nam": [2, 4, 11, 20], "wangchanglm": [2, 6, 26], "return_dict": [2, 6], "load_in_8bit": [2, 6], "devic": [2, 4, 5, 6, 21], "cuda": [2, 4, 6], "torch_dtyp": [2, 6], "torch": [2, 6, 17], "float16": [2, 6], "offload_fold": [2, 6], "low_cpu_mem_usag": [2, 6], "now": [2, 12, 18], "support": [2, 5, 12, 13, 18, 26], "8bit": [2, 6], "cpu": [2, 4, 6, 19, 21, 26], "offload": [2, 6], "folder": [2, 6], "low": [2, 3, 6], "mem": [2, 6], "usag": [2, 6, 17], "chatbot": 2, "ask": [2, 23], "answer": [2, 6, 8], "gzipmodel": 3, "training_data": [3, 5], "reimplemenat": 3, "resourc": [3, 5], "classif": [3, 17, 18, 25, 26], "A": [3, 10, 11, 13, 15, 16, 17, 18, 25, 26], "free": 3, "method": [3, 10, 16, 17], "compressor": 3, "jiang": 3, "et": [3, 13], "al": [3, 5, 13], "2023": [3, 18, 27], "text_sampl": 3, "label": [3, 5, 12, 20, 24], "train": [3, 5, 8, 13, 15, 17, 20, 25], "predict": 3, "x1": 3, "k": [3, 6, 11], "corefer": [4, 26], "resolut": 4, "coreference_resolut": [4, 26], "han": 4, "v1": [4, 16, 20], "do": [4, 5, 8, 16, 17, 18, 25], "run": [4, 13, 21], "txet": 4, "option": [4, 5, 8, 9, 11, 12, 13, 15, 16, 18, 20, 26], "default": [4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 26], "corf": 4, "orefer": 4, "print": [4, 5, 7, 8, 12, 18, 21], "bill": 4, "gate": 4, "\u0e44\u0e14": [4, 6, 7, 12, 13, 18], "\u0e1a\u0e27": 4, "\u0e04\u0e0b": 4, "covid": 4, "19": [4, 13], "\u0e40\u0e02": [4, 12, 13], "\u0e21\u0e41\u0e23\u0e01\u0e41\u0e25": 4, "\u0e23\u0e30\u0e1a": 4, "\u0e1c\u0e21\u0e23": [4, 15], "\u0e2a": [4, 5, 10, 11, 12, 13, 18, 24], "\u0e01\u0e2a\u0e1a\u0e32\u0e22\u0e21\u0e32\u0e01": 4, "clusters_str": 4, "\u0e1c\u0e21": [4, 8, 12, 24], "cluster": [4, 13], "10": [4, 5, 11, 12, 18, 20, 22, 26], "52": [4, 9], "provid": [5, 10, 17], "access": [5, 13], "come": 5, "countri": 5, "frozenset": 5, "\u0e41\u0e04\u0e19\u0e32\u0e14\u0e32": 5, "\u0e42\u0e23\u0e21\u0e32\u0e40\u0e19": 5, "\u0e22": [5, 6, 10, 11, 12, 13, 17, 18, 24], "\u0e41\u0e2d\u0e25\u0e08": 5, "\u0e25\u0e32\u0e27": [5, 20], "dev": 5, "countries_th": 5, "rtype": [5, 7, 13, 16, 17], "get_corpu": 5, "filenam": 5, "as_i": 5, "read": [5, 8, 19, 23, 26], "data": [5, 14, 17, 18, 20, 24, 26], "each": [5, 11, 12, 13, 15, 18, 20, 26], "line": [5, 18, 22, 26], "member": [5, 17], "set": [5, 10, 12, 13, 17, 18, 25, 26], "By": [5, 10, 11, 14, 18, 26], "whitespac": [5, 13, 18], "strip": [5, 7], "empti": [5, 17, 18], "valu": [5, 6, 9, 10, 12, 13, 18], "duplic": [5, 6, 18], "If": [5, 8, 10, 11, 13, 14, 16, 18, 19, 20, 21, 22, 26], "modif": 5, "order": [5, 10, 12, 18], "consist": [5, 17], "negations_th": 5, "\u0e41\u0e15": [5, 12, 21], "\u0e44\u0e21": [5, 12, 13, 18, 24], "ttc_freq": [5, 14], "\u0e42\u0e14\u0e22\u0e19": 5, "t1": [5, 6], "\u0e27\u0e1a\u0e17": 5, "t10": 5, "\u0e2b\u0e22": 5, "\u0e1a\u0e22": 5, "t3": [5, 6], "get_corpus_db": 5, "url": [5, 12], "get": [5, 13, 17, 20, 21, 22, 24, 26], "catalog": [5, 24], "server": 5, "get_corpus_db_detail": 5, "version": [5, 12, 13, 26, 27], "detail": [5, 12, 24, 26], "about": [5, 12, 18, 23, 26, 27], "inform": [5, 13, 26, 27], "local": [5, 13, 14, 18, 24], "get_corpus_default_db": 5, "default_db": 5, "json": 5, "doesn": [5, 12], "t": [5, 11, 12, 16, 17, 18], "exist": [5, 10, 13, 14, 17, 26], "edit": [5, 10], "can": [5, 8, 10, 11, 13, 14, 18, 19, 23, 24, 25, 26], "get_corpus_path": 5, "forc": 5, "alreadi": 5, "root": [5, 8, 14, 25], "ha": [5, 12, 18, 25], "been": 5, "yet": [5, 14, 18], "wiki_lm_lstm": 5, "32": [5, 26], "thwiki_lm": 5, "pth": 5, "dl": 5, "05gb": 5, "00": [5, 18], "25": [5, 17, 18], "41": 5, "5mb": 5, "": [5, 10, 12, 13, 16, 17, 18, 19, 24], "thwiki_model_lstm": 5, "avail": [5, 9, 12, 13, 19, 24], "seen": 5, "io": [5, 22], "db": 5, "found": [5, 10, 18], "succesfulli": 5, "otherwis": [5, 12, 13, 18, 20], "26": 5, "114k": 5, "434k": 5, "690kb": 5, "save": [5, 24], "home": [5, 26], "e": [5, 11, 12, 13, 18], "g": [5, 11, 13], "user": [5, 13, 18, 24], "bact": 5, "filenotfounderror": 5, "errno": [5, 26], "No": [5, 8, 12, 16, 25], "directori": [5, 14, 26], "usr": [5, 14], "lib": [5, 14], "python3": [5, 14], "dist": [5, 14], "packag": [5, 14, 25, 26], "provinc": [5, 12], "thailand": [5, 9, 12, 15, 16, 18], "\u0e01\u0e23\u0e30\u0e1a": [5, 10], "\u0e01\u0e23": [5, 11, 12, 24], "\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23": [5, 11], "\u0e01\u0e32\u0e0d\u0e08\u0e19\u0e1a": 5, "\u0e1a\u0e25\u0e23\u0e32\u0e0a\u0e18\u0e32\u0e19": 5, "thailand_provinces_th": 5, "param": [5, 7, 12, 13, 14, 15, 16, 17], "name_th": 5, "\u0e19\u0e19\u0e17\u0e1a": 5, "abbr_th": 5, "\u0e19\u0e1a": [5, 11, 12], "name_en": 5, "nonthaburi": 5, "abbr_en": 5, "nbi": 5, "thai_dict": [5, 21], "dictionari": [5, 10, 11, 13, 16, 17, 18, 21], "wiktionari": [5, 21], "thai_stopword": [5, 11], "stopword": [5, 18], "\u0e21": [5, 7, 10, 11, 12, 13, 18, 24], "\u0e44\u0e07": 5, "\u0e02\u0e13\u0e30": 5, "\u0e01\u0e32\u0e23": [5, 12, 13, 18, 20, 24], "\u0e1b\u0e23\u0e30\u0e01\u0e32\u0e23\u0e2b\u0e19": 5, "stopwords_th": 5, "thesi": [5, 9], "\u0e40\u0e1e": [5, 12], "\u0e0d\u0e28": 5, "\u0e25": [5, 9, 12, 13, 20], "\u0e15\u0e23\u0e30\u0e01": 5, "also": [5, 11, 13, 16, 17, 26], "\u0e01\u0e32\u0e23\u0e40\u0e25": 5, "\u0e2d\u0e01\u0e1b\u0e23\u0e30\u0e42\u0e22\u0e04\u0e2a\u0e33\u0e04": 5, "\u0e0d\u0e43\u0e19\u0e01\u0e32\u0e23\u0e2a\u0e23": 5, "\u0e1b\u0e04\u0e27\u0e32\u0e21\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\u0e42\u0e14\u0e22\u0e43\u0e0a": 5, "\u0e41\u0e1a\u0e1a\u0e08\u0e33\u0e25\u0e2d\u0e07\u0e41\u0e1a\u0e1a\u0e25\u0e33\u0e14": 5, "\u0e1a\u0e0a": 5, "\u0e21\u0e2b\u0e32\u0e27": 5, "\u0e17\u0e22\u0e32\u0e25": 5, "\u0e22\u0e18\u0e23\u0e23\u0e21\u0e28\u0e32\u0e2a\u0e15\u0e23": 5, "2551": 5, "thai_word": [5, 13], "\u0e01\u0e15": 5, "\u0e01\u0e32": [5, 13, 17, 18, 20, 24], "\u0e01\u0e14\u0e14": 5, "\u0e1e": [5, 9, 11, 12, 13, 16, 18, 20, 24], "\u0e29": [5, 11], "\u0e29\u0e20": 5, "words_th": [5, 13], "languag": [5, 7, 8, 9, 12, 13, 15, 16, 17, 18, 19, 22, 25, 27], "thai_wsd_dict": 5, "sens": [5, 21, 25], "disambigu": [5, 21], "thai_orst_word": 5, "royal": [5, 16, 18], "societi": [5, 12], "thai_syl": 5, "syllabl": [5, 7, 8, 13, 18, 24, 26], "\u0e01\u0e23\u0e2d\u0e1a": [5, 7, 21], "\u0e01": [5, 9, 10, 11, 12, 13, 16, 18, 21, 24, 25], "\u0e51": [5, 18], "\u0e42\u0e21\u0e1a": 5, "\u0e42\u0e21\u0e19": 5, "\u0e42\u0e21": 5, "\u0e32": [5, 11, 12, 16, 17, 18, 20, 24], "syllables_th": 5, "kucut": 5, "thai_neg": 5, "negat": [5, 12], "thai_family_nam": 5, "famili": 5, "family_names_th": 5, "thai_female_nam": 5, "femal": 5, "person_names_female_th": 5, "thai_male_nam": 5, "male": 5, "person_names_male_th": 5, "th_en_translit": 5, "get_transliteration_dict": 5, "defaultdict": 5, "transliter": [5, 9, 18, 22, 26], "english": [5, 9, 15, 16, 17, 18], "format": [5, 12, 13, 18], "an": [5, 10, 11, 13, 17, 18, 25, 27], "open": [5, 13, 18], "multilingu": [5, 15, 21], "knowledg": [5, 13], "graph": [5, 13], "commonsens": 5, "conceptnet5": 5, "wiki": [5, 18], "api": 5, "edg": 5, "public": [5, 20, 22, 27], "semant": [5, 21], "network": [5, 13], "design": 5, "help": [5, 18, 24], "understand": [5, 25], "mean": [5, 11, 17, 18, 20, 26], "peopl": 5, "For": [5, 11, 12, 13, 18, 21, 25, 26, 27], "term": [5, 20, 25], "common": [5, 12, 13, 18, 27], "which": [5, 10, 13, 18], "artifici": [5, 15], "intelig": 5, "concepnet": 5, "natur": [5, 22, 25], "intellig": [5, 15], "With": [5, 20, 25, 26], "illustr": 5, "show": [5, 12, 17], "relationship": 5, "repres": [5, 18, 20], "between": [5, 7, 9, 12, 13, 20], "node": [5, 18, 26], "abbrevi": [5, 12, 18], "ja": 5, "japan": [5, 12], "given": [5, 9, 10, 11, 12, 14, 18, 20], "accord": [5, 7, 9, 10, 18], "hello": 5, "id": 5, "r": [5, 11, 13, 18], "isa": 5, "c": [5, 13, 18, 19, 26], "greet": 5, "dataset": [5, 13, 14, 24, 27], "d": [5, 18], "4": [5, 6, 7, 8, 9, 12, 15, 16, 17, 18, 20, 27], "end": [5, 12, 13, 18, 25], "licens": [5, 13, 22], "rel": [5, 12, 18], "activ": [5, 12], "omc": 5, "vote": 5, "contributor": 5, "bmsacr": 5, "test": [5, 15, 17, 24], "start": [5, 18, 22], "surfacetext": 5, "kind": [5, 13, 27], "weight": [5, 17], "4641016151377544": 5, "\u0e2a\u0e27": 5, "\u0e2a\u0e14": 5, "relatedto": 5, "n": [5, 6, 9, 11, 16, 18, 19], "prosper": 5, "sa": [5, 18], "process": [5, 13, 17, 18, 22, 25, 26], "wikiparsec": 5, "sense_label": 5, "word_freq": 5, "frequenc": [5, 10, 11, 12, 18], "nation": [5, 6, 10, 12], "tnc_freq": 5, "credit": [5, 13], "korakot": [5, 13, 22], "chaovavanich": [5, 13, 22], "bit": [5, 26], "ly": 5, "3wskzsf": 5, "unigram_word_freq": 5, "unigram": [5, 6, 11], "bigram_word_freq": 5, "bigram": [5, 6, 11], "trigram_word_freq": 5, "trigram": [5, 6], "textbook": [5, 6], "icu": [5, 13, 25, 26], "find_badword": 5, "callabl": [5, 10, 17], "iter": [5, 10, 11, 12, 13, 18], "work": [5, 8, 13, 17, 18], "well": [5, 17], "consid": [5, 7, 12], "make": [5, 12, 17, 18, 20, 25], "unwel": 5, "revise_wordset": 5, "orig_word": 5, "revis": [5, 16], "could": [5, 13, 18, 26], "improv": [5, 13], "base": [5, 8, 9, 10, 11, 13, 16, 17, 18, 19, 21], "orign_word": 5, "remain": 5, "ani": [5, 10, 12, 13, 20, 27], "take": [5, 12, 26], "string": [5, 9, 13, 16, 17, 18], "input": [5, 7, 10, 11, 13, 14, 15, 16, 17, 18, 20, 24], "longest": [5, 24], "segment": [5, 13, 19, 25], "base_word": 5, "more_word": 5, "\u0e16\u0e27": 5, "\u0e14\u0e25": [5, 18], "\u0e17\u0e2d\u0e07\u0e2d": 5, "\u0e19\u0e17\u0e23": [5, 9, 12, 18], "\u0e20": [5, 12, 20], "\u0e12\u0e19": 5, "\u0e40\u0e15": [5, 17], "\u0e22\u0e07": [5, 12, 18, 20], "\u0e28": [5, 11, 12, 13, 16, 18, 20], "\u0e02": [5, 12, 13, 18], "\u0e19\u0e18": [5, 9, 18], "\u0e08\u0e33\u0e25\u0e2d\u0e07": 5, "\u0e14\u0e32\u0e27\u0e40\u0e23": 5, "\u0e2d\u0e07": [5, 12, 13, 24], "union": [5, 7, 8, 12, 13, 18, 21], "dict_tri": [5, 13, 18], "trie": [5, 13, 18], "wordlist": 5, "lambda": 5, "revised_word": 5, "revise_newmm_default_wordset": 5, "newmm": [5, 11, 17, 24, 25], "exact": [5, 12], "copi": [5, 13, 16, 27], "nltk": 5, "www": [5, 9, 10, 12, 13, 18, 26, 27], "org": [5, 12, 13, 17, 18, 19, 22, 27], "howto": 5, "synset": 5, "tha": 5, "all": [5, 7, 10, 11, 13, 15, 17, 18, 20, 26, 27], "lemma": 5, "argument": 5, "constrain": [5, 13], "its": [5, 10, 13, 14, 17, 18, 20], "constraint": 5, "noun": [5, 8, 12], "verb": [5, 8, 12], "adject": [5, 12], "satellit": 5, "adverb": [5, 12], "eng": [5, 9], "\u0e17\u0e33\u0e07\u0e32\u0e19": [5, 12], "01": [5, 18], "02": [5, 17, 19], "08": 5, "\u0e1a": [5, 9, 10, 11, 12, 13, 17, 18, 24, 25], "\u0e32\u0e19": [5, 9, 12, 17], "duplex_hous": 5, "dwell": 5, "hous": 5, "03": [5, 18], "14": [5, 12], "07": 5, "when": [5, 11, 20, 25], "specifi": [5, 11, 12, 14, 26], "\u0e41\u0e23\u0e07": [5, 10], "cound": 5, "interpret": 5, "hard": [5, 25], "adj": [5, 12], "accept": 5, "strong": 5, "name_synset": 5, "dog": 5, "chase": 5, "sysset": 5, "difficult": 5, "easi": [5, 11, 25], "requir": [5, 10, 11, 13, 16, 20, 26, 27], "great": 5, "physic": 5, "mental": 5, "effort": [5, 26], "accomplish": 5, "comprehend": 5, "endur": 5, "all_lemma_nam": 5, "tag": [5, 8, 13, 22, 24], "\u0e2d\u0e40\u0e21\u0e23": [5, 20], "\u0e42\u0e01_\u0e40\u0e27\u0e2a\u0e1b": 5, "\u0e0a\u0e0a": 5, "\u0e40\u0e21": [5, 12, 18], "\u0e2d\u0e07\u0e0a": 5, "\u0e40\u0e2d\u0e19\u0e40\u0e19": 5, "\u0e01\u0e32\u0e23\u0e23": 5, "\u0e1a\u0e40\u0e25": 5, "\u0e22\u0e07\u0e1a": 5, "\u0e15\u0e23\u0e1a": 5, "\u0e0d\u0e18\u0e23\u0e23\u0e21": 5, "\u0e1c": [5, 12, 13, 20, 24], "\u0e15\u0e01\u0e41\u0e15": 5, "\u0e07\u0e40\u0e23": 5, "\u0e2d\u0e14": [5, 11], "\u0e27\u0e22\u0e18\u0e07": 5, "\u0e08": [5, 12, 13, 16, 17, 18, 20, 24], "\u0e42\u0e2d\u0e27\u0e32\u0e19\u0e19": 5, "_\u0e40\u0e27\u0e2d\u0e23": 5, "\u0e42\u0e2d": [5, 12, 25], "80508": 5, "\u0e0b": [5, 11, 12, 16, 18], "\u0e07\u0e44\u0e21": 5, "\u0e41\u0e2d\u0e25\u0e01\u0e2d\u0e2e\u0e2d\u0e25": 5, "\u0e07\u0e15\u0e23\u0e07\u0e44\u0e1b\u0e15\u0e23\u0e07\u0e21\u0e32": 5, "\u0e40\u0e2a": [5, 10, 12, 18, 20, 24], "\u0e19\u0e28": 5, "\u0e19\u0e22": [5, 18, 24], "\u0e15\u0e23": [5, 18], "\u0e17\u0e32\u0e07\u0e08": 5, "\u0e15\u0e43\u0e08": 5, "5277": 5, "all_synset": 5, "over": 5, "next": [5, 10], "entiti": [5, 12, 13, 19, 26], "physical_ent": 5, "abstract": 5, "06": [5, 18], "abl": 5, "unabl": 5, "iso": [5, 16], "639": 5, "code": [5, 9, 13, 14, 15, 17, 27], "arb": 5, "bul": 5, "cat": [5, 15], "cmn": 5, "dan": 5, "ell": 5, "eu": 5, "fa": 5, "fin": 5, "fra": 5, "glg": 5, "heb": 5, "hrv": 5, "ind": 5, "ita": 5, "jpn": 5, "nld": 5, "nno": 5, "nob": 5, "pol": 5, "por": 5, "qcn": 5, "slv": 5, "spa": 5, "swe": 5, "zsm": 5, "lamma": 5, "\u0e42\u0e1b\u0e23\u0e14": 5, "like": [5, 10, 12, 18, 25, 26], "\u0e1e\u0e23\u0e30\u0e40\u0e08": [5, 11], "god": 5, "godhead": 5, "father": 5, "\u0e27\u0e19": [5, 11, 12, 13, 18], "roll": 5, "18": [5, 18], "17": [5, 18], "curl": 5, "roll_up": 5, "wind": 5, "11": [5, 9, 12, 13, 18], "practic": 5, "exercis": 5, "drill": 5, "lemma_from_kei": 5, "kei": [5, 10, 18], "similar": [5, 10, 11, 17, 18, 20, 21, 25], "need": [5, 13, 26], "suppli": [5, 13], "instead": [5, 17], "path_similar": 5, "synsets1": 5, "synsets2": 5, "two": [5, 7, 11, 12, 13, 18, 20, 25, 26], "shortest": 5, "distanc": [5, 10, 21], "equat": 5, "follow": [5, 12, 13, 18, 22, 25], "_similar": 5, "_path": 5, "_distanc": 5, "calcul": [5, 18], "connect": 5, "through": [5, 14], "hypernym": 5, "hyponym": 5, "taxonomi": 5, "score": [5, 11, 20], "ranag": 5, "ident": 5, "first": [5, 10, 11, 18, 20], "measur": [5, 12, 21], "second": [5, 18, 20], "obj": [5, 8], "3333333333333333": 5, "07142857142857142": 5, "08333333333333333": 5, "lch_similar": 5, "leacock": 5, "chodorow": 5, "lch": 5, "maximum": [5, 10, 11, 13], "depth": 5, "shown": 5, "below": [5, 18], "log": 5, "_depth": 5, "538973871058276": 5, "9985288301111273": 5, "1526795099383855": 5, "wup_similar": 5, "wu": 5, "palmer": 5, "wup": 5, "least": 5, "subsum": 5, "most": [5, 10, 11, 20, 25], "specif": [5, 9, 13, 17, 20, 27], "ancestor": 5, "13333333333333333": 5, "35294117647058826": 5, "morphi": 5, "form": [5, 12, 18, 20], "possibl": [5, 10, 13, 18], "search": [5, 9, 10, 22], "thiev": 5, "thief": 5, "mix": 5, "custom_lemma": 5, "tab_fil": 5, "custom": [5, 10, 13, 18], "tab": 5, "compl": 5, "hss": 5, "ntu": 5, "edu": [5, 26], "sg": 5, "omw": 5, "map": [5, 12, 20], "share": 5, "tnc": [6, 10, 12], "ttc": 6, "oscar": 6, "gen_sent": 6, "start_seq": 6, "prob": [6, 10], "001": 6, "output_str": 6, "begin": [6, 12, 18], "gen": 6, "\u0e41\u0e21\u0e27": [6, 7, 12, 17, 18], "ouput": 6, "\u0e41\u0e21\u0e27\u0e40\u0e27\u0e25\u0e32\u0e19\u0e30\u0e19": 6, "t2": 6, "\u0e41\u0e21\u0e27\u0e44\u0e21": 6, "\u0e1a\u0e40\u0e0a": 6, "\u0e2d\u0e21": [6, 21], "\u0e07\u0e17\u0e33\u0e15": 6, "\u0e27\u0e40\u0e1b": 6, "\u0e19\u0e40\u0e0b": 6, "\u0e1f\u0e40\u0e27\u0e2d\u0e23": 6, "\u0e04": [6, 9, 10, 12, 13, 18, 21, 24], "\u0e41\u0e04\u0e17\u0e23": 6, "\u0e22\u0e32": 6, "\u0e07\u0e25": 6, "\u0e01\u0e41\u0e2a\u0e14\u0e07": 6, "\u0e13\u0e2b\u0e25\u0e27\u0e07": 6, "is_exclud": 6, "5b": 6, "sft": 6, "shard": 6, "gen_instruct": 6, "max_new_token": 6, "512": 6, "top_p": 6, "95": [6, 12, 13, 18], "temperatur": 6, "9": [6, 10, 11, 12, 17, 18, 19], "top_k": 6, "no_repeat_ngram_s": 6, "typical_p": 6, "thai_onli": 6, "skip_special_token": 6, "instruct": 6, "new": [6, 13, 17, 18, 25, 26], "top": [6, 20], "repeat": [6, 18], "ngram": 6, "size": [6, 13, 17], "typic": 6, "skip": 6, "special": 6, "instruct_gener": 6, "context": [6, 12, 21, 25], "toolkit": [7, 12, 16], "poetri": 7, "\u0e01\u0e27": [7, 12, 20], "khaveeverifi": 7, "verifi": 7, "check_sara": 7, "check": [7, 10, 18], "vowel": [7, 18], "kv": 7, "\u0e40\u0e2d\u0e2d": [7, 12], "check_marttra": 7, "spell": [7, 13, 16, 18, 22, 26], "section": [7, 16], "\u0e2a\u0e32\u0e27": 7, "\u0e40\u0e01\u0e2d\u0e27": 7, "is_sumpu": 7, "word1": [7, 20], "word2": [7, 20], "rhyme": 7, "boolen": 7, "\u0e2a\u0e23\u0e23": 7, "check_karu_lahu": 7, "check_klon": 7, "k_type": 7, "8": [7, 9, 13, 17, 18, 19], "suitabl": [7, 26], "poem": 7, "principl": 7, "\u0e19\u0e0a": [7, 21], "\u0e2d\u0e2b\u0e21": 7, "\u0e19\u0e0a\u0e2d\u0e1a\u0e01": 7, "\u0e19\u0e44\u0e01": 7, "\u0e41\u0e25": [7, 21], "\u0e27\u0e01": 7, "\u0e07\u0e44\u0e25": 7, "\u0e2b\u0e21\u0e32\u0e0a": 7, "\u0e2d\u0e19": [7, 12, 20], "\u0e32\u0e17\u0e2d\u0e07": 7, "\u0e25\u0e04\u0e04\u0e19\u0e40\u0e01": 7, "\u0e40\u0e2d": [7, 12], "\u0e07\u0e40\u0e2d": 7, "\u0e07\u0e04\u0e30\u0e19\u0e2d\u0e07": 7, "\u0e04\u0e19\u0e08": 7, "\u0e1a\u0e08\u0e2d\u0e07": 7, "\u0e40\u0e02\u0e32\u0e0a": 7, "\u0e2d\u0e07\u0e40\u0e18": 7, "\u0e22\u0e23": 7, "\u0e07\u0e40\u0e2a": 7, "\u0e22\u0e07\u0e2b\u0e21\u0e32": 7, "cant": 7, "paragraph": [7, 13], "\u0e2b\u0e21\u0e32": 7, "\u0e08\u0e2d\u0e07": 7, "\u0e17\u0e2d\u0e07": 7, "check_aek_too": 7, "dead_syllable_as_aek": 7, "tonal": 7, "checker": [7, 10], "dead": [7, 18], "aek": 7, "too": 7, "both": [7, 13, 18, 20, 25], "\u0e01\u0e32\u0e23\u0e40\u0e0a": 7, "\u0e04\u0e04\u0e33\u0e40\u0e2d\u0e01\u0e42\u0e17": 7, "\u0e40\u0e2d\u0e07": 7, "\u0e43\u0e0a": [7, 12, 18, 21], "\u0e40\u0e2b\u0e21": [7, 12, 18], "\u0e2d\u0e19\u0e01": [7, 12], "handle_karun_sound_sil": 7, "handl": [7, 13], "sound": [7, 9, 18], "silenc": 7, "karun": 7, "should": [7, 16, 18, 25], "__dict__": [7, 10], "mappingproxi": [7, 10], "__module__": [7, 10], "core": [7, 17, 21], "attribut": [7, 10, 12, 27], "__weakref__": [7, 10], "__doc__": [7, 10], "__annotations__": [7, 10], "depend": [8, 12, 13, 26], "dependency_pars": [8, 26], "engin": [8, 9, 10, 15, 17, 25, 26], "esupar": [8, 26], "transformers_ud": [8, 26], "parser": 8, "conllu": 8, "tagger": [8, 13, 19], "bert": [8, 11, 13], "roberta": 8, "deberta": 8, "spacy_thai": [8, 26], "univers": [8, 9, 12, 15, 17, 27], "transformersud": 8, "ud_goeswith": 8, "goeswith": 8, "subword": [8, 19, 24, 25], "koichiyasuoka": 8, "spm": [8, 11, 19], "upo": 8, "huggingfac": [8, 15], "v2": [8, 12, 21], "pre": [8, 12, 13, 17, 20, 26], "wikipedia": [8, 16, 18], "char": [8, 14, 18], "ud": [8, 12], "head": 8, "pretrain": [8, 15, 17, 19], "detect": 8, "question": [8, 23], "deriv": 8, "th_blackboard": 8, "conll": 8, "\u0e1c\u0e21\u0e40\u0e1b": 8, "\u0e19\u0e04\u0e19\u0e14": 8, "_": [8, 18], "pron": [8, 12], "nsubj": 8, "spaceaft": 8, "\u0e40\u0e1b": [8, 11, 12, 13, 18], "cop": 8, "\u0e04\u0e19": [8, 12, 17, 18], "acl": [8, 13], "ppr": [8, 12], "vsta": [8, 12], "\u0e04\u0e19\u0e14": [8, 18], "ncmn": [8, 12], "udom83": [9, 24], "length": [9, 10, 18], "convert": [9, 16, 18, 20], "phonet": [9, 16, 26], "prefer": 9, "metasound": [9, 24], "prayut_and_somchaip": 9, "algorithm": [9, 10, 11, 12, 13, 18], "propos": 9, "vichit": 9, "lorchirachoonkul": 9, "lk82": [9, 24], "wanne": 9, "udompanich": 9, "combin": [9, 13, 20], "metaphon": 9, "snae": 9, "br\u00fcckner": 9, "cross": [9, 13], "retriev": 9, "techniqu": [9, 11, 13, 25], "\u0e23100000": 9, "\u0e231000": 9, "\u0e25100": 9, "\u0e23100": 9, "\u0e01\u0e29": 9, "\u0e23\u0e13\u0e01\u0e32\u0e23": 9, "\u0e1a931900": 9, "\u0e1ae419": 9, "\u0e1a551": 9, "\u0e1b": [9, 10, 12, 16, 17, 18, 20], "\u0e08\u0e08": [9, 18], "\u0e1b775300": 9, "\u0e1b3e54": 9, "\u0e1b223": 9, "vp": [9, 12], "\u0e1a5515": 9, "mactch": 9, "call": [9, 11, 18, 26], "wa": [9, 13, 18], "develop": [9, 13, 18, 26], "\u0e1a55150": 9, "king": [9, 18], "word_approxim": 9, "list_word": [9, 10], "approxim": [9, 18], "smaller": [9, 13], "closer": 9, "\u0e23\u0e16": 9, "\u0e23\u0e14": 9, "\u0e23\u0e2a": 9, "\u0e23\u0e21": 9, "\u0e33": [9, 17, 20], "875": 9, "375": 9, "audio_vector": 9, "audio": 9, "featur": [9, 13, 17], "panphon": 9, "word2audio": 9, "ipa": [9, 18, 26], "tone": [9, 16, 18], "a\u02d0": [9, 16], "m": [9, 16, 18, 19], "2009": 9, "novel": 9, "match": [9, 12, 13, 18], "ontologi": 9, "analys": 9, "astrologi": 9, "1983": 9, "alik": 9, "homonym": 9, "approach": [9, 13, 26], "master": 9, "chulalongkorn": 9, "\u0e2b\u0e25": [9, 16], "\u0e2d\u0e08": 9, "\u0e23\u0e30\u0e0a": 9, "\u0e13\u0e2b": 9, "\u0e41\u0e25\u0e30": [9, 12, 13, 18, 24], "\u0e40\u0e08\u0e23": [9, 11], "\u0e0d": [9, 12, 20], "\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21\u0e01\u0e32\u0e23\u0e2a": 9, "\u0e1a\u0e04": [9, 16], "\u0e19\u0e04\u0e33\u0e44\u0e17\u0e22\u0e15\u0e32\u0e21\u0e40\u0e2a": 9, "\u0e22\u0e07\u0e2d": 9, "prayut": 9, "suwanvisat": 9, "somchai": 9, "prasitjutrakul": 9, "In": [9, 13, 18, 25], "1998": 9, "cite": [9, 13, 19, 22], "2022": [9, 18], "sep": 9, "cp": 9, "chula": [9, 10], "ac": [9, 10, 12], "spj": 9, "paper": 9, "thaitext": 9, "ncsec98": 9, "clir": 9, "pdf": [9, 13], "closest": 10, "pn": 10, "peter": 10, "norvig": 10, "phunspel": [10, 26], "spyll": 10, "port": 10, "hunspel": 10, "symspellpi": [10, 26], "python": [10, 13, 18, 22, 25, 26], "symspel": 10, "v6": 10, "\u0e19\u0e15\u0e23\u0e1a": 10, "\u0e19\u0e15\u0e23\u0e07": 10, "\u0e04\u0e23": [10, 12], "\u0e07\u0e40\u0e01\u0e15": 10, "\u0e01\u0e23\u0e30\u0e1b": 10, "\u0e01\u0e30\u0e1b": 10, "\u0e40\u0e2b\u0e15\u0e01\u0e32\u0e23\u0e13": 10, "\u0e40\u0e2b\u0e15": [10, 18, 24], "\u0e01\u0e32\u0e23\u0e13": [10, 18], "correct_s": 10, "\u0e40\u0e14": [10, 11, 18], "\u0e19\u0e2d\u0e23": 10, "\u0e40\u0e19": [10, 12, 21], "\u0e19\u0e40\u0e17\u0e2d\u0e23": [10, 21], "ar": [10, 11, 12, 13, 16, 17, 18, 20, 26, 27], "incur": 10, "result": [10, 12, 18, 24], "sort": [10, 18], "occurr": 10, "descend": [10, 18], "tltk": [10, 12, 13], "wrapper": [10, 12, 13, 17], "within": [10, 12, 13, 17, 26], "\u0e27\u0e23": 10, "\u0e1b\u0e23": 10, "\u0e1a\u0e23": 10, "\u0e04\u0e25": [10, 12], "spell_sent": 10, "norvigspellcheck": 10, "custom_dict": [10, 13, 21], "min_freq": 10, "min_len": [10, 18], "max_len": 10, "40": [10, 13, 18], "dict_filt": 10, "_is_thai_and_not_num": 10, "initi": [10, 13, 17], "basic": [10, 19], "choos": [10, 11, 12, 13, 18], "give": [10, 18], "candid": 10, "Then": [10, 11, 20], "select": [10, 11, 18], "highest": [10, 11], "just": [10, 18], "without": [10, 12, 13, 16, 18, 27], "case": [10, 17], "assign": [10, 13], "everi": [10, 18], "around": [10, 17], "000": [10, 12], "minimum": [10, 11], "keep": [10, 13, 14], "func": [10, 11, 17], "filter": [10, 11, 13, 17], "non": [10, 18], "itemsview": 10, "current": [10, 13, 26], "instanc": [10, 11, 12, 18], "\u0e2b\u0e27\u0e32\u0e19": 10, "30": [10, 12, 18], "\u0e21\u0e30\u0e19\u0e32\u0e27": 10, "\u0e41\u0e2d\u0e1a": 10, "3223": 10, "dict_item": 10, "known": [10, 25], "thei": [10, 13, 18], "intersect": 10, "\u0e40\u0e1e\u0e22\u0e19": 10, "\u0e40\u0e1e\u0e25": 10, "\u0e40\u0e1e\u0e25\u0e07": 10, "\u0e22\u0e01\u0e44": 10, "\u0e44\u0e1f\u0e25": 10, "0006959172792052158": 10, "\u0e32\u0e23": [10, 18], "482306849763902e": 10, "05": [10, 14, 18], "freq": 10, "\u0e0d\u0e0d\u0e32": [10, 17], "3639": 10, "\u0e0d\u0e0a\u0e32": 10, "whose": 10, "decreas": 10, "exactli": 10, "one": [10, 11, 13, 16, 18, 20, 26], "itself": 10, "look": [10, 16, 26], "expand": 10, "And": 10, "still": 10, "fail": [10, 26], "\u0e0d\u0e2b\u0e32": 10, "\u0e15\u0e23\u0e20\u0e32\u0e1a": 10, "\u0e15\u0e23\u0e20\u0e32\u0e1e": 10, "default_spell_check": 10, "standard": [10, 18], "art": [10, 13], "ling": 10, "2007": 10, "how": [10, 16, 17, 26], "write": [10, 13, 18, 25, 27], "corrector": 10, "under": [11, 13, 26, 27], "hood": 11, "sent_token": [11, 13], "normal": [11, 12, 17, 18], "frequnci": 11, "less": [11, 25], "than": [11, 13], "greater": 11, "out": [11, 13, 17, 18, 20, 25], "final": 11, "pick": [11, 20], "sum": [11, 17], "appear": 11, "summari": 11, "effect": [11, 16], "refer": [11, 13], "mt5": [11, 26], "small": 11, "xl": 11, "xxl": 11, "cpe": 11, "kmutt": 11, "\u0e17\u0e33\u0e40\u0e19": 11, "\u0e22\u0e1a\u0e17": 11, "\u0e32\u0e0a": 11, "\u0e32\u0e07": [11, 12, 24], "\u0e2b\u0e23": [11, 12], "\u0e07\u0e16\u0e19\u0e19\u0e1e\u0e23\u0e30\u0e2d\u0e32\u0e17": 11, "\u0e15\u0e22": [11, 18], "\u0e07\u0e2d\u0e22": 11, "\u0e1a\u0e19\u0e16\u0e19\u0e19\u0e1e\u0e23\u0e30\u0e2d\u0e32\u0e17": 11, "\u0e40\u0e02\u0e15\u0e1e\u0e23\u0e30\u0e19\u0e04\u0e23": 11, "\u0e21\u0e40\u0e1b": 11, "\u0e32\u0e19\u0e02\u0e2d\u0e07\u0e40\u0e08": 11, "\u0e32\u0e1e\u0e23\u0e30\u0e22\u0e32\u0e21\u0e2b\u0e32\u0e42\u0e22\u0e18\u0e32": 11, "\u0e17\u0e2d\u0e40\u0e23": 11, "\u0e22\u0e30": 11, "\u0e04\u0e0a\u0e40\u0e2a\u0e19": 11, "\u0e15\u0e23\u0e40\u0e08": 11, "\u0e32\u0e1e\u0e23\u0e30\u0e22\u0e32\u0e21\u0e2b\u0e32\u0e42\u0e22\u0e18\u0e32\u0e19\u0e23\u0e32\u0e18": 11, "\u0e1a\u0e14": 11, "\u0e28\u0e23": 11, "\u0e22\u0e13\u0e23\u0e07\u0e04": 11, "\u0e1e\u0e0d\u0e32\u0e40\u0e08": 11, "\u0e19\u0e2a\u0e01": 11, "\u0e25\u0e04\u0e0a\u0e40\u0e2a\u0e19": 11, "\u0e40\u0e0a": [11, 12], "\u0e2d\u0e2a\u0e32\u0e22\u0e21\u0e2d\u0e0d": 11, "\u0e40\u0e08": 11, "\u0e19\u0e1b": [11, 18], "\u0e02\u0e2d\u0e07\u0e40\u0e08": 11, "\u0e32\u0e08\u0e2d\u0e21\u0e21\u0e32\u0e23\u0e14\u0e32\u0e01\u0e25": 11, "\u0e19\u0e43\u0e19\u0e1e\u0e23\u0e30\u0e1a\u0e32\u0e17\u0e2a\u0e21\u0e40\u0e14": 11, "\u0e08\u0e1e\u0e23\u0e30\u0e08\u0e2d\u0e21\u0e40\u0e01\u0e25": 11, "\u0e32\u0e40\u0e08": 11, "\u0e32\u0e2d\u0e22": [11, 12], "\u0e2b": [11, 12, 13, 16, 18], "\u0e41\u0e25\u0e30\u0e40\u0e1b": 11, "\u0e19\u0e21\u0e23\u0e14\u0e01\u0e15\u0e01\u0e17\u0e2d\u0e14\u0e21\u0e32\u0e16": 11, "\u0e32\u0e1a\u0e23\u0e21\u0e27\u0e07\u0e28": 11, "\u0e40\u0e18\u0e2d": [11, 12], "\u0e01\u0e23\u0e21\u0e1e\u0e23\u0e30\u0e19\u0e40\u0e23\u0e28\u0e23\u0e27\u0e23\u0e24\u0e17\u0e18": 11, "\u0e1e\u0e23\u0e30\u0e2d\u0e07\u0e04": 11, "\u0e32\u0e01\u0e24\u0e14\u0e32\u0e20": 11, "\u0e2b\u0e32\u0e23": 11, "\u0e2d\u0e21\u0e32\u0e43\u0e19\u0e23": 11, "\u0e0a\u0e2a\u0e21": 11, "\u0e22\u0e1e\u0e23\u0e30\u0e1a\u0e32\u0e17\u0e2a\u0e21\u0e40\u0e14": 11, "\u0e08\u0e1e\u0e23\u0e30\u0e08": 11, "\u0e25\u0e08\u0e2d\u0e21\u0e40\u0e01\u0e25": 11, "\u0e27\u0e42\u0e1b\u0e23\u0e14\u0e40\u0e01\u0e25": 11, "\u0e32\u0e2f": 11, "\u0e43\u0e2b": [11, 12], "\u0e2a\u0e23": [11, 18], "\u0e32\u0e07\u0e15\u0e33\u0e2b\u0e19": 11, "\u0e19\u0e17": [11, 12, 13, 18], "\u0e1b\u0e23\u0e30\u0e17": 11, "\u0e1a\u0e02\u0e2d\u0e07\u0e1e\u0e23\u0e30\u0e40\u0e08": 11, "\u0e01\u0e23\u0e21\u0e1e\u0e23\u0e30\u0e19\u0e40\u0e23\u0e28\u0e27\u0e23\u0e24\u0e17": 11, "\u0e18": [11, 16, 18], "\u0e41\u0e25\u0e30\u0e40\u0e08": 11, "\u0e32\u0e08\u0e2d\u0e21\u0e21\u0e32\u0e23\u0e14\u0e32": 11, "\u0e2d\u0e21\u0e32\u0e40\u0e23": 11, "\u0e22\u0e01\u0e2d\u0e32\u0e04\u0e32\u0e23\u0e2b\u0e25": 11, "\u0e01\u0e19": [11, 12], "\u0e15\u0e33\u0e2b\u0e19": 11, "\u0e01\u0e40\u0e14": 11, "extra_id_0": 11, "\u0e2f\u0e25\u0e2f": 11, "\u0e07\u0e19": [11, 18, 20], "\u0e2d\u0e22": [11, 12, 13, 17, 18], "\u0e25\u0e1b\u0e27": 11, "\u0e12\u0e19\u0e18\u0e23\u0e23\u0e21": 11, "\u0e16": [11, 12, 18, 25], "\u0e32\u0e1e": 11, "\u0e14\u0e16": 11, "\u0e07\u0e02\u0e19\u0e21\u0e2b\u0e27\u0e32\u0e19\u0e43\u0e19\u0e15\u0e33\u0e19\u0e32\u0e19\u0e17": 11, "\u0e19\u0e43\u0e08\u0e17": 11, "\u0e14\u0e41\u0e25": 11, "\u0e27\u0e25\u0e30\u0e01": 11, "\u0e2d\u0e07\u0e44\u0e21": 11, "\u0e33\u0e41\u0e02": 11, "\u0e07\u0e43\u0e2a": 11, "\u0e41\u0e19": 11, "\u0e46": [11, 18, 21], "\u0e40\u0e1e\u0e23\u0e32\u0e30\u0e27": [11, 12], "\u0e32\u0e40\u0e1b": 11, "\u0e19\u0e2d\u0e30\u0e44\u0e23\u0e17": 11, "\u0e19\u0e43\u0e08\u0e2a": 11, "\u0e14\u0e46": 11, "\u0e32\u0e41\u0e02": 11, "\u0e07\u0e43\u0e2a\u0e40\u0e1b": 11, "extract_keyword": 11, "keyphrase_ngram_rang": 11, "max_keyword": 11, "min_df": 11, "stop_word": 11, "relev": 11, "keyphras": 11, "document": [11, 17, 18, 27], "mai": [11, 12, 13, 18, 26, 27], "produc": 11, "complet": 11, "differ": [11, 12, 13, 25], "so": [11, 26], "care": [11, 18], "note": [11, 12, 13, 17, 18, 20, 26], "expens": 11, "repetit": [11, 17], "creat": [11, 12, 13, 14, 18, 25, 26, 27], "highli": 11, "recommend": [11, 26], "unit": [11, 12, 13, 18], "defin": [11, 13], "vari": 11, "w": [11, 13, 18, 24], "tokenizer_engin": 11, "\u0e40\u0e2a\u0e32": 11, "\u0e44\u0e1f\u0e1f": 11, "consecut": 11, "\u0e40\u0e2a\u0e32\u0e44\u0e1f\u0e1f": 11, "stop": 11, "ignor": [11, 18], "\u0e2d\u0e32\u0e2b\u0e32\u0e23": [11, 12], "\u0e2b\u0e21\u0e32\u0e22\u0e16": 11, "\u0e02\u0e2d\u0e07\u0e41\u0e02": 11, "\u0e07\u0e2b\u0e23": 11, "\u0e2d\u0e02\u0e2d\u0e07\u0e40\u0e2b\u0e25\u0e27": 11, "\u0e19\u0e2b\u0e23": 11, "\u0e21\u0e40\u0e02": 11, "\u0e32\u0e2a": [11, 18], "\u0e32\u0e07\u0e01\u0e32\u0e22\u0e41\u0e25": 11, "\u0e08\u0e30\u0e17\u0e33\u0e43\u0e2b": 11, "\u0e40\u0e01": [11, 12, 13, 18], "\u0e14\u0e1e\u0e25": 11, "\u0e07\u0e07\u0e32\u0e19\u0e41\u0e25\u0e30\u0e04\u0e27\u0e32\u0e21\u0e23": 11, "\u0e2d\u0e19\u0e41\u0e01": 11, "\u0e32\u0e07\u0e01\u0e32\u0e22": 11, "\u0e17\u0e33\u0e43\u0e2b": 11, "\u0e32\u0e07\u0e01\u0e32\u0e22\u0e40\u0e08\u0e23": 11, "\u0e0d\u0e40\u0e15": 11, "\u0e1a\u0e42\u0e15": 11, "\u0e2d\u0e21\u0e41\u0e0b\u0e21\u0e2a": 11, "\u0e27\u0e19\u0e17": 11, "\u0e01\u0e2b\u0e23\u0e2d": 11, "\u0e04\u0e27\u0e1a\u0e04": 11, "\u0e21\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e25": 11, "\u0e22\u0e19\u0e41\u0e1b\u0e25\u0e07\u0e15": 11, "\u0e32\u0e07\u0e46": [11, 12], "\u0e43\u0e19\u0e23": [11, 18], "\u0e27\u0e22\u0e17\u0e33\u0e43\u0e2b": 11, "\u0e2d\u0e27": [11, 13], "\u0e22\u0e27\u0e30\u0e15": 11, "\u0e17\u0e33\u0e07\u0e32\u0e19\u0e44\u0e14": 11, "\u0e32\u0e07\u0e1b\u0e01\u0e15": 11, "\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e08\u0e30\u0e15": 11, "\u0e29\u0e41\u0e25\u0e30\u0e44\u0e21": 11, "\u0e14\u0e42\u0e17\u0e29\u0e15": 11, "\u0e2d\u0e23": 11, "\u0e22\u0e19\u0e41\u0e1b\u0e25\u0e07": 11, "\u0e29\u0e41\u0e25\u0e30": 11, "\u0e14\u0e42\u0e17\u0e29": 11, "minim": 11, "re": [11, 18], "implement": [11, 13, 18], "leverag": 11, "embed": [11, 17], "maartengr": 11, "airesearch": [11, 15], "att": [11, 19], "uncas": [11, 19], "return_similar": 11, "kb": 11, "3228477063109462": 11, "31320597838000375": 11, "29115434699705506": 11, "2678430841321016": 11, "24996827960821494": 11, "23876962942443258": 11, "23191285218852364": 11, "22425422716846247": 11, "22162962875299588": 11, "20773497763458507": 11, "emb": [11, 17], "ndarrai": [11, 17, 20], "averag": [11, 12, 17], "last": 11, "hidden": [11, 18], "layer": 11, "mark": [12, 13, 18, 25], "linguist": [12, 20], "annot": 12, "ne": 12, "three": 12, "lst20": 12, "tabl": 12, "\u0e43\u0e2b\u0e21": [12, 17], "\u0e40\u0e28\u0e29": 12, "\u0e21\u0e32\u0e01": [12, 18], "adp": 12, "adposit": 12, "\u0e41\u0e21": [12, 20], "\u0e02\u0e2d\u0e07": [12, 13], "\u0e2a\u0e33\u0e2b\u0e23": 12, "adv": 12, "\u0e40\u0e25": [12, 13], "\u0e40\u0e25\u0e22": 12, "aux": 12, "auxiliari": 12, "\u0e32\u0e22": [12, 18, 20], "cconj": 12, "coordin": 12, "conjunct": 12, "det": 12, "determin": 12, "\u0e2b\u0e25\u0e32\u0e22": 12, "intj": 12, "interject": 12, "\u0e01\u0e33\u0e21": 12, "\u0e1e\u0e27\u0e01": 12, "\u0e2a\u0e19\u0e32\u0e21": 12, "\u0e2c\u0e32": 12, "\u0e0d\u0e0a": 12, "num": 12, "numer": [12, 13, 18], "103": 12, "2004": 12, "\u0e2b\u0e19": [12, 16, 17, 18], "particl": 12, "\u0e21\u0e32": [12, 18], "pronoun": 12, "\u0e27\u0e40\u0e2d\u0e07": 12, "\u0e43\u0e04\u0e23": 12, "propn": 12, "proper": 12, "\u0e42\u0e2d\u0e1a\u0e32\u0e21\u0e32": 12, "\u0e41\u0e04\u0e1b": 12, "\u0e15\u0e2d\u0e25\u0e2e": 12, "\u0e42\u0e2d\u0e1e": 12, "\u0e44\u0e21\u0e40\u0e04": 12, "punct": 12, "punctuat": [12, 18], "sconj": 12, "subordin": 12, "\u0e2b\u0e32\u0e01": 12, "\u0e40\u0e1c\u0e0a": 12, "nprp": 12, "\u0e19\u0e42\u0e14\u0e27\u0e2a": 12, "\u0e42\u0e04\u0e42\u0e23\u0e19": 12, "\u0e42\u0e04": 12, "ncnm": 12, "cardin": 12, "\u0e2a\u0e2d\u0e07": [12, 18], "\u0e2a\u0e32\u0e21": 12, "nonm": 12, "ordin": 12, "nlbl": 12, "b": [12, 17, 18], "\u0e2d\u0e32\u0e04\u0e32\u0e23": 12, "nttl": 12, "titl": [12, 13], "\u0e1e\u0e25\u0e40\u0e2d\u0e01": 12, "person": [12, 13], "\u0e13": [12, 13, 15], "pdmn": 12, "demonstr": 12, "pntr": 12, "interrog": 12, "\u0e2d\u0e30\u0e44\u0e23": 12, "\u0e32\u0e07\u0e44\u0e23": 12, "prel": 12, "vact": 12, "\u0e2d\u0e07\u0e40\u0e1e\u0e25\u0e07": 12, "stativ": 12, "\u0e40\u0e2b": [12, 16], "vatt": 12, "\u0e2a\u0e27\u0e22": 12, "xvbm": 12, "\u0e2d\u0e1a": [12, 24], "\u0e01\u0e33\u0e25": 12, "xvam": 12, "after": [12, 13, 17, 18], "xvmm": 12, "\u0e04\u0e27\u0e23": [12, 24], "\u0e40\u0e04\u0e22": 12, "xvbb": 12, "imper": 12, "mood": 12, "\u0e13\u0e32": 12, "\u0e08\u0e07": 12, "\u0e32\u0e21": 12, "xvae": 12, "post": [12, 13, 15, 17], "ddan": 12, "definit": [12, 21], "classifi": 12, "\u0e42\u0e19": 12, "ddac": 12, "allow": [12, 13], "ddbq": 12, "preced": 12, "quantit": 12, "express": [12, 13, 25, 27], "ddaq": 12, "\u0e1e\u0e2d\u0e14": 12, "diac": 12, "indefinit": 12, "\u0e44\u0e2b\u0e19": 12, "dibq": 12, "\u0e1a\u0e32\u0e07": 12, "\u0e1b\u0e23\u0e30\u0e21\u0e32\u0e13": 12, "diaq": 12, "dcnm": 12, "donm": 12, "\u0e14\u0e17": 12, "\u0e2a\u0e22": 12, "advn": 12, "\u0e33\u0e40\u0e2a\u0e21\u0e2d": 12, "advi": 12, "\u0e27\u0e46": 12, "\u0e40\u0e2a\u0e17\u0e2d\u0e46": 12, "\u0e32\u0e46": 12, "advp": 12, "prefix": [12, 18], "\u0e42\u0e14\u0e22\u0e40\u0e23": 12, "sententi": 12, "\u0e42\u0e14\u0e22\u0e1b\u0e01\u0e15": 12, "\u0e18\u0e23\u0e23\u0e21\u0e14\u0e32": 12, "cnit": 12, "cltv": 12, "collect": [12, 13, 17, 18], "\u0e01\u0e25": 12, "\u0e1d": [12, 20], "\u0e17\u0e32\u0e07": 12, "\u0e41\u0e1a\u0e1a": 12, "cmtr": 12, "\u0e42\u0e25\u0e01\u0e23": 12, "\u0e41\u0e01": 12, "\u0e27\u0e42\u0e21\u0e07": 12, "cfqc": 12, "\u0e40\u0e17": 12, "\u0e22\u0e27": 12, "cvbl": 12, "verbal": 12, "jcrg": 12, "jcmp": 12, "compar": [12, 20], "\u0e32\u0e01": 12, "jsbr": 12, "\u0e2d\u0e07\u0e08\u0e32\u0e01": 12, "rpre": 12, "preposit": 12, "\u0e08\u0e32\u0e01": 12, "\u0e25\u0e30": 12, "\u0e43\u0e15": [12, 20], "fixn": 12, "nomin": 12, "\u0e04\u0e27\u0e32\u0e21": [12, 13], "\u0e2a\u0e19": 12, "\u0e19\u0e2a\u0e19\u0e32\u0e19": 12, "fixv": 12, "adverbi": 12, "eaff": 12, "affirm": 12, "\u0e30": 12, "\u0e19\u0e30": 12, "\u0e40\u0e16\u0e2d\u0e30": 12, "eitt": 12, "\u0e40\u0e2b\u0e23\u0e2d": 12, "\u0e44\u0e2b\u0e21": 12, "punc": 12, "thu": 12, "corespond": 12, "aj": 12, "av": 12, "ax": 12, "cl": [12, 22], "fx": 12, "ij": 12, "nn": 12, "nu": 12, "pa": 12, "pr": 12, "pu": 12, "vv": 12, "xx": [12, 15], "insid": 12, "outsid": 12, "beggin": 12, "iob": 12, "chunk": [12, 13], "intermedi": 12, "o": [12, 16], "doe": [12, 13, 14, 17, 18, 25, 26], "belong": 12, "\u0e1a\u0e32\u0e23": 12, "\u0e42\u0e2d\u0e1a\u0e32\u0e21\u0e32\u0e40\u0e1b": 12, "\u0e19\u0e1b\u0e23\u0e30\u0e18\u0e32\u0e19\u0e18": 12, "\u0e1b\u0e14": 12, "would": [12, 13, 25], "\u0e1b\u0e23\u0e30\u0e18\u0e32\u0e19\u0e32\u0e18": 12, "respect": [12, 20], "date": [12, 13, 18], "21": [12, 13, 18], "16": 12, "time": [12, 13, 18, 26], "email": [12, 13], "info": [12, 24], "nrpsc": 12, "\u0e42\u0e25\u0e40\u0e21\u0e15\u0e23": 12, "\u0e01\u0e21": 12, "locat": [12, 13, 14, 18, 26], "\u0e44\u0e17\u0e22": [12, 16, 20], "\u0e1b\u0e23\u0e32\u0e08": 12, "\u0e01\u0e33\u0e41\u0e1e\u0e07\u0e40\u0e1e\u0e0a\u0e23": 12, "organ": [12, 13], "\u0e01\u0e23\u0e21\u0e27": 12, "\u0e17\u0e22\u0e32\u0e28\u0e32\u0e2a\u0e15\u0e23": 12, "\u0e01\u0e32\u0e23\u0e41\u0e1e\u0e17\u0e22": 12, "\u0e08\u0e23": 12, "\u0e19\u0e32\u0e07\u0e1b\u0e23\u0e30\u0e19\u0e2d\u0e21": 12, "\u0e17\u0e2d\u0e07\u0e08": 12, "phone": [12, 13], "1200": 12, "2670": 12, "8888": 12, "bangkokhealth": 12, "zip": 12, "10400": 12, "11130": 12, "monei": [12, 18], "\u0e32\u0e19\u0e1a\u0e32\u0e17": 12, "\u0e1a\u0e32\u0e17": [12, 13, 18], "law": [12, 13, 27], "\u0e42\u0e23\u0e04\u0e23\u0e30\u0e1a\u0e32\u0e14": 12, "2499": 12, "\u0e10\u0e18\u0e23\u0e23\u0e21\u0e19": 12, "pos_tag": 12, "It": [12, 13, 15, 18, 25, 26], "chang": [12, 13, 18], "academ": 12, "articl": 12, "orchid_ud": 12, "blackboard": [12, 13], "treebank": [12, 13], "blackboard_ud": 12, "universaldepend": 12, "pud": 12, "parallel": 12, "nativ": [12, 18, 25], "\u0e23\u0e2d\u0e14": 12, "\u0e43\u0e19": [12, 18, 24], "\u0e2b\u0e25\u0e1a\u0e20": 12, "\u0e19\u0e32\u0e22\u0e01": [12, 20], "\u0e40\u0e0a\u0e2d\u0e23": 12, "\u0e32\u0e2d": 12, "\u0e08\u0e33\u0e19\u0e27\u0e19": [12, 18], "\u0e02\u0e32": 12, "equal": [12, 16], "pos_tag_s": 12, "\u0e19\u0e01": [12, 17, 20], "tag_provinc": 12, "recogn": 12, "reutrn": 12, "ner": [12, 13], "\u0e2b\u0e19\u0e2d\u0e07\u0e04\u0e32\u0e22": 12, "chunk_pars": 12, "crf": [12, 13], "orchidpp": 12, "pars": [12, 22, 26], "phrase": [12, 13], "structur": 12, "tokens_po": 12, "np": 12, "thainer": [12, 24], "load_engin": 12, "entitii": 12, "associ": 12, "\u0e17\u0e14\u0e2a\u0e2d\u0e1a\u0e19\u0e32\u0e22\u0e27\u0e23\u0e23\u0e13\u0e1e\u0e07\u0e29": 12, "\u0e17\u0e17": 12, "\u0e22\u0e44\u0e1e\u0e1a": 12, "\u0e25\u0e22": 12, "\u0e17\u0e14\u0e2a\u0e2d\u0e1a": 12, "\u0e19\u0e32\u0e22": 12, "\u0e27\u0e23\u0e23\u0e13": [12, 24], "\u0e1e\u0e07\u0e29": 12, "\u0e44\u0e1e\u0e1a": 12, "\u0e19\u0e32\u0e22\u0e27\u0e23\u0e23\u0e13\u0e1e\u0e07\u0e29": 12, "nner": 12, "thai_nner": 12, "nest": 12, "recognit": [12, 19, 26], "named_ent": [12, 13], "\u0e41\u0e21\u0e27\u0e17\u0e33\u0e2d\u0e30\u0e44\u0e23\u0e15\u0e2d\u0e19\u0e2b": 12, "\u0e32\u0e42\u0e21\u0e07\u0e40\u0e0a": 12, "\u0e15\u0e2d\u0e19": 12, "\u0e42\u0e21\u0e07": 12, "span": 12, "entity_typ": 12, "thainametagg": 12, "defualt": 12, "thainer14": 12, "get_ner": 12, "15": [12, 17, 18, 20], "61": 12, "\u0e17\u0e14\u0e2a\u0e2d\u0e1a\u0e23\u0e30\u0e1a\u0e1a\u0e40\u0e27\u0e25\u0e32": 12, "49": 12, "To": 12, "exclud": [12, 18], "\u0e23\u0e30\u0e1a\u0e1a": 12, "\u0e40\u0e27\u0e25\u0e32": [12, 18], "\u0e40\u0e02\u0e32\u0e40\u0e23": 12, "\u0e22\u0e19\u0e17": 12, "\u0e22\u0e19\u0e19\u0e32\u0e07\u0e23\u0e2d\u0e07": 12, "l": [12, 18, 19], "\u0e19\u0e32\u0e07\u0e23\u0e2d\u0e07": 12, "account": 12, "virach": 12, "sornlertlamvanich": 12, "naoto": 12, "takahashi": 12, "hitoshi": 12, "isahara": 12, "2000": [12, 13], "build": [12, 21, 26], "Of": [12, 24], "journal": [12, 16], "acoust": 12, "vol": 12, "20": [12, 15], "pp": [12, 13], "189": 12, "198": 12, "1999": 12, "prachya": 12, "boonkwan": 12, "vorapon": 12, "luantangsrisuk": 12, "sitthaa": 12, "phaholphinyo": 12, "kanyanat": 12, "kriengket": 12, "dhanon": 12, "leenoi": 12, "charun": 12, "phrombut": 12, "monthika": 12, "boriboon": 12, "krit": 12, "kosawat": 12, "thepchai": 12, "supnithi": 12, "2020": [12, 13], "guidelin": 12, "arxiv": [12, 19], "2008": 12, "05055": 12, "multipl": [13, 17, 18, 20], "desir": 13, "clause_token": 13, "claus": 13, "split": 13, "claue": 13, "\u0e19\u0e2d\u0e19": 13, "\u0e2d\u0e16": [13, 18], "\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21": 13, "keep_whitespac": 13, "among": 13, "newlin": [13, 17, 18], "splite": 13, "ted": 13, "thaisum": 13, "nakhun": 13, "chumpolsathien": 13, "wtp": 13, "wtpsplitax": 13, "mani": [13, 18], "mini": 13, "tini": 13, "canin": 13, "1l": 13, "12l": 13, "specifiaclli": 13, "regex": 13, "pattern": 13, "sentence_1": 13, "\u0e19\u0e44\u0e1b\u0e1b\u0e23\u0e30\u0e0a": 13, "\u0e21\u0e40\u0e21": 13, "\u0e19\u0e32\u0e04\u0e21": [13, 18], "sentence_2": 13, "\u0e32\u0e23\u0e32\u0e0a\u0e01\u0e32\u0e23\u0e44\u0e14": 13, "\u0e1a\u0e01\u0e32\u0e23\u0e2b\u0e21": 13, "\u0e19\u0e40\u0e27": 13, "\u0e22\u0e19\u0e40\u0e1b": 13, "\u0e19\u0e23\u0e30\u0e22\u0e30": 13, "\u0e41\u0e25\u0e30\u0e44\u0e14": 13, "\u0e1a\u0e21\u0e2d\u0e1a\u0e2b\u0e21\u0e32\u0e22\u0e43\u0e2b": 13, "\u0e1b\u0e23\u0e30\u0e08\u0e33\u0e43\u0e19\u0e23\u0e30\u0e14": 13, "\u0e1a\u0e20": 13, "\u0e20\u0e32\u0e04": 13, "n\u0e41\u0e25\u0e30\u0e44\u0e14": 13, "\u0e41\u0e25\u0e30\u0e40\u0e02\u0e32\u0e44\u0e14": 13, "paragraph_token": 13, "paragraph_threshold": 13, "\u0e1a\u0e17\u0e04\u0e27\u0e32\u0e21\u0e19": 13, "\u0e22\u0e19\u0e2a": 13, "\u0e07\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b": 13, "\u0e19\u0e21\u0e32\u0e08\u0e32\u0e01\u0e1c\u0e25\u0e07\u0e32\u0e19\u0e27": 13, "\u0e22\u0e17": 13, "\u0e40\u0e04\u0e22\u0e17\u0e33\u0e21\u0e32\u0e43\u0e19\u0e2d\u0e14": 13, "\u0e17\u0e33\u0e01\u0e32\u0e23\u0e28": 13, "\u0e01\u0e29\u0e32\u0e04": 13, "\u0e19\u0e04\u0e27": 13, "\u0e32\u0e43\u0e2b\u0e21": 13, "\u0e32\u0e07\u0e01\u0e27": 13, "\u0e32\u0e07\u0e02\u0e27\u0e32\u0e07\u0e41\u0e15": 13, "\u0e32\u0e07\u0e43\u0e14": 13, "\u0e07\u0e43\u0e04\u0e23": 13, "\u0e02\u0e2d\u0e2d\u0e20": 13, "\u0e22\u0e43\u0e19\u0e04\u0e27\u0e32\u0e21\u0e1a\u0e01\u0e1e\u0e23": 13, "\u0e2d\u0e07\u0e17": [13, 24], "\u0e07\u0e1b\u0e27\u0e07\u0e21\u0e32": 13, "subword_token": 13, "insepar": 13, "contigu": 13, "separ": [13, 24], "further": 13, "\u0e08\u0e30": 13, "\u0e1d\u0e32": 13, "appli": [13, 16, 17, 18], "rule": [13, 16, 17, 18, 25], "smallest": 13, "\u0e02\u0e19\u0e21\u0e0a": 13, "enhanc": 13, "inrut": 13, "2001": 13, "ssg": [13, 26], "theeramunkong": 13, "tcc_p": 13, "sentencepiec": [13, 19], "text_1": 13, "\u0e04\u0e40\u0e23": 13, "\u0e21\u0e41\u0e23\u0e01\u0e02\u0e2d\u0e07": 13, "\u0e23\u0e32\u0e0a\u0e27\u0e07\u0e28": 13, "\u0e2b\u0e21": [13, 18, 24], "text_2": 13, "\u0e04\u0e27\u0e32\u0e21\u0e41\u0e1b\u0e25\u0e01\u0e41\u0e22\u0e01\u0e41\u0e25\u0e30\u0e1e": 13, "\u0e12\u0e19\u0e32\u0e01\u0e32\u0e23": 13, "\u0e41\u0e23": 13, "\u0e23\u0e32": [13, 16], "\u0e27\u0e32": 13, "\u0e41\u0e1b": 13, "\u0e41\u0e22": 13, "\u0e12": [13, 20], "\u0e19\u0e32": 13, "\u0e04\u0e27\u0e32\u0e21\u0e41\u0e1b\u0e25\u0e01\u0e41\u0e22\u0e01\u0e41\u0e25\u0e30": 13, "\u0e19\u0e32\u0e01\u0e32\u0e23": 13, "\u0e21\u0e41\u0e23\u0e01": 13, "\u0e41\u0e1b\u0e25\u0e01": [13, 18], "\u0e41\u0e22\u0e01": 13, "join_broken_num": 13, "omit": 13, "rejoin": 13, "wrongli": 13, "learn": [13, 16, 17], "intern": [13, 14, 16, 26, 27], "compon": [13, 16, 26], "unicod": [13, 16, 18, 26], "mm": 13, "multi": [13, 25], "cut": 13, "maxim": 13, "boundari": 13, "same": 13, "safe": 13, "mechan": 13, "avoid": 13, "long": [13, 18], "continu": 13, "ambigu": 13, "break": 13, "point": [13, 18], "adapt": 13, "rust": 13, "5x": 13, "faster": 13, "domain": [13, 27], "stack": 13, "sefr": 13, "ensembl": 13, "refin": 13, "colloc": 13, "\u0e42\u0e2d\u0e40\u0e04\u0e1a": [13, 25], "\u0e1e\u0e27\u0e01\u0e40\u0e23\u0e32\u0e23": 13, "\u0e01\u0e20\u0e32\u0e29\u0e32\u0e1a": 13, "\u0e32\u0e19\u0e40\u0e01": 13, "\u0e42\u0e2d\u0e40\u0e04": [13, 25], "\u0e20\u0e32\u0e29\u0e32": [13, 25], "\u0e27\u0e23\u0e23\u0e13\u0e01\u0e23\u0e23\u0e21": 13, "\u0e20\u0e32\u0e1e\u0e27\u0e32\u0e14": 13, "\u0e41\u0e25\u0e30\u0e01\u0e32\u0e23\u0e41\u0e2a\u0e14\u0e07\u0e07": 13, "\u0e01\u0e32\u0e23\u0e41\u0e2a\u0e14\u0e07": 13, "join": [13, 14], "broken": 13, "decim": [13, 18], "ip": 13, "address": 13, "\u0e40\u0e07": 13, "\u0e191": 13, "234\u0e1a\u0e32\u0e1719": 13, "32\u0e19": 13, "127": 13, "234": 13, "\u0e19\u0e42\u0e0b": 13, "\u0e2d\u0e32\u0e40\u0e1a\u0e30": 13, "\u0e19\u0e22\u0e32\u0e22\u0e19": 13, "\u0e42\u0e0b": 13, "\u0e2d\u0e32": [13, 18], "\u0e40\u0e1a\u0e30": 13, "custom_dict_japanese_nam": 13, "add": [13, 17, 18, 20], "dict_sourc": [13, 18], "word_detoken": 13, "detoken": 13, "along": 13, "encapsul": 13, "them": [13, 18, 25, 26], "singl": [13, 20], "instanti": 13, "custom_words_list": 13, "\u0e2d\u0e30\u0e40\u0e1f\u0e40\u0e0b": 13, "aphasia": 13, "\u0e19\u0e2d\u0e32\u0e01\u0e32\u0e23\u0e1c": 13, "\u0e14\u0e1b\u0e01\u0e15": 13, "\u0e02\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e1e": 13, "_token": 13, "\u0e2d\u0e32\u0e01\u0e32\u0e23": 13, "\u0e2d\u0e30": 13, "\u0e40\u0e1f\u0e40\u0e0b": 13, "explicitli": 13, "path_to_custom_dictionari": 13, "custom_dictionari": 13, "txtt": 13, "encod": [13, 17, 18], "utf": [13, 18], "f": [13, 18], "naphasia": 13, "n\u0e1c": 13, "n\u0e1b\u0e01\u0e15": 13, "init": 13, "\u0e1b\u0e01\u0e15": 13, "set_tokenizer_engin": 13, "\u0e19\u0e2d\u0e32\u0e01\u0e32\u0e23": 13, "vocaburai": 13, "main": 13, "set_tokenize_engin": 13, "condit": [13, 27], "random": 13, "field": [13, 18, 25], "accuraci": 13, "87": 13, "state": 13, "zhou": 13, "2016": [13, 22, 27], "aclweb": 13, "anthologi": 13, "c16": 13, "1031": 13, "82": 13, "notebook": [13, 17, 19, 22, 27], "vistec": [13, 15, 19], "ted_crawl": 13, "due": [13, 18], "unreli": 13, "extract_featur": 13, "window": [13, 20, 26], "max_n_gram": 13, "extract": 13, "slide": 13, "n_gram": 13, "gram": 13, "fed": 13, "origin": [13, 18], "nakhunchumpolsathien": 13, "mastersthesi": 13, "chumpolsathien_2020": 13, "distil": 13, "keyword": 13, "neural": 13, "lingual": 13, "summar": [13, 22, 26], "author": 13, "year": [13, 18], "school": 13, "beij": 13, "institut": [13, 15, 16], "technologi": [13, 15], "copyright": [13, 27], "apach": [13, 22, 27], "except": [13, 27], "complianc": [13, 27], "obtain": [13, 18, 20, 27], "unless": [13, 27], "applic": [13, 27], "agre": [13, 27], "softwar": [13, 22, 27], "distribut": [13, 18, 26, 27], "AS": [13, 27], "basi": [13, 25, 27], "warranti": [13, 27], "OR": [13, 27], "OF": [13, 27], "either": [13, 20, 27], "impli": [13, 27], "govern": [13, 14, 27], "permiss": [13, 26, 27], "limit": [13, 27], "list_to_str": 13, "middle_cut": 13, "thaisentencesegmentor": 13, "split_into_sent": 13, "ismiddlecut": 13, "fast": [13, 17, 26], "reason": 13, "accur": [13, 18, 26], "repositori": 13, "attacuttoken": 13, "sc": 13, "librari": [13, 18, 22, 25, 26], "1d": 13, "convolut": 13, "instal": [13, 20, 22], "tensorflow": 13, "themselv": [13, 18], "facebook": [13, 15], "gist": 13, "latticestr": 13, "in_dict": 13, "mmcut": 13, "default_word_dict_tri": 13, "find_all_seg": 13, "variat": 13, "load_dict": 13, "file_path": 13, "dict_nam": 13, "memori": 13, "throught": 13, "overrid": 13, "uniqu": 13, "_67a47bf9": 13, "safe_mod": 13, "parallel_mod": 13, "bind": 13, "reduc": 13, "chanc": 13, "multithread": 13, "mode": [13, 26], "patorn": 13, "utenpattanun": 13, "longestmatchtoken": 13, "breakiter": 13, "wannaphong": [13, 16, 22], "phatthiyaphaibun": [13, 22], "taglist": 13, "parm": 13, "ws1000": 13, "framework": 13, "baselin": 13, "2021": [13, 19], "heurist": [13, 18], "exponenti": 13, "wait": 13, "colab": [13, 19], "research": [13, 15, 25], "googl": [13, 19], "fileid": 13, "1v1z657_5eswpo8rlfvrwa0a5e4vkg7si": 13, "drive": 13, "14ibg": 13, "ngzxj15rkwjnwozlot32fqborbx": 13, "scrollto": 13, "myz7nzar7dmw": 13, "accorind": 13, "purpos": 13, "jakkrit": 13, "techo": 13, "grammar": 13, "wittawat": 13, "jitkrittum": 13, "link": [13, 18], "tcc_po": 13, "automodul": 13, "reli": [13, 18], "1utqgxxmrxor9jp1b1jcq1frbnvorhtbq": 13, "jeeragon": 13, "patiroop": 13, "yuanghirun": 13, "sarayut": 13, "paludkong": 13, "supot": 13, "nitsuwat": 13, "para": 13, "limmaneepraserth": 13, "forward": 13, "backward": 13, "symposium": 13, "commun": 13, "iscit": 13, "37": 13, "concept": 13, "present": 13, "miscellan": 14, "get_full_data_path": 14, "full": [14, 18, 26], "get_pythainlp_data_path": 14, "where": [14, 17, 18, 25, 26], "environ": [14, 26], "variabl": [14, 26], "pythainlp_data_dir": [14, 26], "get_pythainlp_path": 14, "misspel": 14, "ratio": 14, "simul": 14, "some": [14, 24, 26], "mispel": 14, "per": 14, "100": [14, 15, 18], "\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\u0e1b\u0e23\u0e32\u0e01\u0e0f\u0e04\u0e23": 14, "\u0e07\u0e41\u0e23\u0e01\u0e43\u0e19\u0e1e": 14, "\u0e17\u0e18\u0e28": 14, "\u0e01\u0e23\u0e32\u0e0a": 14, "1826": 14, "\u0e07\u0e41\u0e23\u0e01\u0e43\u0e19\u0e01": 14, "1727": 14, "machin": [15, 26], "src_lang": 15, "target_lang": 15, "use_gpu": 15, "target": [15, 18], "gpu": [15, 19], "zh": [15, 16], "chines": [15, 25], "fr": 15, "french": [15, 25], "th2en": 15, "\u0e19\u0e23": 15, "\u0e01\u0e41\u0e21\u0e27": 15, "love": 15, "small100": 15, "cover": 15, "en_th": 15, "download_model_al": 15, "advanc": [15, 26], "enthtransl": 15, "depa": 15, "websit": [15, 22], "releas": [15, 27], "enth": 15, "thentransl": 15, "zh_th": 15, "thzhtranslat": 15, "lalita": [15, 22], "marianmt": 15, "zh_cn": 15, "builder": 15, "lalitadeelert": 15, "mt": 15, "zhth": 15, "web": 15, "aibuildersx": 15, "166736255494822": 15, "thzh": 15, "\u0e01\u0e04": 15, "\u6211\u7231\u4f60": 15, "zhthtranslat": 15, "\u0e13\u0e19\u0e30": 15, "th_fr": 15, "thfrtranslat": 15, "helsinki": 15, "opu": 15, "group": 15, "bleu": 15, "co": 15, "thfr": 15, "\u0e17\u0e14\u0e2a\u0e2d\u0e1a\u0e23\u0e30\u0e1a\u0e1a": 15, "du": 15, "syst\u00e8m": 15, "turn": 16, "put": [16, 18], "simpli": [16, 18], "fallback_engin": 16, "render": 16, "latin": 16, "alphabet": [16, 18, 26], "system": [16, 18, 25, 26], "transcript": [16, 18], "rtg": [16, 18], "offici": 16, "publish": 16, "\u0e16\u0e2d\u0e14\u0e40\u0e2a": 16, "\u0e22\u0e07\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\u0e40\u0e1b": 16, "\u0e19\u0e2d": [16, 18], "\u0e01\u0e29\u0e23\u0e25\u0e30\u0e15": 16, "One": 16, "thai2rom_onnx": 16, "lookup": 16, "more": [16, 18, 21, 26, 27], "issu": [16, 25], "deep": 16, "pytorch": 16, "onnx": 16, "runtim": 16, "compil": [16, 26], "\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16": [16, 18], "samant": 16, "samat": 16, "\u0e20\u0e32\u0e1e\u0e22\u0e19\u0e15\u0e23": 16, "phapn": 16, "phapphayon": 16, "\u0e2d\u0e1b\u0e1b": 16, "pronounc": 16, "graphem": 16, "phonem": [16, 18], "pyicu": [16, 26], "epitran": 16, "tltk_g2p": 16, "11940": 16, "tltk_ipa": 16, "\u0101m\u0101rt": 16, "h": [16, 18], "sa\u02d0ma\u02d0rot": 16, "sa\u02d05": 16, "ma\u02d0t3": 16, "saa4": 16, "maat2": 16, "h\u0101phyntr": 16, "p\u02b0a\u02d0pjanot": 16, "p\u02b0": 16, "j": [16, 18], "pronunci": [16, 18], "w2p": 16, "letter": [16, 25], "\u0e2a\u0e32": 16, "\u0e21\u0e32\u0e14": 16, "\u0e1e\u0e32\u0e1a": 16, "\u0e1e\u0e30": 16, "puan": 16, "show_pronunci": 16, "spooner": 16, "\u0e19\u0e32\u0e23": 16, "\u0e19\u0e23\u0e32": 16, "wunsen": 16, "wunsentransliter": 16, "japanes": [16, 25], "korean": 16, "mandarin": 16, "vietnames": 16, "jp_input": 16, "zh_sandhi": 16, "third": 16, "sandhi": 16, "jp": 16, "hepburn": 16, "ko": [16, 18], "vi": 16, "script": [16, 18], "hanyu": 16, "pinyin": 16, "diacrit": 16, "macron": 16, "ors61": 16, "\u0e01\u0e40\u0e01\u0e13\u0e11": 16, "\u0e01\u0e32\u0e23\u0e17": 16, "\u0e1a\u0e28": 16, "\u0e1e\u0e17": 16, "\u0e20\u0e32\u0e29\u0e32\u0e0d": 16, "\u0e2a\u0e33\u0e19": 16, "\u0e01\u0e07\u0e32\u0e19\u0e23\u0e32\u0e0a\u0e1a": 16, "\u0e13\u0e11": 16, "\u0e15\u0e22\u0e2a\u0e20\u0e32": 16, "2561": 16, "ri35": 16, "\u0e23\u0e32\u0e0a\u0e1a": 16, "\u0e15\u0e22\u0e2a\u0e16\u0e32\u0e19": 16, "2535": 16, "ri49": 16, "\u0e20\u0e32\u0e29\u0e32\u0e08": 16, "2549": 16, "thc43": 16, "\u0e40\u0e01\u0e13\u0e11": 16, "\u0e01\u0e32\u0e23\u0e16": 16, "\u0e32\u0e22\u0e17\u0e2d\u0e14\u0e40\u0e2a": 16, "\u0e22\u0e07\u0e20\u0e32\u0e29\u0e32\u0e08": 16, "\u0e19\u0e41\u0e21\u0e19\u0e14\u0e32\u0e23": 16, "\u0e27\u0e22\u0e2d": 16, "\u0e01\u0e02\u0e23\u0e27": 16, "\u0e04\u0e13\u0e30\u0e01\u0e23\u0e23\u0e21\u0e01\u0e32\u0e23\u0e2a": 16, "\u0e19\u0e1b\u0e23\u0e30\u0e27": 16, "\u0e28\u0e32\u0e2a\u0e15\u0e23": 16, "\u0e44\u0e17\u0e22\u0e43\u0e19\u0e40\u0e2d\u0e01\u0e2a\u0e32\u0e23": 16, "2543": 16, "wt": 16, "ohay\u014d": 16, "\u0e42\u0e2d\u0e2e\u0e32\u0e42\u0e22": 16, "ohay": 16, "\u0e42\u0e2d\u0e30\u0e2e\u0e30\u0e42\u0e22": 16, "annyeonghaseyo": 16, "\u0e19\u0e19\u0e22": 16, "\u0e2d\u0e07\u0e2e\u0e32\u0e40\u0e0b\u0e42\u0e22": 16, "xin": 16, "ch\u00e0o": 16, "\u0e32\u0e27": 16, "ni3": 16, "hao3": 16, "internaiton": 16, "trans_list": 16, "xsampa_list": 16, "nitaya": 16, "kanchanawan": 16, "2006": 16, "global": 16, "fine": 17, "tune": 17, "thaitoken": 17, "frozen": 17, "fastai": 17, "basetoken": 17, "transform": [17, 18, 19, 21], "static": 17, "dictonari": 17, "meth": 17, "\u0e2d\u0e32\u0e20\u0e23\u0e13": 17, "\u0e19\u0e15\u0e21\u0e22\u0e1b": 17, "\u0e20\u0e32\u0e27\u0e19\u0e32\u0e21\u0e22\u0e1b": 17, "\u0e15\u0e21": 17, "add_special_cas": 17, "tok": 17, "document_vector": 17, "agg": 17, "400": [17, 18], "dimens": [17, 20], "bunch": 17, "learner": 17, "aggreg": [17, 20], "avial": 17, "numpi": [17, 20], "arrai": [17, 20], "document_vectorr": 17, "load_data": 17, "thwiki_lm_data": 17, "pkl": 17, "language_model_learn": 17, "config": [17, 26], "emb_sz": 17, "n_hid": 17, "1550": 17, "n_layer": 17, "pad_token": 17, "qrnn": 17, "tie_weight": 17, "out_bia": 17, "output_p": 17, "hidden_p": 17, "input_p": 17, "embed_p": 17, "weight_p": 17, "trn_arg": 17, "drop_mult": 17, "clip": 17, "12": [17, 18], "alpha": 17, "beta": 17, "awd_lstm": 17, "\u0e19\u0e19": 17, "\u0e19\u0e14": [17, 18], "jupyt": 17, "fix_html": 17, "anbsp": 17, "amp": 17, "nbsp": 17, "lowercase_al": 17, "lowercas": 17, "don": 17, "usual": 17, "nuanc": 17, "capit": 17, "merge_wgt": 17, "em_sz": 17, "wgt": 17, "itos_pr": 17, "itos_new": 17, "insert": 17, "vocab": 17, "updat": 17, "merg": 17, "randn": 17, "\u0e1b\u0e25\u0e32": 17, "tensor": 17, "5952": 17, "4453": 17, "0011": 17, "encoder_dp": 17, "decod": 17, "process_thai": 17, "pre_rul": 17, "reorder_vowel": [17, 18], "spec_add_spac": 17, "rm_useless_spac": 17, "rm_useless_newlin": 17, "rm_bracket": 17, "replace_url": 17, "replace_rep_nonum": 17, "tok_func": 17, "bound": 17, "post_rul": 17, "ungroup_emoji": 17, "replace_wrep_post_nonum": 17, "spars": [17, 20], "\u0e32\u0e19\u0e19\u0e19\u0e19\u0e19": 17, "\u0e19\u0e32\u0e19\u0e19\u0e32\u0e19\u0e19\u0e32\u0e19": 17, "xxrep": 17, "xxwrep": 17, "\u0e19\u0e32\u0e19": 17, "modifi": [17, 18], "arug": 17, "replace_rep_aft": 17, "replace_wrep_post": 17, "bracket": 17, "artifact": 17, "bag": 17, "done": 17, "prevent": 17, "\u0e2d\u0e22\u0e22\u0e22\u0e22\u0e22\u0e22\u0e22\u0e22": 17, "becom": 17, "retain": 17, "counter": [17, 18], "\u0e01\u0e32\u0e32\u0e32\u0e32\u0e32\u0e32\u0e32": 17, "\u0e01\u0e32xxrep7": 17, "reptit": 17, "replace_wrep": 17, "front": [17, 18], "ungroup": 17, "zero": [17, 18, 27], "width": [17, 18], "joiner": [17, 18], "zvj": 17, "emoji": [17, 18], "emojipedia": 17, "zwj": 17, "convers": 18, "arabic_digit_to_thai_digit": 18, "arab": 18, "digit": 18, "\u0e53": 18, "\u0e51\u0e50": 18, "\u0e52": 18, "\u0e19\u0e08\u0e33\u0e19\u0e27\u0e19": 18, "123": 18, "\u0e51\u0e52\u0e53": 18, "\u0e54\u0e50\u0e50": 18, "\u0e52\u0e55": 18, "bahttext": 18, "suffix": 18, "baht": 18, "fix": [18, 26], "place": 18, "fit": 18, "\u0e2a\u0e15\u0e32\u0e07\u0e04": 18, "satang": 18, "microsoft": [18, 26], "excel": 18, "currenc": 18, "amount": 18, "\u0e07\u0e1a\u0e32\u0e17\u0e16": 18, "\u0e1a\u0e40\u0e2d": 18, "\u0e14\u0e1a\u0e32\u0e17\u0e16": 18, "200": 18, "\u0e2a\u0e2d\u0e07\u0e23": 18, "\u0e2d\u0e22\u0e1a\u0e32\u0e17\u0e16": 18, "convert_year": 18, "src": 18, "buddhist": 18, "calendar": 18, "anno": 18, "domini": 18, "rattanakosin": 18, "era": 18, "ah": 18, "hejira": 18, "warn": 18, "properli": 18, "1941": 18, "becaus": [18, 25], "travel": 18, "historian": 18, "collat": 18, "revers": 18, "almost": 18, "symbol": 18, "ascend": 18, "\u0e44\u0e01": 18, "\u0e01\u0e32\u0e25": 18, "count_thai_char": 18, "count": 18, "conson": 18, "lead_vowel": 18, "follow_vowel": 18, "above_vowel": 18, "below_vowel": 18, "tonemark": 18, "sign": 18, "thai_digit": 18, "non_thai": 18, "\u0e17\u0e14\u0e2a\u0e2d\u0e1a\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22": 18, "countthai": 18, "ignore_char": 18, "x0b": 18, "x0c0123456789": 18, "proport": 18, "puntuat": 18, "percent": 18, "\u0e44\u0e17\u0e22\u0e40\u0e2d": 18, "\u0e19\u0e41\u0e2d\u0e25\u0e1e": 18, "\u0e07\u0e32\u0e19": [18, 21, 24], "digit_to_text": 18, "\u0e54": 18, "display_thai_char": 18, "ch": 18, "underscor": 18, "high": 18, "eas": 18, "readabl": 18, "emoji_to_thai": 18, "delimit": 18, "\u0e08\u0e30\u0e21\u0e32\u0e19": 18, "\u0e07\u0e23\u0e16\u0e40\u0e21\u0e25": 18, "\u0e2d\u0e19\u0e1c\u0e21\u0e01": 18, "\u0e19\u0e30\u0e04\u0e23": 18, "\u0e43\u0e01\u0e25": 18, "\u0e14\u0e1b\u0e23\u0e30\u0e0a\u0e32\u0e0a\u0e19\u0e14": 18, "\u0e21\u0e22": 18, "\u0e07\u0e1f": 18, "\u0e27\u0e02": 18, "\u0e32\u0e27\u0e2d\u0e22\u0e32\u0e01\u0e01": 18, "\u0e19\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e0d": 18, "\u0e2d\u0e18\u0e07\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e44\u0e17\u0e22": 18, "\u0e18\u0e07_\u0e44\u0e17\u0e22": 18, "eng_to_thai": 18, "incorrectli": 18, "u": 18, "qwerti": 18, "keyboard": 18, "layout": 18, "intend": 18, "kedmane": 18, "incorrect": 18, "intention": 18, "\u0e18\u0e19\u0e32\u0e04\u0e32\u0e23\u0e41\u0e2b": 18, "\u0e07\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e44\u0e17\u0e22": 18, "got": 18, "tok8kicsj": 18, "xitgmlwmp": 18, "find_keyword": 18, "word_list": 18, "mininum": 18, "pair": 18, "raw": 18, "\u0e25\u0e32\u0e22\u0e25": 18, "\u0e01\u0e29\u0e13": 18, "\u0e01\u0e29\u0e23": 18, "\u0e01\u0e29\u0e23\u0e41\u0e25\u0e30": 18, "ipa_to_rtg": 18, "kluaj": 18, "kluai": 18, "is_native_thai": 18, "\u0e04\u0e33\u0e44\u0e17\u0e22\u0e41\u0e17": 18, "simpl": 18, "cannot": 18, "entir": 18, "reliabl": 18, "avocado": 18, "\u0e21\u0e30\u0e21": 18, "\u0e27\u0e07": 18, "\u0e15\u0e30\u0e27": 18, "\u0e22\u0e32\u0e20\u0e23\u0e13": 18, "isthai": 18, "\u0e01\u0e32\u0e25\u0e40\u0e27\u0e25\u0e32": 18, "66": 18, "01234567890": 18, "isthaichar": 18, "characttr": 18, "kai": 18, "\u0e55": 18, "five": 18, "maiyamok": 18, "\u0e01\u0e46\u0e0a\u0e2d\u0e1a\u0e44\u0e1b\u0e42\u0e23\u0e07\u0e40\u0e23": 18, "\u0e17\u0e33\u0e44\u0e21": 18, "\u0e17\u0e33": [18, 24], "nectec_to_ipa": 18, "nectec": 18, "kl": 18, "uua": 18, "pornpimon": 18, "palingoon": 18, "sumonma": 18, "thatphithakkul": 18, "chapter": 18, "handbook": 18, "electron": 18, "1st": 18, "ed": 18, "122": 18, "56": 18, "reorder": 18, "dangl": 18, "remove_zw": 18, "remove_dup_spac": 18, "remove_repeat_vowel": 18, "remove_dangl": 18, "those": 18, "unicodedata": 18, "fule": 18, "\u0e40\u0e40\u0e1b\u0e25\u0e01": 18, "sara": 18, "\u0e19\u0e32\u0e19\u0e32\u0e32\u0e32": 18, "\u0e19\u0e32\u0e19\u0e32": 18, "now_reign_year": 18, "reign": 18, "10th": 18, "chakri": 18, "dynasti": 18, "reign_year": 18, "\u0e0a\u0e01\u0e32\u0e25\u0e1b": 18, "\u0e0a\u0e01\u0e32\u0e23\u0e1b": 18, "num_to_thaiword": 18, "integ": 18, "rank": 18, "exclude_stopword": 18, "frequeci": 18, "reign_year_to_ad": 18, "reigh": 18, "7th": 18, "4th": 18, "2019": 18, "rama": 18, "ix": 18, "1946": 18, "typo": 18, "especi": 18, "visual": [18, 26], "who": 18, "accident": 18, "abov": 18, "AND": 18, "sure": 18, "doubl": 18, "ae": 18, "remove_tone_ipa": 18, "delet": 18, "la\u02d0": 18, "maj": 18, "remove_tonemark": 18, "four": 18, "down": [18, 25], "\u0e40\u0e2d\u0e01": 18, "fall": 18, "\u0e42\u0e17": 18, "rise": 18, "\u0e15\u0e27\u0e32": 18, "wrong": 18, "mistak": 18, "\u0e2a\u0e2d\u0e07\u0e1e": 18, "\u0e19\u0e2b\u0e19": 18, "\u0e07\u0e23": 18, "\u0e2d\u0e22\u0e2a": 18, "\u0e1a\u0e40\u0e08": 18, "\u0e32\u0e19\u0e2a": 18, "\u0e41\u0e2a\u0e19\u0e41\u0e1b\u0e14\u0e2b\u0e21": 18, "\u0e19\u0e2a\u0e32\u0e21\u0e1e": 18, "\u0e19\u0e2b\u0e01\u0e23": 18, "\u0e07\u0e23\u0e2d\u0e22\u0e2a": 18, "\u0e14\u0e25\u0e32\u0e19\u0e2a": 18, "\u0e19\u0e2b\u0e01\u0e23\u0e2d\u0e22\u0e2a": 18, "visibl": 18, "caus": 18, "unexpect": 18, "view": 18, "robust": 18, "zwsp": 18, "zwjp": 18, "logic": 18, "nikhahit": 18, "aa": 18, "am": 18, "sound_syl": 18, "live": 18, "\u0e40\u0e25\u0e02": 18, "syllable_length": 18, "short": 18, "\u0e04\u0e30": 18, "syllable_open_close_detector": 18, "close": 18, "detector": 18, "text_to_arabic_digit": 18, "\u0e41\u0e1b\u0e14": 18, "text_to_num": 18, "\u0e2d\u0e22\u0e41\u0e1b\u0e14\u0e2a": 18, "\u0e1a\u0e08": 18, "\u0e14\u0e40\u0e01": 18, "\u0e32\u0e2b": 18, "\u0e32\u0e1a\u0e32\u0e17\u0e19": 18, "\u0e2d\u0e08\u0e33\u0e19\u0e27\u0e19\u0e17": 18, "980": 18, "\u0e1a\u0e25": 18, "\u0e32\u0e19\u0e2a\u0e2d\u0e07\u0e2b\u0e21": 18, "\u0e07\u0e1e": 18, "\u0e19\u0e41\u0e1b\u0e14\u0e23": 18, "\u0e1a\u0e40\u0e01": [18, 21], "\u0e32\u0e1a\u0e32\u0e17": 18, "10021889": 18, "text_to_thai_digit": 18, "\u0e50": 18, "\u0e58": 18, "\u0e59": 18, "thai_digit_to_arabic_digit": 18, "thai_strftim": 18, "dt_obj": 18, "datetim": 18, "fmt": 18, "y": 18, "thaidigit": 18, "direct": 18, "datatim": 18, "strrftime": 18, "weekdai": 18, "\u0e1e\u0e24": 18, "\u0e19\u0e08": 18, "\u0e07\u0e04\u0e32\u0e23": 18, "\u0e19\u0e40\u0e2a\u0e32\u0e23": 18, "\u0e19\u0e2d\u0e32\u0e17": 18, "month": 18, "\u0e21\u0e01\u0e23\u0e32\u0e04\u0e21": 18, "\u0e21\u0e20\u0e32\u0e1e": 18, "\u0e1e\u0e24\u0e28\u0e08": 18, "\u0e01\u0e32\u0e22\u0e19": 18, "\u0e19\u0e27\u0e32\u0e04\u0e21": 18, "centuri": 18, "2556": 18, "2410": 18, "represent": [18, 20], "2519": 18, "2562": 18, "27": [18, 19, 22], "2555": 18, "pass": 18, "strftime": 18, "BE": 18, "543": 18, "certainli": 18, "dai": 18, "meant": 18, "interrim": 18, "solut": 18, "sinc": 18, "th_th": 18, "setlocal": 18, "lc_time": 18, "try": [18, 26], "platform": 18, "independ": 18, "extent": 18, "extens": 18, "posix": 18, "bsd": 18, "gnu": 18, "libc": 18, "strptime": 18, "behavior": 18, "cplusplu": 18, "ctime": 18, "metacpan": 18, "pod": 18, "linux": 18, "die": 18, "net": 18, "man": 18, "openbsd": 18, "freebsd": 18, "unix": 18, "page": [18, 22], "maco": 18, "appl": 18, "archiv": 18, "conceptu": 18, "manpages_iphoneo": 18, "man3": 18, "php": 18, "secur": 18, "manual": 18, "javascript": 18, "samsonj": 18, "quick": [18, 25], "instantiatetd": 18, "datetime_obj": 18, "hour": 18, "minut": 18, "59": 18, "microsecond": 18, "09": 18, "\u0e19\u0e32\u0e22\u0e19": 18, "pad": 18, "62": [18, 26], "_d": 18, "0d": 18, "\u0e19\u0e32\u0e2c": 18, "\u0e19\u0e32\u0e17": 18, "\u0e55\u0e59": 18, "thai_strptim": 18, "add_year": 18, "tzinfo": 18, "backport": 18, "zoneinfo": 18, "asia": 18, "bangkok": 18, "isanno": 18, "31": 18, "2566": 18, "23": [18, 19], "2565": 18, "thai_to_eng": 18, "bank": 18, "\u0e1f": [18, 24], "\u0e1f\u0e23\u0e2a\u0e1f": 18, "thai_word_tone_detector": 18, "thaiword_to_d": 18, "\u0e1e\u0e23": [18, 20], "tomorrow": 18, "thaiword_to_num": 18, "actual": 18, "correspond": 18, "\u0e2a\u0e2d\u0e07\u0e25": 18, "\u0e32\u0e19\u0e2a\u0e32\u0e21\u0e41\u0e2a\u0e19\u0e2b\u0e01\u0e23": 18, "\u0e1a\u0e2a\u0e2d\u0e07": 18, "2300612": 18, "thaiword_to_tim": 18, "\u0e32\u0e22\u0e42\u0e21\u0e07\u0e04\u0e23": 18, "13": [18, 26], "time_to_thaiword": 18, "time_data": 18, "24h": 18, "24": 18, "clock": 18, "6h": 18, "m6h": 18, "alwai": 18, "\u0e41\u0e1b\u0e14\u0e19\u0e32\u0e2c": 18, "\u0e01\u0e32\u0e2a": 18, "\u0e14\u0e19\u0e32\u0e17": 18, "\u0e2a\u0e2d\u0e07\u0e42\u0e21\u0e07\u0e40\u0e0a": 18, "\u0e41\u0e1b\u0e14\u0e42\u0e21\u0e07\u0e2a": 18, "\u0e2b\u0e01\u0e42\u0e21\u0e07\u0e04\u0e23": 18, "\u0e1a\u0e2a\u0e2d\u0e07\u0e19\u0e32\u0e2c": 18, "\u0e01\u0e32\u0e2a\u0e32\u0e21\u0e19\u0e32\u0e17": 18, "tis620_to_utf8": 18, "ti": 18, "620": 18, "\u00e3\u00f0": 18, "\u00e3\u00e7": 18, "\u00ed\u00f8\u00b5\u00ea\u00f2\u00eb": 18, "\u00e3\u00e3\u00e1": 18, "\u0e01\u0e23\u0e30\u0e17\u0e23\u0e27\u0e07\u0e2d": 18, "\u0e15\u0e2a\u0e32\u0e2b\u0e01\u0e23\u0e23\u0e21": 18, "tone_detector": 18, "words_to_num": 18, "spell_word": 18, "spell_syl": 18, "\u0e21\u0e2d": 18, "\u0e27\u0e2d": 18, "\u0e41\u0e2d": 18, "\u0e04\u0e2d": 18, "\u0e14\u0e2d": 18, "children": 18, "noth": 18, "finetun": 19, "thai2transform": 19, "speed": 19, "benchmark": [19, 22, 24, 26], "89": 19, "312": 19, "64": [19, 26], "65": 19, "lowphansirikul": [19, 22], "polpanuma": [19, 22], "jantrakulchai": 19, "nutanong": 19, "210109635": 19, "internet": 19, "jan": 19, "feb": 19, "ab": 19, "2101": 19, "09635": 19, "gensim": 20, "wordvector": 20, "thai2fit_wv": [20, 24], "v0": 20, "ltw2v_v1": 20, "0_15_window": 20, "0_5_window": 20, "load_wordvector": 20, "get_model": 20, "keyedvector": 20, "word2veckeyedvector": 20, "doesnt_match": 20, "mostli": 20, "unrel": 20, "rais": 20, "keyerror": 20, "vocabulari": 20, "strt": 20, "\u0e01\u0e44\u0e17\u0e22": 20, "food": 20, "meal": 20, "\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e40\u0e0a": 20, "\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e40\u0e17": 20, "\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e40\u0e22": 20, "wv": 20, "vehicl": 20, "occup": 20, "\u0e44\u0e0b\u0e19": 20, "\u0e40\u0e19\u0e2d\u0e23": 20, "\u0e1e\u0e19": 20, "\u0e01\u0e07\u0e32\u0e19\u0e40\u0e07": 20, "\u0e19\u0e40\u0e14": 20, "\u0e2b\u0e21\u0e2d": 20, "most_similar_cosmul": 20, "omer": 20, "levi": 20, "yoav": 20, "goldberg": 20, "omerlevy_yoavgoldberg_2014": 20, "directli": [20, 24, 26], "substract": 20, "most_similar": 20, "list_posit": 20, "list_neg": 20, "\u0e25\u0e33\u0e19": 20, "8206598162651062": 20, "\u0e17\u0e30\u0e40\u0e25\u0e2a\u0e32\u0e1a": 20, "775945782661438": 20, "\u0e21\u0e19": 20, "7490593194961548": 20, "\u0e04\u0e25\u0e2d\u0e07": 20, "7471904754638672": 20, "\u0e1b\u0e32\u0e01\u0e41\u0e21": 20, "7354257106781006": 20, "\u0e07\u0e41\u0e21": 20, "7120099067687988": 20, "\u0e17\u0e30\u0e40\u0e25": 20, "7030453681945801": 20, "\u0e21\u0e41\u0e21": 20, "7015200257301331": 20, "\u0e41\u0e2b\u0e25": 20, "6997432112693787": 20, "6960948705673218": 20, "\u0e10\u0e21\u0e19\u0e15\u0e23": 20, "\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28": 20, "\u0e23\u0e2d\u0e07\u0e19\u0e32\u0e22\u0e01\u0e23": 20, "2730445861816406": 20, "\u0e40\u0e2d\u0e01\u0e2d": 20, "\u0e04\u0e23\u0e23\u0e32\u0e0a\u0e17": 20, "26500266790390015": 20, "\u0e19\u0e32\u0e22\u0e01\u0e23": 20, "2649088203907013": 20, "\u0e32\u0e23\u0e32\u0e0a\u0e01\u0e32\u0e23\u0e08": 20, "\u0e07\u0e2b\u0e27": 20, "25119125843048096": 20, "\u0e32\u0e01\u0e32\u0e23": 20, "2510434687137604": 20, "\u0e40\u0e25\u0e02\u0e32\u0e18": 20, "24824175238609314": 20, "2453523576259613": 20, "\u0e1b\u0e23\u0e30\u0e18\u0e32\u0e19\u0e01\u0e23\u0e23\u0e21\u0e01\u0e32\u0e23": 20, "24147476255893707": 20, "\u0e23\u0e2d\u0e07\u0e1b\u0e23\u0e30\u0e18\u0e32\u0e19": 20, "24123257398605347": 20, "\u0e2a\u0e21\u0e32\u0e0a": 20, "\u0e2a\u0e20\u0e32": 20, "2405330240726471": 20, "\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e08": 20, "22022421658039093": 20, "\u0e40\u0e01\u0e32\u0e2b\u0e25": 20, "2196873426437378": 20, "\u0e2a\u0e2b\u0e23": 20, "\u0e10\u0e2d\u0e40\u0e21\u0e23": 20, "21660110354423523": 20, "\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e0d": 20, "21205860376358032": 20, "\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e44\u0e17\u0e22": 20, "21159221231937408": 20, "20321202278137207": 20, "\u0e07\u0e01\u0e24\u0e29": 20, "19610872864723206": 20, "\u0e2e": 20, "\u0e2d\u0e07\u0e01\u0e07": 20, "1928885132074356": 20, "\u0e1d\u0e23": 20, "\u0e07\u0e40\u0e28\u0e2a": 20, "18383873999118805": 20, "\u0e1e\u0e21": 20, "18369348347187042": 20, "3278159201145172": 20, "3201899230480194": 20, "31755179166793823": 20, "30845439434051514": 20, "306713730096817": 20, "3003999888896942": 20, "2995176911354065": 20, "\u0e04\u0e19\u0e44\u0e17\u0e22": 20, "2885020673274994": 20, "\u0e40\u0e27": [20, 21], "\u0e22\u0e14\u0e19\u0e32\u0e21": 20, "2878379821777344": 20, "\u0e0a\u0e32\u0e27\u0e44\u0e17\u0e22": 20, "28480708599090576": 20, "\u0e40\u0e21\u0e19": 20, "\u0e2d\u0e32\u0e2b\u0e32\u0e23\u0e44\u0e17\u0e22": 20, "computa": 20, "cosin": 20, "consin": 20, "\u0e23\u0e16\u0e44\u0e1f": 20, "\u0e23\u0e16\u0e44\u0e1f\u0e1f": 20, "electr": 20, "43387136": 20, "\u0e2d\u0e14\u0e32\u0e27": 20, "leopard": 20, "04300258": 20, "sentence_vector": 20, "use_mean": 20, "aggregatesd": 20, "calul": 20, "summat": 20, "\u0e27\u0e19\u0e40\u0e2a": 20, "\u0e22\u0e27\u0e40\u0e02": 20, "\u0e14\u0e41\u0e04\u0e27": 20, "\u0e43\u0e19\u0e1b": 20, "735": 20, "meanthod": 20, "00421414": 20, "08881307": 20, "05081136": 20, "05632929": 20, "06607185": 20, "03059357": 20, "113882": 20, "00074836": 20, "05035743": 20, "02914307": 20, "02893357": 20, "11327957": 20, "04562086": 20, "05015393": 20, "11641257": 20, "32304936": 20, "05054322": 20, "03639471": 20, "06531371": 20, "05048079": 20, "05899798": 20, "24338295": 20, "711359": 20, "78861002": 20, "92500597": 20, "42831": 20, "59434797": 20, "01047703": 20, "705004": 20, "40800299": 20, "40506999": 20, "58591403": 20, "63869202": 20, "702155": 20, "62977601": 20, "52269109": 20, "70760502": 20, "50952601": 20, "914392": 20, "70673105": 20, "2014": 20, "regular": 20, "explicit": 20, "get_sens": 21, "custom_token": 21, "idea": 21, "awar": 21, "unsupervis": 21, "paraphras": 21, "mpnet": 21, "\u0e40\u0e02\u0e32\u0e01\u0e33\u0e25": 21, "\u0e07\u0e2d\u0e1a\u0e02\u0e19\u0e21\u0e04": 21, "\u0e01\u0e01": 21, "\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21\u0e04\u0e2d\u0e21\u0e1e": 21, "\u0e27\u0e40\u0e15\u0e2d\u0e23": 21, "\u0e43\u0e19\u0e17\u0e32\u0e07\u0e2d": 21, "\u0e15\u0e2a\u0e33\u0e2b\u0e23": 21, "\u0e1a\u0e02": 21, "\u0e25\u0e02\u0e2d\u0e07\u0e1c": 21, "0974416732788086": 21, "\u0e2d\u0e02\u0e19\u0e21\u0e0a\u0e19": 21, "\u0e14\u0e2b\u0e19": 21, "\u0e07\u0e08\u0e33\u0e1e\u0e27\u0e01\u0e02\u0e19\u0e21\u0e40\u0e04": 21, "\u0e17\u0e33\u0e40\u0e1b": 21, "\u0e19\u0e40\u0e25": 21, "\u0e41\u0e1a\u0e19": 21, "\u0e27\u0e2d\u0e1a\u0e43\u0e2b": 21, "09319090843200684": 21, "\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e04": 21, "\u0e43\u0e19\u0e01\u0e32\u0e23\u0e17\u0e33\u0e07\u0e32\u0e19": 21, "1005704402923584": 21, "12473666667938232": 21, "faq": 22, "command": [22, 26], "tutori": 22, "augment": [22, 26], "chat": 22, "coref": 22, "khave": 22, "soundex": [22, 24], "tool": [22, 26], "translat": [22, 25, 26], "ulmfit": [22, 26], "word_vector": 22, "wsd": [22, 26], "index": 22, "modul": 22, "your": [22, 26], "project": [22, 27], "charin": 22, "arthit": 22, "suriyawongkul": 22, "pattarawat": 22, "chormai": 22, "jun": 22, "zenodo": 22, "doi": 22, "5281": 22, "3519354": 22, "maintain": 22, "team": 22, "frequent": 23, "pythainlp": [23, 24, 25, 26, 27], "thainlp": [24, 26], "nw": 24, "attacut": [24, 26], "\u0e2a\u0e20\u0e32\u0e1e\u0e01\u0e32\u0e23\u0e08": 24, "\u0e32\u0e07\u0e41\u0e25\u0e30\u0e2a\u0e20\u0e32\u0e1e\u0e01\u0e32\u0e23\u0e17\u0e33\u0e07\u0e32\u0e19": 24, "\u0e2a\u0e20\u0e32\u0e1e": 24, "\u0e01\u0e32\u0e23\u0e17\u0e33\u0e07\u0e32\u0e19": 24, "\u0e20\u0e32": 24, "\u0e07\u0e32": 24, "\u0e41\u0e23\u0e07\u0e07\u0e32\u0e19\u0e01\u0e30\u0e14": 24, "\u0e19\u0e40\u0e1f": 24, "\u0e07\u0e2b\u0e21": 24, "\u0e19\u0e43\u0e19\u0e04\u0e33": 24, "\u0e19\u0e21": 24, "\u0e40\u0e04\u0e2d\u0e23": 24, "\u0e41\u0e23\u0e07\u0e07\u0e32\u0e19": 24, "\u0e01\u0e30": 24, "\u0e04\u0e33": 24, "\u0e1c\u0e25": 24, "\u0e2d\u0e1e": 24, "\u0e01\u0e40\u0e09": 24, "\u0e2b\u0e25\u0e32\u0e22\u0e1b": 24, "\u0e32\u0e19\u0e21\u0e32": 24, "\u0e0a\u0e32\u0e27\u0e0a": 24, "\u0e21\u0e0a\u0e19\u0e42\u0e04\u0e01\u0e22\u0e32\u0e27\u0e2b\u0e25\u0e32\u0e22\u0e04\u0e19\u0e44\u0e14": 24, "\u0e1e\u0e32\u0e01": 24, "\u0e32\u0e22\u0e2d\u0e2d\u0e01": 24, "\u0e32\u0e07\u0e01": 24, "\u0e22\u0e0a": 24, "\u0e1a\u0e32\u0e07\u0e04\u0e19\u0e16": 24, "\u0e01\u0e08\u0e33\u0e04": 24, "\u0e01\u0e43\u0e19\u0e02": 24, "\u0e01\u0e1b": 24, "\u0e32\u0e2b\u0e23": 24, "\u0e2d\u0e41\u0e21": 24, "\u0e01\u0e23\u0e30\u0e17": 24, "\u0e0d\u0e2b\u0e32\u0e22": 24, "tagg": 24, "\u0e40\u0e1c": 24, "\u0e27330000": 24, "\u0e274000": 24, "manag": 24, "rm": 24, "user1": 24, "crfcut": 24, "g2p": 24, "36": 24, "wisesight": 24, "1000": 24, "deepcut": 24, "against": 24, "993": 24, "total": 24, "char_level": 24, "tp": 24, "17654": 24, "0000": 24, "fn": 24, "1153": 24, "tn": 24, "50755": 24, "fp": 24, "1478": 24, "9227": 24, "9387": 24, "word_level": 24, "total_words_in_sampl": 24, "19132": 24, "total_words_in_ref_sampl": 24, "18807": 24, "correctly_tokenised_word": 24, "15637": 24, "8173": 24, "8314": 24, "\u0e40\u0e23\u0e32\u0e23": 25, "\u0e01\u0e20\u0e32\u0e29\u0e32\u0e16": 25, "\u0e20\u0e32\u0e29\u0e32\u0e16": 25, "\u0e40\u0e04": 25, "histor": 25, "face": 25, "lot": 25, "challeng": 25, "arguabl": 25, "biggest": 25, "problem": [25, 26], "lack": 25, "eo": 25, "prong": 25, "comma": 25, "period": 25, "habit": 25, "connector": 25, "etc": [25, 26], "often": 25, "even": 25, "decid": 25, "boil": 25, "asian": 25, "degre": 25, "extrem": 25, "potato": 25, "pomm": 25, "de": 25, "terr": 25, "best": 25, "\u0e15\u0e32": 25, "\u0e01\u0e25\u0e21": 25, "\u0e15\u0e32\u0e01": 25, "\u0e25\u0e21": 25, "As": 25, "recent": 25, "captur": 25, "seem": 25, "pois": 25, "overcom": 25, "stabl": 26, "pip": 26, "upgrad": 26, "extra": 26, "extra1": 26, "extra2": 26, "ml": 26, "thai2rom": 26, "learnt": 26, "roman": 26, "umlfit": 26, "oskut": 26, "nlpo3": 26, "esolut": 26, "everyth": 26, "setup": 26, "py": 26, "built": 26, "wheel": 26, "lfd": 26, "uci": 26, "gohlk": 26, "pythonlib": 26, "architectur": 26, "win32": 26, "amd64": 26, "xxx": 26, "cp36": 26, "cp36m": 26, "whl": 26, "technic": 26, "skill": 26, "thing": 26, "accommod": 26, "icu_vers": 26, "obvious": 26, "good": 26, "side": 26, "optim": 26, "better": 26, "databas": 26, "store": 26, "automat": 26, "pythainlp_read_mod": 26, "q": 26, "crfsuit": 26, "executor": 26, "permissionerror": 26, "deni": 26, "corpora": 27, "creativ": 27, "dedic": 27, "cc0": 27, "advis": 27}, "objects": {"pythainlp.augment": [[0, 0, 1, "", "WordNetAug"]], "pythainlp.augment.WordNetAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "find_synonyms"]], "pythainlp.augment.lm": [[0, 0, 1, "", "FastTextAug"], [0, 0, 1, "", "Thai2transformersAug"]], "pythainlp.augment.lm.FastTextAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "modify_sent"], [0, 1, 1, "", "tokenize"]], "pythainlp.augment.lm.Thai2transformersAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "generate"]], "pythainlp.augment.word2vec": [[0, 0, 1, "", "LTW2VAug"], [0, 0, 1, "", "Thai2fitAug"], [0, 0, 1, "", "Word2VecAug"]], "pythainlp.augment.word2vec.LTW2VAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "load_w2v"], [0, 1, 1, "", "tokenizer"]], "pythainlp.augment.word2vec.Thai2fitAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "load_w2v"], [0, 1, 1, "", "tokenizer"]], "pythainlp.augment.word2vec.Word2VecAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "modify_sent"]], "pythainlp.augment.word2vec.bpemb_wv": [[0, 0, 1, "", "BPEmbAug"]], "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug": [[0, 1, 1, "", "__init__"], [0, 1, 1, "", "augment"], [0, 1, 1, "", "load_w2v"], [0, 1, 1, "", "tokenizer"]], "pythainlp.benchmarks.word_tokenization": [[1, 2, 1, "", "benchmark"], [1, 2, 1, "", "compute_stats"], [1, 2, 1, "", "preprocessing"]], "pythainlp.chat": [[2, 0, 1, "", "ChatBotModel"]], "pythainlp.chat.ChatBotModel": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "chat"], [2, 1, 1, "", "load_model"], [2, 1, 1, "", "reset_chat"]], "pythainlp.cls": [[3, 0, 1, "", "GzipModel"]], "pythainlp.cls.GzipModel": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "predict"], [3, 1, 1, "", "train"]], "pythainlp.coref": [[4, 2, 1, "", "coreference_resolution"]], "pythainlp.corpus.conceptnet": [[5, 2, 1, "", "edges"]], "pythainlp.corpus": [[5, 2, 1, "", "countries"], [5, 2, 1, "", "download"], [5, 2, 1, "", "get_corpus"], [5, 2, 1, "", "get_corpus_db"], [5, 2, 1, "", "get_corpus_db_detail"], [5, 2, 1, "", "get_corpus_default_db"], [5, 2, 1, "", "get_corpus_path"], [5, 2, 1, "", "provinces"], [5, 2, 1, "", "remove"], [5, 2, 1, "", "thai_dict"], [5, 2, 1, "", "thai_family_names"], [5, 2, 1, "", "thai_female_names"], [5, 2, 1, "", "thai_male_names"], [5, 2, 1, "", "thai_negations"], [5, 2, 1, "", "thai_orst_words"], [5, 2, 1, "", "thai_stopwords"], [5, 2, 1, "", "thai_syllables"], [5, 2, 1, "", "thai_words"], [5, 2, 1, "", "thai_wsd_dict"]], "pythainlp.corpus.oscar": [[5, 2, 1, "", "unigram_word_freqs"], [5, 2, 1, "", "word_freqs"]], "pythainlp.corpus.th_en_translit": [[5, 2, 1, "", "get_transliteration_dict"]], "pythainlp.corpus.tnc": [[5, 2, 1, "", "bigram_word_freqs"], [5, 2, 1, "", "trigram_word_freqs"], [5, 2, 1, "", "unigram_word_freqs"], [5, 2, 1, "", "word_freqs"]], "pythainlp.corpus.ttc": [[5, 2, 1, "", "unigram_word_freqs"], [5, 2, 1, "", "word_freqs"]], "pythainlp.corpus.util": [[5, 2, 1, "", "find_badwords"], [5, 2, 1, "", "revise_newmm_default_wordset"], [5, 2, 1, "", "revise_wordset"]], "pythainlp.corpus.wordnet": [[5, 2, 1, "", "all_lemma_names"], [5, 2, 1, "", "all_synsets"], [5, 2, 1, "", "custom_lemmas"], [5, 2, 1, "", "langs"], [5, 2, 1, "", "lch_similarity"], [5, 2, 1, "", "lemma"], [5, 2, 1, "", "lemma_from_key"], [5, 2, 1, "", "lemmas"], [5, 2, 1, "", "morphy"], [5, 2, 1, "", "path_similarity"], [5, 2, 1, "", "synset"], [5, 2, 1, "", "synsets"], [5, 2, 1, "", "wup_similarity"]], "pythainlp.generate": [[6, 0, 1, "", "Bigram"], [6, 0, 1, "", "Trigram"], [6, 0, 1, "", "Unigram"]], "pythainlp.generate.Bigram": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "gen_sentence"], [6, 1, 1, "", "prob"]], "pythainlp.generate.Trigram": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "gen_sentence"], [6, 1, 1, "", "prob"]], "pythainlp.generate.Unigram": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "gen_sentence"]], "pythainlp.generate.thai2fit": [[6, 2, 1, "", "gen_sentence"]], "pythainlp.generate.wangchanglm": [[6, 0, 1, "", "WangChanGLM"]], "pythainlp.generate.wangchanglm.WangChanGLM": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "gen_instruct"], [6, 1, 1, "", "instruct_generate"], [6, 1, 1, "", "is_exclude"], [6, 1, 1, "", "load_model"]], "pythainlp.khavee": [[7, 0, 1, "", "KhaveeVerifier"]], "pythainlp.khavee.KhaveeVerifier": [[7, 3, 1, "", "__dict__"], [7, 1, 1, "", "__init__"], [7, 3, 1, "", "__module__"], [7, 1, 1, "", "check_aek_too"], [7, 1, 1, "", "check_karu_lahu"], [7, 1, 1, "", "check_klon"], [7, 1, 1, "", "check_marttra"], [7, 1, 1, "", "check_sara"], [7, 1, 1, "", "handle_karun_sound_silence"], [7, 1, 1, "", "is_sumpus"]], "pythainlp.parse": [[8, 2, 1, "", "dependency_parsing"]], "pythainlp.soundex": [[9, 2, 1, "", "lk82"], [9, 2, 1, "", "metasound"], [9, 2, 1, "", "prayut_and_somchaip"], [9, 2, 1, "", "soundex"], [9, 2, 1, "", "udom83"]], "pythainlp.soundex.sound": [[9, 2, 1, "", "audio_vector"], [9, 2, 1, "", "word2audio"], [9, 2, 1, "", "word_approximation"]], "pythainlp.spell": [[10, 4, 1, "", "DEFAULT_SPELL_CHECKER"], [10, 0, 1, "", "NorvigSpellChecker"], [10, 2, 1, "", "correct"], [10, 2, 1, "", "correct_sent"], [10, 2, 1, "", "spell"], [10, 2, 1, "", "spell_sent"]], "pythainlp.spell.NorvigSpellChecker": [[10, 3, 1, "", "__dict__"], [10, 1, 1, "", "__init__"], [10, 3, 1, "", "__module__"], [10, 1, 1, "", "correct"], [10, 1, 1, "", "dictionary"], [10, 1, 1, "", "freq"], [10, 1, 1, "", "known"], [10, 1, 1, "", "prob"], [10, 1, 1, "", "spell"]], "pythainlp.summarize": [[11, 2, 1, "", "extract_keywords"], [11, 5, 0, "-", "keybert"], [11, 2, 1, "", "summarize"]], "pythainlp.summarize.keybert": [[11, 0, 1, "id0", "KeyBERT"]], "pythainlp.summarize.keybert.KeyBERT": [[11, 1, 1, "id5", "__init__"], [11, 1, 1, "id9", "embed"], [11, 1, 1, "id6", "extract_keywords"]], "pythainlp.tag": [[12, 0, 1, "", "NER"], [12, 0, 1, "", "NNER"], [12, 2, 1, "", "chunk_parse"], [12, 2, 1, "", "pos_tag"], [12, 2, 1, "", "pos_tag_sents"], [12, 2, 1, "", "tag_provinces"]], "pythainlp.tag.NER": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "load_engine"], [12, 1, 1, "", "tag"]], "pythainlp.tag.NNER": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "load_engine"], [12, 1, 1, "", "tag"]], "pythainlp.tag.thainer": [[12, 0, 1, "", "ThaiNameTagger"]], "pythainlp.tag.thainer.ThaiNameTagger": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "get_ner"]], "pythainlp.tag.tltk": [[12, 2, 1, "", "get_ner"]], "pythainlp.tokenize": [[13, 0, 1, "", "Tokenizer"], [13, 5, 0, "-", "attacut"], [13, 2, 1, "", "clause_tokenize"], [13, 5, 0, "-", "crfcut"], [13, 5, 0, "-", "deepcut"], [13, 5, 0, "-", "etcc"], [13, 5, 0, "-", "longest"], [13, 5, 0, "-", "multi_cut"], [13, 5, 0, "-", "nercut"], [13, 5, 0, "-", "newmm"], [13, 5, 0, "-", "nlpo3"], [13, 5, 0, "-", "oskut"], [13, 2, 1, "", "paragraph_tokenize"], [13, 5, 0, "-", "pyicu"], [13, 5, 0, "-", "sefr_cut"], [13, 2, 1, "", "sent_tokenize"], [13, 2, 1, "", "subword_tokenize"], [13, 5, 0, "-", "tcc"], [13, 5, 0, "-", "thaisumcut"], [13, 2, 1, "", "word_detokenize"], [13, 2, 1, "", "word_tokenize"]], "pythainlp.tokenize.Tokenizer": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "set_tokenize_engine"], [13, 1, 1, "", "word_tokenize"]], "pythainlp.tokenize.attacut": [[13, 0, 1, "id9", "AttacutTokenizer"], [13, 2, 1, "", "segment"]], "pythainlp.tokenize.attacut.AttacutTokenizer": [[13, 1, 1, "id10", "__init__"], [13, 1, 1, "id11", "tokenize"]], "pythainlp.tokenize.crfcut": [[13, 2, 1, "id0", "extract_features"], [13, 2, 1, "id3", "segment"]], "pythainlp.tokenize.deepcut": [[13, 2, 1, "", "segment"]], "pythainlp.tokenize.etcc": [[13, 2, 1, "id32", "segment"]], "pythainlp.tokenize.longest": [[13, 0, 1, "", "LongestMatchTokenizer"], [13, 2, 1, "id20", "segment"]], "pythainlp.tokenize.longest.LongestMatchTokenizer": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "tokenize"]], "pythainlp.tokenize.multi_cut": [[13, 0, 1, "", "LatticeString"], [13, 2, 1, "id15", "find_all_segment"], [13, 2, 1, "", "mmcut"], [13, 2, 1, "id14", "segment"]], "pythainlp.tokenize.multi_cut.LatticeString": [[13, 1, 1, "", "__init__"]], "pythainlp.tokenize.nercut": [[13, 2, 1, "id23", "segment"]], "pythainlp.tokenize.newmm": [[13, 2, 1, "id28", "segment"]], "pythainlp.tokenize.nlpo3": [[13, 2, 1, "id17", "load_dict"], [13, 2, 1, "id18", "segment"]], "pythainlp.tokenize.oskut": [[13, 2, 1, "", "segment"]], "pythainlp.tokenize.pyicu": [[13, 2, 1, "", "segment"]], "pythainlp.tokenize.sefr_cut": [[13, 2, 1, "", "segment"]], "pythainlp.tokenize.tcc": [[13, 2, 1, "id29", "segment"], [13, 2, 1, "id30", "tcc"], [13, 2, 1, "id31", "tcc_pos"]], "pythainlp.tokenize.tcc_p": [[13, 2, 1, "", "segment"], [13, 2, 1, "", "tcc"], [13, 2, 1, "", "tcc_pos"]], "pythainlp.tokenize.thaisumcut": [[13, 0, 1, "id6", "ThaiSentenceSegmentor"], [13, 2, 1, "id4", "list_to_string"], [13, 2, 1, "id5", "middle_cut"]], "pythainlp.tokenize.thaisumcut.ThaiSentenceSegmentor": [[13, 1, 1, "id7", "split_into_sentences"]], "pythainlp.tools": [[14, 2, 1, "", "get_full_data_path"], [14, 2, 1, "", "get_pythainlp_data_path"], [14, 2, 1, "", "get_pythainlp_path"]], "pythainlp.tools.misspell": [[14, 2, 1, "", "misspell"]], "pythainlp.translate": [[15, 0, 1, "", "Translate"]], "pythainlp.translate.Translate": [[15, 1, 1, "", "__init__"], [15, 1, 1, "", "load_model"], [15, 1, 1, "", "translate"]], "pythainlp.translate.en_th": [[15, 0, 1, "", "EnThTranslator"], [15, 0, 1, "", "ThEnTranslator"], [15, 2, 1, "", "download_model_all"]], "pythainlp.translate.en_th.EnThTranslator": [[15, 1, 1, "", "__init__"], [15, 1, 1, "", "translate"]], "pythainlp.translate.en_th.ThEnTranslator": [[15, 1, 1, "", "__init__"], [15, 1, 1, "", "translate"]], "pythainlp.translate.th_fr": [[15, 0, 1, "", "ThFrTranslator"]], "pythainlp.translate.th_fr.ThFrTranslator": [[15, 1, 1, "", "__init__"], [15, 1, 1, "", "translate"]], "pythainlp.translate.zh_th": [[15, 0, 1, "", "ThZhTranslator"], [15, 0, 1, "", "ZhThTranslator"]], "pythainlp.translate.zh_th.ThZhTranslator": [[15, 1, 1, "", "__init__"], [15, 1, 1, "", "translate"]], "pythainlp.translate.zh_th.ZhThTranslator": [[15, 1, 1, "", "__init__"], [15, 1, 1, "", "translate"]], "pythainlp.transliterate": [[16, 5, 0, "-", "ipa"], [16, 5, 0, "-", "iso_11940"], [16, 2, 1, "", "pronunciate"], [16, 2, 1, "", "puan"], [16, 5, 0, "-", "pyicu"], [16, 2, 1, "", "romanize"], [16, 2, 1, "", "transliterate"]], "pythainlp.transliterate.ipa": [[16, 2, 1, "id5", "trans_list"], [16, 2, 1, "id4", "transliterate"], [16, 2, 1, "id6", "xsampa_list"]], "pythainlp.transliterate.iso_11940": [[16, 2, 1, "", "transliterate"]], "pythainlp.transliterate.pyicu": [[16, 2, 1, "id0", "transliterate"]], "pythainlp.transliterate.royin": [[16, 5, 0, "-", "romanize"]], "pythainlp.transliterate.thai2rom": [[16, 5, 0, "-", "romanize"]], "pythainlp.transliterate.thaig2p": [[16, 2, 1, "", "transliterate"], [16, 5, 0, "-", "transliterate"]], "pythainlp.transliterate.tltk": [[16, 2, 1, "", "romanize"], [16, 2, 1, "", "tltk_g2p"], [16, 2, 1, "", "tltk_ipa"]], "pythainlp.transliterate.wunsen": [[16, 0, 1, "", "WunsenTransliterate"]], "pythainlp.transliterate.wunsen.WunsenTransliterate": [[16, 1, 1, "", "__init__"], [16, 1, 1, "", "transliterate"]], "pythainlp.ulmfit": [[17, 0, 1, "", "ThaiTokenizer"], [17, 2, 1, "", "document_vector"], [17, 2, 1, "", "fix_html"], [17, 2, 1, "", "lowercase_all"], [17, 2, 1, "", "merge_wgts"], [17, 2, 1, "", "process_thai"], [17, 2, 1, "", "remove_space"], [17, 2, 1, "", "replace_rep_after"], [17, 2, 1, "", "replace_rep_nonum"], [17, 2, 1, "", "replace_wrep_post"], [17, 2, 1, "", "replace_wrep_post_nonum"], [17, 2, 1, "", "rm_brackets"], [17, 2, 1, "", "rm_useless_newlines"], [17, 2, 1, "", "rm_useless_spaces"], [17, 2, 1, "", "spec_add_spaces"], [17, 2, 1, "", "ungroup_emoji"]], "pythainlp.ulmfit.ThaiTokenizer": [[17, 1, 1, "", "__init__"], [17, 1, 1, "", "add_special_cases"], [17, 1, 1, "", "tokenizer"]], "pythainlp.util": [[18, 0, 1, "", "Trie"], [18, 2, 1, "", "arabic_digit_to_thai_digit"], [18, 2, 1, "", "bahttext"], [18, 2, 1, "", "collate"], [18, 2, 1, "", "convert_years"], [18, 2, 1, "", "count_thai_chars"], [18, 2, 1, "", "countthai"], [18, 2, 1, "", "dict_trie"], [18, 2, 1, "", "digit_to_text"], [18, 2, 1, "", "display_thai_char"], [18, 2, 1, "", "emoji_to_thai"], [18, 2, 1, "", "eng_to_thai"], [18, 2, 1, "", "find_keyword"], [18, 2, 1, "", "ipa_to_rtgs"], [18, 2, 1, "", "is_native_thai"], [18, 2, 1, "", "isthai"], [18, 2, 1, "", "isthaichar"], [18, 2, 1, "", "maiyamok"], [18, 2, 1, "", "nectec_to_ipa"], [18, 2, 1, "", "normalize"], [18, 2, 1, "", "now_reign_year"], [18, 2, 1, "", "num_to_thaiword"], [18, 2, 1, "", "rank"], [18, 2, 1, "", "reign_year_to_ad"], [18, 2, 1, "", "remove_dangling"], [18, 2, 1, "", "remove_dup_spaces"], [18, 2, 1, "", "remove_repeat_vowels"], [18, 2, 1, "", "remove_tone_ipa"], [18, 2, 1, "", "remove_tonemark"], [18, 2, 1, "", "remove_zw"], [18, 2, 1, "", "reorder_vowels"], [18, 2, 1, "", "sound_syllable"], [18, 2, 1, "", "syllable_length"], [18, 2, 1, "", "syllable_open_close_detector"], [18, 2, 1, "", "text_to_arabic_digit"], [18, 2, 1, "", "text_to_num"], [18, 2, 1, "", "text_to_thai_digit"], [18, 2, 1, "", "thai_digit_to_arabic_digit"], [18, 2, 1, "", "thai_strftime"], [18, 2, 1, "", "thai_strptime"], [18, 2, 1, "", "thai_to_eng"], [18, 2, 1, "", "thai_word_tone_detector"], [18, 2, 1, "", "thaiword_to_date"], [18, 2, 1, "", "thaiword_to_num"], [18, 2, 1, "", "thaiword_to_time"], [18, 2, 1, "", "time_to_thaiword"], [18, 2, 1, "", "tis620_to_utf8"], [18, 2, 1, "", "tone_detector"], [18, 2, 1, "", "words_to_num"]], "pythainlp.util.Trie": [[18, 0, 1, "", "Node"], [18, 1, 1, "", "__init__"], [18, 1, 1, "", "add"], [18, 1, 1, "", "prefixes"], [18, 1, 1, "", "remove"]], "pythainlp.util.Trie.Node": [[18, 1, 1, "", "__init__"], [18, 3, 1, "", "children"], [18, 3, 1, "", "end"]], "pythainlp.util.spell_words": [[18, 2, 1, "", "spell_syllable"], [18, 2, 1, "", "spell_word"]], "pythainlp.wangchanberta": [[19, 2, 1, "", "segment"]], "pythainlp.word_vector": [[20, 0, 1, "", "WordVector"]], "pythainlp.word_vector.WordVector": [[20, 1, 1, "", "__init__"], [20, 1, 1, "", "doesnt_match"], [20, 1, 1, "", "get_model"], [20, 1, 1, "", "load_wordvector"], [20, 1, 1, "", "most_similar_cosmul"], [20, 1, 1, "", "sentence_vectorizer"], [20, 1, 1, "", "similarity"]], "pythainlp.wsd": [[21, 2, 1, "", "get_sense"]], "": [[26, 6, 1, "-", "PYTHAINLP_DATA_DIR"], [26, 6, 1, "-", "PYTHAINLP_READ_MODE"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:data", "5": "py:module", "6": "std:envvar"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "data", "Python data"], "5": ["py", "module", "Python module"], "6": ["std", "envvar", "environment variable"]}, "titleterms": {"pythainlp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "augment": 0, "modul": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "benchmark": 1, "token": [1, 13], "qualiti": 1, "chat": 2, "cl": 3, "coref": 4, "corpu": 5, "conceptnet": 5, "tnc": 5, "ttc": 5, "oscar": 5, "util": [5, 18], "wordnet": 5, "definit": 5, "gener": 6, "khave": 7, "pars": 8, "soundex": 9, "refer": [9, 10, 12, 16, 18, 19, 20, 22], "spell": 10, "summar": 11, "keyword": 11, "extract": 11, "engin": [11, 12, 13, 16], "keybert": 11, "tag": 12, "tagger": 12, "perceptron": 12, "unigram": 12, "sentenc": 13, "level": 13, "crfcut": 13, "thaisumcut": 13, "word": 13, "attacut": 13, "deepcut": 13, "multi_cut": 13, "nlpo3": 13, "longest": 13, "pyicu": 13, "nercut": 13, "sefr_cut": 13, "oskut": 13, "newmm": 13, "subword": 13, "tcc": 13, "etcc": 13, "tool": 14, "translat": 15, "transliter": 16, "roman": 16, "thai2rom": 16, "royin": 16, "icu": 16, "ipa": 16, "thaig2p": 16, "tltk": 16, "iso_11940": 16, "ulmfit": 17, "wangchanberta": 19, "word_vector": 20, "depend": 20, "wsd": 21, "document": 22, "note": 22, "packag": 22, "indic": 22, "tabl": 22, "citat": 22, "faq": [23, 26], "command": 24, "line": 24, "get": 25, "start": 25, "tutori": 25, "notebook": 25, "instal": 26, "runtim": 26, "configur": 26, "licens": 27}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"pythainlp.augment": [[0, "pythainlp-augment"]], "Modules": [[0, "modules"], [1, "modules"], [4, "modules"], [5, "modules"], [6, "modules"], [7, "modules"], [8, "modules"], [9, "modules"], [10, "modules"], [11, "modules"], [12, "modules"], [13, "modules"], [14, "modules"], [15, "modules"], [16, "modules"], [17, "modules"], [18, "modules"], [19, "modules"], [20, "modules"], [21, "modules"]], "pythainlp.benchmarks": [[1, "pythainlp-benchmarks"]], "Tokenization": [[1, "tokenization"]], "Quality": [[1, "quality"]], "pythainlp.chat": [[2, "pythainlp-chat"]], "pythainlp.cls": [[3, "pythainlp-cls"]], "pythainlp.coref": [[4, "pythainlp-coref"]], "pythainlp.corpus": [[5, "pythainlp-corpus"]], "ConceptNet": [[5, "conceptnet"]], "TNC": [[5, "tnc"]], "TTC": [[5, "ttc"]], "OSCAR": [[5, "oscar"]], "Util": [[5, "util"]], "WordNet": [[5, "wordnet"]], "Definition": [[5, "definition"]], "pythainlp.generate": [[6, "pythainlp-generate"]], "pythainlp.khavee": [[7, "pythainlp-khavee"]], "pythainlp.parse": [[8, "pythainlp-parse"]], "pythainlp.soundex": [[9, "pythainlp-soundex"]], "References": [[9, "references"], [10, "references"], [12, "references"], [16, "references"], [18, "references"], [19, "references"], [20, "references"]], "pythainlp.spell": [[10, "pythainlp-spell"]], "pythainlp.summarize": [[11, "pythainlp-summarize"]], "Keyword Extraction Engines": [[11, "keyword-extraction-engines"]], "KeyBERT": [[11, "module-pythainlp.summarize.keybert"]], "pythainlp.tag": [[12, "pythainlp-tag"]], "Tagger Engines": [[12, "tagger-engines"]], "perceptron": [[12, "perceptron"]], "unigram": [[12, "unigram"]], "pythainlp.tokenize": [[13, "pythainlp-tokenize"]], "Tokenization Engines": [[13, "tokenization-engines"]], "Sentence level": [[13, "sentence-level"]], "crfcut": [[13, "module-pythainlp.tokenize.crfcut"]], "thaisumcut": [[13, "module-pythainlp.tokenize.thaisumcut"]], "Word level": [[13, "word-level"]], "attacut": [[13, "id8"]], "deepcut": [[13, "id12"]], "multi_cut": [[13, "module-pythainlp.tokenize.multi_cut"]], "nlpo3": [[13, "id16"]], "longest": [[13, "module-pythainlp.tokenize.longest"]], "pyicu": [[13, "id21"]], "nercut": [[13, "module-pythainlp.tokenize.nercut"]], "sefr_cut": [[13, "module-pythainlp.tokenize.sefr_cut"]], "oskut": [[13, "id26"]], "newmm": [[13, "newmm"]], "Subword level": [[13, "subword-level"]], "tcc": [[13, "module-pythainlp.tokenize.tcc"]], "etcc": [[13, "module-pythainlp.tokenize.etcc"]], "pythainlp.tools": [[14, "pythainlp-tools"]], "pythainlp.translate": [[15, "pythainlp-translate"]], "pythainlp.transliterate": [[16, "pythainlp-transliterate"]], "Romanize Engines": [[16, "romanize-engines"]], "thai2rom": [[16, "module-pythainlp.transliterate.thai2rom.romanize"]], "royin": [[16, "module-pythainlp.transliterate.royin.romanize"]], "Transliterate Engines": [[16, "transliterate-engines"]], "icu": [[16, "module-pythainlp.transliterate.pyicu"]], "ipa": [[16, "module-pythainlp.transliterate.ipa"]], "thaig2p": [[16, "module-pythainlp.transliterate.thaig2p.transliterate"]], "tltk": [[16, "id7"]], "iso_11940": [[16, "module-pythainlp.transliterate.iso_11940"]], "pythainlp.ulmfit": [[17, "pythainlp-ulmfit"]], "pythainlp.util": [[18, "pythainlp-util"]], "pythainlp.wangchanberta": [[19, "pythainlp-wangchanberta"]], "pythainlp.word_vector": [[20, "pythainlp-word-vector"]], "Dependencies": [[20, "dependencies"]], "pythainlp.wsd": [[21, "pythainlp-wsd"]], "PyThaiNLP documentation": [[22, "pythainlp-documentation"]], "Notes": [[22, null]], "Package reference:": [[22, null]], "Indices and tables": [[22, "indices-and-tables"]], "Citations": [[22, "citations"]], "FAQ": [[23, "faq"], [26, "faq"]], "Command Line": [[24, "command-line"]], "Getting Started": [[25, "getting-started"]], "Tutorial Notebooks": [[25, "tutorial-notebooks"]], "Installation": [[26, "installation"]], "Runtime Configurations": [[26, "runtime-configurations"]], "License": [[27, "license"]]}, "indexentries": {"bpembaug (class in pythainlp.augment.word2vec.bpemb_wv)": [[0, "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug"]], "fasttextaug (class in pythainlp.augment.lm)": [[0, "pythainlp.augment.lm.FastTextAug"]], "ltw2vaug (class in pythainlp.augment.word2vec)": [[0, "pythainlp.augment.word2vec.LTW2VAug"]], "thai2fitaug (class in pythainlp.augment.word2vec)": [[0, "pythainlp.augment.word2vec.Thai2fitAug"]], "thai2transformersaug (class in pythainlp.augment.lm)": [[0, "pythainlp.augment.lm.Thai2transformersAug"]], "word2vecaug (class in pythainlp.augment.word2vec)": [[0, "pythainlp.augment.word2vec.Word2VecAug"]], "wordnetaug (class in pythainlp.augment)": [[0, "pythainlp.augment.WordNetAug"]], "__init__() (pythainlp.augment.wordnetaug method)": [[0, "pythainlp.augment.WordNetAug.__init__"]], "__init__() (pythainlp.augment.lm.fasttextaug method)": [[0, "pythainlp.augment.lm.FastTextAug.__init__"]], "__init__() (pythainlp.augment.lm.thai2transformersaug method)": [[0, "pythainlp.augment.lm.Thai2transformersAug.__init__"]], "__init__() (pythainlp.augment.word2vec.ltw2vaug method)": [[0, "pythainlp.augment.word2vec.LTW2VAug.__init__"]], "__init__() (pythainlp.augment.word2vec.thai2fitaug method)": [[0, "pythainlp.augment.word2vec.Thai2fitAug.__init__"]], "__init__() (pythainlp.augment.word2vec.word2vecaug method)": [[0, "pythainlp.augment.word2vec.Word2VecAug.__init__"]], "__init__() (pythainlp.augment.word2vec.bpemb_wv.bpembaug method)": [[0, "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug.__init__"]], "augment() (pythainlp.augment.wordnetaug method)": [[0, "pythainlp.augment.WordNetAug.augment"]], "augment() (pythainlp.augment.lm.fasttextaug method)": [[0, "pythainlp.augment.lm.FastTextAug.augment"]], "augment() (pythainlp.augment.lm.thai2transformersaug method)": [[0, "pythainlp.augment.lm.Thai2transformersAug.augment"]], "augment() (pythainlp.augment.word2vec.ltw2vaug method)": [[0, "pythainlp.augment.word2vec.LTW2VAug.augment"]], "augment() (pythainlp.augment.word2vec.thai2fitaug method)": [[0, "pythainlp.augment.word2vec.Thai2fitAug.augment"]], "augment() (pythainlp.augment.word2vec.word2vecaug method)": [[0, "pythainlp.augment.word2vec.Word2VecAug.augment"]], "augment() (pythainlp.augment.word2vec.bpemb_wv.bpembaug method)": [[0, "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug.augment"]], "find_synonyms() (pythainlp.augment.wordnetaug method)": [[0, "pythainlp.augment.WordNetAug.find_synonyms"]], "generate() (pythainlp.augment.lm.thai2transformersaug method)": [[0, "pythainlp.augment.lm.Thai2transformersAug.generate"]], "load_w2v() (pythainlp.augment.word2vec.ltw2vaug method)": [[0, "pythainlp.augment.word2vec.LTW2VAug.load_w2v"]], "load_w2v() (pythainlp.augment.word2vec.thai2fitaug method)": [[0, "pythainlp.augment.word2vec.Thai2fitAug.load_w2v"]], "load_w2v() (pythainlp.augment.word2vec.bpemb_wv.bpembaug method)": [[0, "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug.load_w2v"]], "modify_sent() (pythainlp.augment.lm.fasttextaug method)": [[0, "pythainlp.augment.lm.FastTextAug.modify_sent"]], "modify_sent() (pythainlp.augment.word2vec.word2vecaug method)": [[0, "pythainlp.augment.word2vec.Word2VecAug.modify_sent"]], "tokenize() (pythainlp.augment.lm.fasttextaug method)": [[0, "pythainlp.augment.lm.FastTextAug.tokenize"]], "tokenizer() (pythainlp.augment.word2vec.ltw2vaug method)": [[0, "pythainlp.augment.word2vec.LTW2VAug.tokenizer"]], "tokenizer() (pythainlp.augment.word2vec.thai2fitaug method)": [[0, "pythainlp.augment.word2vec.Thai2fitAug.tokenizer"]], "tokenizer() (pythainlp.augment.word2vec.bpemb_wv.bpembaug method)": [[0, "pythainlp.augment.word2vec.bpemb_wv.BPEmbAug.tokenizer"]], "benchmark() (in module pythainlp.benchmarks.word_tokenization)": [[1, "pythainlp.benchmarks.word_tokenization.benchmark"]], "compute_stats() (in module pythainlp.benchmarks.word_tokenization)": [[1, "pythainlp.benchmarks.word_tokenization.compute_stats"]], "preprocessing() (in module pythainlp.benchmarks.word_tokenization)": [[1, "pythainlp.benchmarks.word_tokenization.preprocessing"]], "chatbotmodel (class in pythainlp.chat)": [[2, "pythainlp.chat.ChatBotModel"]], "__init__() (pythainlp.chat.chatbotmodel method)": [[2, "pythainlp.chat.ChatBotModel.__init__"]], "chat() (pythainlp.chat.chatbotmodel method)": [[2, "pythainlp.chat.ChatBotModel.chat"]], "load_model() (pythainlp.chat.chatbotmodel method)": [[2, "pythainlp.chat.ChatBotModel.load_model"]], "reset_chat() (pythainlp.chat.chatbotmodel method)": [[2, "pythainlp.chat.ChatBotModel.reset_chat"]], "gzipmodel (class in pythainlp.cls)": [[3, "pythainlp.cls.GzipModel"]], "__init__() (pythainlp.cls.gzipmodel method)": [[3, "pythainlp.cls.GzipModel.__init__"]], "predict() (pythainlp.cls.gzipmodel method)": [[3, "pythainlp.cls.GzipModel.predict"]], "train() (pythainlp.cls.gzipmodel method)": [[3, "pythainlp.cls.GzipModel.train"]], "coreference_resolution() (in module pythainlp.coref)": [[4, "pythainlp.coref.coreference_resolution"]], "all_lemma_names() (in module pythainlp.corpus.wordnet)": [[5, "pythainlp.corpus.wordnet.all_lemma_names"]], "all_synsets() (in module pythainlp.corpus.wordnet)": [[5, "pythainlp.corpus.wordnet.all_synsets"]], "bigram_word_freqs() (in module pythainlp.corpus.tnc)": [[5, "pythainlp.corpus.tnc.bigram_word_freqs"]], "countries() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.countries"]], "custom_lemmas() (in module pythainlp.corpus.wordnet)": [[5, "pythainlp.corpus.wordnet.custom_lemmas"]], "download() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.download"]], "edges() (in module pythainlp.corpus.conceptnet)": [[5, "pythainlp.corpus.conceptnet.edges"]], "find_badwords() (in module pythainlp.corpus.util)": [[5, "pythainlp.corpus.util.find_badwords"]], "get_corpus() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.get_corpus"]], "get_corpus_db() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.get_corpus_db"]], "get_corpus_db_detail() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.get_corpus_db_detail"]], "get_corpus_default_db() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.get_corpus_default_db"]], "get_corpus_path() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.get_corpus_path"]], "get_transliteration_dict() (in module pythainlp.corpus.th_en_translit)": [[5, "pythainlp.corpus.th_en_translit.get_transliteration_dict"]], "langs() (in module pythainlp.corpus.wordnet)": [[5, "pythainlp.corpus.wordnet.langs"]], "lch_similarity() (in module pythainlp.corpus.wordnet)": [[5, "pythainlp.corpus.wordnet.lch_similarity"]], "lemma() (in module pythainlp.corpus.wordnet)": [[5, "pythainlp.corpus.wordnet.lemma"]], "lemma_from_key() (in module pythainlp.corpus.wordnet)": [[5, "pythainlp.corpus.wordnet.lemma_from_key"]], "lemmas() (in module pythainlp.corpus.wordnet)": [[5, "pythainlp.corpus.wordnet.lemmas"]], "morphy() (in module pythainlp.corpus.wordnet)": [[5, "pythainlp.corpus.wordnet.morphy"]], "path_similarity() (in module pythainlp.corpus.wordnet)": [[5, "pythainlp.corpus.wordnet.path_similarity"]], "provinces() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.provinces"]], "remove() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.remove"]], "revise_newmm_default_wordset() (in module pythainlp.corpus.util)": [[5, "pythainlp.corpus.util.revise_newmm_default_wordset"]], "revise_wordset() (in module pythainlp.corpus.util)": [[5, "pythainlp.corpus.util.revise_wordset"]], "synset() (in module pythainlp.corpus.wordnet)": [[5, "pythainlp.corpus.wordnet.synset"]], "synsets() (in module pythainlp.corpus.wordnet)": [[5, "pythainlp.corpus.wordnet.synsets"]], "thai_dict() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.thai_dict"]], "thai_family_names() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.thai_family_names"]], "thai_female_names() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.thai_female_names"]], "thai_male_names() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.thai_male_names"]], "thai_negations() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.thai_negations"]], "thai_orst_words() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.thai_orst_words"]], "thai_stopwords() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.thai_stopwords"]], "thai_syllables() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.thai_syllables"]], "thai_words() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.thai_words"]], "thai_wsd_dict() (in module pythainlp.corpus)": [[5, "pythainlp.corpus.thai_wsd_dict"]], "trigram_word_freqs() (in module pythainlp.corpus.tnc)": [[5, "pythainlp.corpus.tnc.trigram_word_freqs"]], "unigram_word_freqs() (in module pythainlp.corpus.oscar)": [[5, "pythainlp.corpus.oscar.unigram_word_freqs"]], "unigram_word_freqs() (in module pythainlp.corpus.tnc)": [[5, "pythainlp.corpus.tnc.unigram_word_freqs"]], "unigram_word_freqs() (in module pythainlp.corpus.ttc)": [[5, "pythainlp.corpus.ttc.unigram_word_freqs"]], "word_freqs() (in module pythainlp.corpus.oscar)": [[5, "pythainlp.corpus.oscar.word_freqs"]], "word_freqs() (in module pythainlp.corpus.tnc)": [[5, "pythainlp.corpus.tnc.word_freqs"]], "word_freqs() (in module pythainlp.corpus.ttc)": [[5, "pythainlp.corpus.ttc.word_freqs"]], "wup_similarity() (in module pythainlp.corpus.wordnet)": [[5, "pythainlp.corpus.wordnet.wup_similarity"]], "bigram (class in pythainlp.generate)": [[6, "pythainlp.generate.Bigram"]], "trigram (class in pythainlp.generate)": [[6, "pythainlp.generate.Trigram"]], "unigram (class in pythainlp.generate)": [[6, "pythainlp.generate.Unigram"]], "wangchanglm (class in pythainlp.generate.wangchanglm)": [[6, "pythainlp.generate.wangchanglm.WangChanGLM"]], "__init__() (pythainlp.generate.bigram method)": [[6, "pythainlp.generate.Bigram.__init__"]], "__init__() (pythainlp.generate.trigram method)": [[6, "pythainlp.generate.Trigram.__init__"]], "__init__() (pythainlp.generate.unigram method)": [[6, "pythainlp.generate.Unigram.__init__"]], "__init__() (pythainlp.generate.wangchanglm.wangchanglm method)": [[6, "pythainlp.generate.wangchanglm.WangChanGLM.__init__"]], "gen_instruct() (pythainlp.generate.wangchanglm.wangchanglm method)": [[6, "pythainlp.generate.wangchanglm.WangChanGLM.gen_instruct"]], "gen_sentence() (in module pythainlp.generate.thai2fit)": [[6, "pythainlp.generate.thai2fit.gen_sentence"]], "gen_sentence() (pythainlp.generate.bigram method)": [[6, "pythainlp.generate.Bigram.gen_sentence"]], "gen_sentence() (pythainlp.generate.trigram method)": [[6, "pythainlp.generate.Trigram.gen_sentence"]], "gen_sentence() (pythainlp.generate.unigram method)": [[6, "pythainlp.generate.Unigram.gen_sentence"]], "instruct_generate() (pythainlp.generate.wangchanglm.wangchanglm method)": [[6, "pythainlp.generate.wangchanglm.WangChanGLM.instruct_generate"]], "is_exclude() (pythainlp.generate.wangchanglm.wangchanglm method)": [[6, "pythainlp.generate.wangchanglm.WangChanGLM.is_exclude"]], "load_model() (pythainlp.generate.wangchanglm.wangchanglm method)": [[6, "pythainlp.generate.wangchanglm.WangChanGLM.load_model"]], "prob() (pythainlp.generate.bigram method)": [[6, "pythainlp.generate.Bigram.prob"]], "prob() (pythainlp.generate.trigram method)": [[6, "pythainlp.generate.Trigram.prob"]], "khaveeverifier (class in pythainlp.khavee)": [[7, "pythainlp.khavee.KhaveeVerifier"]], "__dict__ (pythainlp.khavee.khaveeverifier attribute)": [[7, "pythainlp.khavee.KhaveeVerifier.__dict__"]], "__init__() (pythainlp.khavee.khaveeverifier method)": [[7, "pythainlp.khavee.KhaveeVerifier.__init__"]], "__module__ (pythainlp.khavee.khaveeverifier attribute)": [[7, "pythainlp.khavee.KhaveeVerifier.__module__"]], "check_aek_too() (pythainlp.khavee.khaveeverifier method)": [[7, "pythainlp.khavee.KhaveeVerifier.check_aek_too"]], "check_karu_lahu() (pythainlp.khavee.khaveeverifier method)": [[7, "pythainlp.khavee.KhaveeVerifier.check_karu_lahu"]], "check_klon() (pythainlp.khavee.khaveeverifier method)": [[7, "pythainlp.khavee.KhaveeVerifier.check_klon"]], "check_marttra() (pythainlp.khavee.khaveeverifier method)": [[7, "pythainlp.khavee.KhaveeVerifier.check_marttra"]], "check_sara() (pythainlp.khavee.khaveeverifier method)": [[7, "pythainlp.khavee.KhaveeVerifier.check_sara"]], "handle_karun_sound_silence() (pythainlp.khavee.khaveeverifier method)": [[7, "pythainlp.khavee.KhaveeVerifier.handle_karun_sound_silence"]], "is_sumpus() (pythainlp.khavee.khaveeverifier method)": [[7, "pythainlp.khavee.KhaveeVerifier.is_sumpus"]], "dependency_parsing() (in module pythainlp.parse)": [[8, "pythainlp.parse.dependency_parsing"]], "audio_vector() (in module pythainlp.soundex.sound)": [[9, "pythainlp.soundex.sound.audio_vector"]], "lk82() (in module pythainlp.soundex)": [[9, "pythainlp.soundex.lk82"]], "metasound() (in module pythainlp.soundex)": [[9, "pythainlp.soundex.metasound"]], "prayut_and_somchaip() (in module pythainlp.soundex)": [[9, "pythainlp.soundex.prayut_and_somchaip"]], "soundex() (in module pythainlp.soundex)": [[9, "pythainlp.soundex.soundex"]], "udom83() (in module pythainlp.soundex)": [[9, "pythainlp.soundex.udom83"]], "word2audio() (in module pythainlp.soundex.sound)": [[9, "pythainlp.soundex.sound.word2audio"]], "word_approximation() (in module pythainlp.soundex.sound)": [[9, "pythainlp.soundex.sound.word_approximation"]], "default_spell_checker (in module pythainlp.spell)": [[10, "pythainlp.spell.DEFAULT_SPELL_CHECKER"]], "norvigspellchecker (class in pythainlp.spell)": [[10, "pythainlp.spell.NorvigSpellChecker"]], "__dict__ (pythainlp.spell.norvigspellchecker attribute)": [[10, "pythainlp.spell.NorvigSpellChecker.__dict__"]], "__init__() (pythainlp.spell.norvigspellchecker method)": [[10, "pythainlp.spell.NorvigSpellChecker.__init__"]], "__module__ (pythainlp.spell.norvigspellchecker attribute)": [[10, "pythainlp.spell.NorvigSpellChecker.__module__"]], "correct() (in module pythainlp.spell)": [[10, "pythainlp.spell.correct"]], "correct() (pythainlp.spell.norvigspellchecker method)": [[10, "pythainlp.spell.NorvigSpellChecker.correct"]], "correct_sent() (in module pythainlp.spell)": [[10, "pythainlp.spell.correct_sent"]], "dictionary() (pythainlp.spell.norvigspellchecker method)": [[10, "pythainlp.spell.NorvigSpellChecker.dictionary"]], "freq() (pythainlp.spell.norvigspellchecker method)": [[10, "pythainlp.spell.NorvigSpellChecker.freq"]], "known() (pythainlp.spell.norvigspellchecker method)": [[10, "pythainlp.spell.NorvigSpellChecker.known"]], "prob() (pythainlp.spell.norvigspellchecker method)": [[10, "pythainlp.spell.NorvigSpellChecker.prob"]], "spell() (in module pythainlp.spell)": [[10, "pythainlp.spell.spell"]], "spell() (pythainlp.spell.norvigspellchecker method)": [[10, "pythainlp.spell.NorvigSpellChecker.spell"]], "spell_sent() (in module pythainlp.spell)": [[10, "pythainlp.spell.spell_sent"]], "keybert (class in pythainlp.summarize.keybert)": [[11, "id0"], [11, "pythainlp.summarize.keybert.KeyBERT"]], "__init__() (pythainlp.summarize.keybert.keybert method)": [[11, "id5"], [11, "pythainlp.summarize.keybert.KeyBERT.__init__"]], "embed() (pythainlp.summarize.keybert.keybert method)": [[11, "id9"], [11, "pythainlp.summarize.keybert.KeyBERT.embed"]], "extract_keywords() (in module pythainlp.summarize)": [[11, "pythainlp.summarize.extract_keywords"]], "extract_keywords() (pythainlp.summarize.keybert.keybert method)": [[11, "id6"], [11, "pythainlp.summarize.keybert.KeyBERT.extract_keywords"]], "module": [[11, "module-pythainlp.summarize.keybert"], [13, "module-pythainlp.tokenize.attacut"], [13, "module-pythainlp.tokenize.crfcut"], [13, "module-pythainlp.tokenize.deepcut"], [13, "module-pythainlp.tokenize.etcc"], [13, "module-pythainlp.tokenize.longest"], [13, "module-pythainlp.tokenize.multi_cut"], [13, "module-pythainlp.tokenize.nercut"], [13, "module-pythainlp.tokenize.newmm"], [13, "module-pythainlp.tokenize.nlpo3"], [13, "module-pythainlp.tokenize.oskut"], [13, "module-pythainlp.tokenize.pyicu"], [13, "module-pythainlp.tokenize.sefr_cut"], [13, "module-pythainlp.tokenize.tcc"], [13, "module-pythainlp.tokenize.thaisumcut"], [16, "module-pythainlp.transliterate.ipa"], [16, "module-pythainlp.transliterate.iso_11940"], [16, "module-pythainlp.transliterate.pyicu"], [16, "module-pythainlp.transliterate.royin.romanize"], [16, "module-pythainlp.transliterate.thai2rom.romanize"], [16, "module-pythainlp.transliterate.thaig2p.transliterate"]], "pythainlp.summarize.keybert": [[11, "module-pythainlp.summarize.keybert"]], "summarize() (in module pythainlp.summarize)": [[11, "pythainlp.summarize.summarize"]], "ner (class in pythainlp.tag)": [[12, "pythainlp.tag.NER"]], "nner (class in pythainlp.tag)": [[12, "pythainlp.tag.NNER"]], "thainametagger (class in pythainlp.tag.thainer)": [[12, "pythainlp.tag.thainer.ThaiNameTagger"]], "__init__() (pythainlp.tag.ner method)": [[12, "pythainlp.tag.NER.__init__"]], "__init__() (pythainlp.tag.nner method)": [[12, "pythainlp.tag.NNER.__init__"]], "__init__() (pythainlp.tag.thainer.thainametagger method)": [[12, "pythainlp.tag.thainer.ThaiNameTagger.__init__"]], "chunk_parse() (in module pythainlp.tag)": [[12, "pythainlp.tag.chunk_parse"]], "get_ner() (in module pythainlp.tag.tltk)": [[12, "pythainlp.tag.tltk.get_ner"]], "get_ner() (pythainlp.tag.thainer.thainametagger method)": [[12, "pythainlp.tag.thainer.ThaiNameTagger.get_ner"]], "load_engine() (pythainlp.tag.ner method)": [[12, "pythainlp.tag.NER.load_engine"]], "load_engine() (pythainlp.tag.nner method)": [[12, "pythainlp.tag.NNER.load_engine"]], "pos_tag() (in module pythainlp.tag)": [[12, "pythainlp.tag.pos_tag"]], "pos_tag_sents() (in module pythainlp.tag)": [[12, "pythainlp.tag.pos_tag_sents"]], "tag() (pythainlp.tag.ner method)": [[12, "pythainlp.tag.NER.tag"]], "tag() (pythainlp.tag.nner method)": [[12, "pythainlp.tag.NNER.tag"]], "tag_provinces() (in module pythainlp.tag)": [[12, "pythainlp.tag.tag_provinces"]], "attacuttokenizer (class in pythainlp.tokenize.attacut)": [[13, "id9"], [13, "pythainlp.tokenize.attacut.AttacutTokenizer"]], "latticestring (class in pythainlp.tokenize.multi_cut)": [[13, "pythainlp.tokenize.multi_cut.LatticeString"]], "longestmatchtokenizer (class in pythainlp.tokenize.longest)": [[13, "pythainlp.tokenize.longest.LongestMatchTokenizer"]], "thaisentencesegmentor (class in pythainlp.tokenize.thaisumcut)": [[13, "id6"], [13, "pythainlp.tokenize.thaisumcut.ThaiSentenceSegmentor"]], "tokenizer (class in pythainlp.tokenize)": [[13, "pythainlp.tokenize.Tokenizer"]], "__init__() (pythainlp.tokenize.tokenizer method)": [[13, "pythainlp.tokenize.Tokenizer.__init__"]], "__init__() (pythainlp.tokenize.attacut.attacuttokenizer method)": [[13, "id10"], [13, "pythainlp.tokenize.attacut.AttacutTokenizer.__init__"]], "__init__() (pythainlp.tokenize.longest.longestmatchtokenizer method)": [[13, "pythainlp.tokenize.longest.LongestMatchTokenizer.__init__"]], "__init__() (pythainlp.tokenize.multi_cut.latticestring method)": [[13, "pythainlp.tokenize.multi_cut.LatticeString.__init__"]], "clause_tokenize() (in module pythainlp.tokenize)": [[13, "pythainlp.tokenize.clause_tokenize"]], "extract_features() (in module pythainlp.tokenize.crfcut)": [[13, "id0"], [13, "pythainlp.tokenize.crfcut.extract_features"]], "find_all_segment() (in module pythainlp.tokenize.multi_cut)": [[13, "id15"], [13, "pythainlp.tokenize.multi_cut.find_all_segment"]], "list_to_string() (in module pythainlp.tokenize.thaisumcut)": [[13, "id4"], [13, "pythainlp.tokenize.thaisumcut.list_to_string"]], "load_dict() (in module pythainlp.tokenize.nlpo3)": [[13, "id17"], [13, "pythainlp.tokenize.nlpo3.load_dict"]], "middle_cut() (in module pythainlp.tokenize.thaisumcut)": [[13, "id5"], [13, "pythainlp.tokenize.thaisumcut.middle_cut"]], "mmcut() (in module pythainlp.tokenize.multi_cut)": [[13, "pythainlp.tokenize.multi_cut.mmcut"]], "paragraph_tokenize() (in module pythainlp.tokenize)": [[13, "pythainlp.tokenize.paragraph_tokenize"]], "pythainlp.tokenize.attacut": [[13, "module-pythainlp.tokenize.attacut"]], "pythainlp.tokenize.crfcut": [[13, "module-pythainlp.tokenize.crfcut"]], "pythainlp.tokenize.deepcut": [[13, "module-pythainlp.tokenize.deepcut"]], "pythainlp.tokenize.etcc": [[13, "module-pythainlp.tokenize.etcc"]], "pythainlp.tokenize.longest": [[13, "module-pythainlp.tokenize.longest"]], "pythainlp.tokenize.multi_cut": [[13, "module-pythainlp.tokenize.multi_cut"]], "pythainlp.tokenize.nercut": [[13, "module-pythainlp.tokenize.nercut"]], "pythainlp.tokenize.newmm": [[13, "module-pythainlp.tokenize.newmm"]], "pythainlp.tokenize.nlpo3": [[13, "module-pythainlp.tokenize.nlpo3"]], "pythainlp.tokenize.oskut": [[13, "module-pythainlp.tokenize.oskut"]], "pythainlp.tokenize.pyicu": [[13, "module-pythainlp.tokenize.pyicu"]], "pythainlp.tokenize.sefr_cut": [[13, "module-pythainlp.tokenize.sefr_cut"]], "pythainlp.tokenize.tcc": [[13, "module-pythainlp.tokenize.tcc"]], "pythainlp.tokenize.thaisumcut": [[13, "module-pythainlp.tokenize.thaisumcut"]], "segment() (in module pythainlp.tokenize.attacut)": [[13, "pythainlp.tokenize.attacut.segment"]], "segment() (in module pythainlp.tokenize.crfcut)": [[13, "id3"], [13, "pythainlp.tokenize.crfcut.segment"]], "segment() (in module pythainlp.tokenize.deepcut)": [[13, "pythainlp.tokenize.deepcut.segment"]], "segment() (in module pythainlp.tokenize.etcc)": [[13, "id32"], [13, "pythainlp.tokenize.etcc.segment"]], "segment() (in module pythainlp.tokenize.longest)": [[13, "id20"], [13, "pythainlp.tokenize.longest.segment"]], "segment() (in module pythainlp.tokenize.multi_cut)": [[13, "id14"], [13, "pythainlp.tokenize.multi_cut.segment"]], "segment() (in module pythainlp.tokenize.nercut)": [[13, "id23"], [13, "pythainlp.tokenize.nercut.segment"]], "segment() (in module pythainlp.tokenize.newmm)": [[13, "id28"], [13, "pythainlp.tokenize.newmm.segment"]], "segment() (in module pythainlp.tokenize.nlpo3)": [[13, "id18"], [13, "pythainlp.tokenize.nlpo3.segment"]], "segment() (in module pythainlp.tokenize.oskut)": [[13, "pythainlp.tokenize.oskut.segment"]], "segment() (in module pythainlp.tokenize.pyicu)": [[13, "pythainlp.tokenize.pyicu.segment"]], "segment() (in module pythainlp.tokenize.sefr_cut)": [[13, "pythainlp.tokenize.sefr_cut.segment"]], "segment() (in module pythainlp.tokenize.tcc)": [[13, "id29"], [13, "pythainlp.tokenize.tcc.segment"]], "segment() (in module pythainlp.tokenize.tcc_p)": [[13, "pythainlp.tokenize.tcc_p.segment"]], "sent_tokenize() (in module pythainlp.tokenize)": [[13, "pythainlp.tokenize.sent_tokenize"]], "set_tokenize_engine() (pythainlp.tokenize.tokenizer method)": [[13, "pythainlp.tokenize.Tokenizer.set_tokenize_engine"]], "split_into_sentences() (pythainlp.tokenize.thaisumcut.thaisentencesegmentor method)": [[13, "id7"], [13, "pythainlp.tokenize.thaisumcut.ThaiSentenceSegmentor.split_into_sentences"]], "subword_tokenize() (in module pythainlp.tokenize)": [[13, "pythainlp.tokenize.subword_tokenize"]], "tcc() (in module pythainlp.tokenize.tcc)": [[13, "id30"], [13, "pythainlp.tokenize.tcc.tcc"]], "tcc() (in module pythainlp.tokenize.tcc_p)": [[13, "pythainlp.tokenize.tcc_p.tcc"]], "tcc_pos() (in module pythainlp.tokenize.tcc)": [[13, "id31"], [13, "pythainlp.tokenize.tcc.tcc_pos"]], "tcc_pos() (in module pythainlp.tokenize.tcc_p)": [[13, "pythainlp.tokenize.tcc_p.tcc_pos"]], "tokenize() (pythainlp.tokenize.attacut.attacuttokenizer method)": [[13, "id11"], [13, "pythainlp.tokenize.attacut.AttacutTokenizer.tokenize"]], "tokenize() (pythainlp.tokenize.longest.longestmatchtokenizer method)": [[13, "pythainlp.tokenize.longest.LongestMatchTokenizer.tokenize"]], "word_detokenize() (in module pythainlp.tokenize)": [[13, "pythainlp.tokenize.word_detokenize"]], "word_tokenize() (in module pythainlp.tokenize)": [[13, "pythainlp.tokenize.word_tokenize"]], "word_tokenize() (pythainlp.tokenize.tokenizer method)": [[13, "pythainlp.tokenize.Tokenizer.word_tokenize"]], "pythainlp_data_dir": [[14, "index-0"], [26, "envvar-PYTHAINLP_DATA_DIR"]], "environment variable": [[14, "index-0"], [26, "envvar-PYTHAINLP_DATA_DIR"], [26, "envvar-PYTHAINLP_READ_MODE"]], "get_full_data_path() (in module pythainlp.tools)": [[14, "pythainlp.tools.get_full_data_path"]], "get_pythainlp_data_path() (in module pythainlp.tools)": [[14, "pythainlp.tools.get_pythainlp_data_path"]], "get_pythainlp_path() (in module pythainlp.tools)": [[14, "pythainlp.tools.get_pythainlp_path"]], "misspell() (in module pythainlp.tools.misspell)": [[14, "pythainlp.tools.misspell.misspell"]], "enthtranslator (class in pythainlp.translate.en_th)": [[15, "pythainlp.translate.en_th.EnThTranslator"]], "thentranslator (class in pythainlp.translate.en_th)": [[15, "pythainlp.translate.en_th.ThEnTranslator"]], "thfrtranslator (class in pythainlp.translate.th_fr)": [[15, "pythainlp.translate.th_fr.ThFrTranslator"]], "thzhtranslator (class in pythainlp.translate.zh_th)": [[15, "pythainlp.translate.zh_th.ThZhTranslator"]], "translate (class in pythainlp.translate)": [[15, "pythainlp.translate.Translate"]], "zhthtranslator (class in pythainlp.translate.zh_th)": [[15, "pythainlp.translate.zh_th.ZhThTranslator"]], "__init__() (pythainlp.translate.translate method)": [[15, "pythainlp.translate.Translate.__init__"]], "__init__() (pythainlp.translate.en_th.enthtranslator method)": [[15, "pythainlp.translate.en_th.EnThTranslator.__init__"]], "__init__() (pythainlp.translate.en_th.thentranslator method)": [[15, "pythainlp.translate.en_th.ThEnTranslator.__init__"]], "__init__() (pythainlp.translate.th_fr.thfrtranslator method)": [[15, "pythainlp.translate.th_fr.ThFrTranslator.__init__"]], "__init__() (pythainlp.translate.zh_th.thzhtranslator method)": [[15, "pythainlp.translate.zh_th.ThZhTranslator.__init__"]], "__init__() (pythainlp.translate.zh_th.zhthtranslator method)": [[15, "pythainlp.translate.zh_th.ZhThTranslator.__init__"]], "download_model_all() (in module pythainlp.translate.en_th)": [[15, "pythainlp.translate.en_th.download_model_all"]], "load_model() (pythainlp.translate.translate method)": [[15, "pythainlp.translate.Translate.load_model"]], "translate() (pythainlp.translate.translate method)": [[15, "pythainlp.translate.Translate.translate"]], "translate() (pythainlp.translate.en_th.enthtranslator method)": [[15, "pythainlp.translate.en_th.EnThTranslator.translate"]], "translate() (pythainlp.translate.en_th.thentranslator method)": [[15, "pythainlp.translate.en_th.ThEnTranslator.translate"]], "translate() (pythainlp.translate.th_fr.thfrtranslator method)": [[15, "pythainlp.translate.th_fr.ThFrTranslator.translate"]], "translate() (pythainlp.translate.zh_th.thzhtranslator method)": [[15, "pythainlp.translate.zh_th.ThZhTranslator.translate"]], "translate() (pythainlp.translate.zh_th.zhthtranslator method)": [[15, "pythainlp.translate.zh_th.ZhThTranslator.translate"]], "wunsentransliterate (class in pythainlp.transliterate.wunsen)": [[16, "pythainlp.transliterate.wunsen.WunsenTransliterate"]], "__init__() (pythainlp.transliterate.wunsen.wunsentransliterate method)": [[16, "pythainlp.transliterate.wunsen.WunsenTransliterate.__init__"]], "pronunciate() (in module pythainlp.transliterate)": [[16, "pythainlp.transliterate.pronunciate"]], "puan() (in module pythainlp.transliterate)": [[16, "pythainlp.transliterate.puan"]], "pythainlp.transliterate.ipa": [[16, "module-pythainlp.transliterate.ipa"]], "pythainlp.transliterate.iso_11940": [[16, "module-pythainlp.transliterate.iso_11940"]], "pythainlp.transliterate.pyicu": [[16, "module-pythainlp.transliterate.pyicu"]], "pythainlp.transliterate.royin.romanize": [[16, "module-pythainlp.transliterate.royin.romanize"]], "pythainlp.transliterate.thai2rom.romanize": [[16, "module-pythainlp.transliterate.thai2rom.romanize"]], "pythainlp.transliterate.thaig2p.transliterate": [[16, "module-pythainlp.transliterate.thaig2p.transliterate"]], "romanize() (in module pythainlp.transliterate)": [[16, "pythainlp.transliterate.romanize"]], "romanize() (in module pythainlp.transliterate.tltk)": [[16, "pythainlp.transliterate.tltk.romanize"]], "tltk_g2p() (in module pythainlp.transliterate.tltk)": [[16, "pythainlp.transliterate.tltk.tltk_g2p"]], "tltk_ipa() (in module pythainlp.transliterate.tltk)": [[16, "pythainlp.transliterate.tltk.tltk_ipa"]], "trans_list() (in module pythainlp.transliterate.ipa)": [[16, "id5"], [16, "pythainlp.transliterate.ipa.trans_list"]], "transliterate() (in module pythainlp.transliterate)": [[16, "pythainlp.transliterate.transliterate"]], "transliterate() (in module pythainlp.transliterate.ipa)": [[16, "id4"], [16, "pythainlp.transliterate.ipa.transliterate"]], "transliterate() (in module pythainlp.transliterate.iso_11940)": [[16, "pythainlp.transliterate.iso_11940.transliterate"]], "transliterate() (in module pythainlp.transliterate.pyicu)": [[16, "id0"], [16, "pythainlp.transliterate.pyicu.transliterate"]], "transliterate() (in module pythainlp.transliterate.thaig2p)": [[16, "pythainlp.transliterate.thaig2p.transliterate"]], "transliterate() (pythainlp.transliterate.wunsen.wunsentransliterate method)": [[16, "pythainlp.transliterate.wunsen.WunsenTransliterate.transliterate"]], "xsampa_list() (in module pythainlp.transliterate.ipa)": [[16, "id6"], [16, "pythainlp.transliterate.ipa.xsampa_list"]], "thaitokenizer (class in pythainlp.ulmfit)": [[17, "pythainlp.ulmfit.ThaiTokenizer"]], "__init__() (pythainlp.ulmfit.thaitokenizer method)": [[17, "pythainlp.ulmfit.ThaiTokenizer.__init__"]], "add_special_cases() (pythainlp.ulmfit.thaitokenizer method)": [[17, "pythainlp.ulmfit.ThaiTokenizer.add_special_cases"]], "document_vector() (in module pythainlp.ulmfit)": [[17, "pythainlp.ulmfit.document_vector"]], "fix_html() (in module pythainlp.ulmfit)": [[17, "pythainlp.ulmfit.fix_html"]], "lowercase_all() (in module pythainlp.ulmfit)": [[17, "pythainlp.ulmfit.lowercase_all"]], "merge_wgts() (in module pythainlp.ulmfit)": [[17, "pythainlp.ulmfit.merge_wgts"]], "process_thai() (in module pythainlp.ulmfit)": [[17, "pythainlp.ulmfit.process_thai"]], "remove_space() (in module pythainlp.ulmfit)": [[17, "pythainlp.ulmfit.remove_space"]], "replace_rep_after() (in module pythainlp.ulmfit)": [[17, "pythainlp.ulmfit.replace_rep_after"]], "replace_rep_nonum() (in module pythainlp.ulmfit)": [[17, "pythainlp.ulmfit.replace_rep_nonum"]], "replace_wrep_post() (in module pythainlp.ulmfit)": [[17, "pythainlp.ulmfit.replace_wrep_post"]], "replace_wrep_post_nonum() (in module pythainlp.ulmfit)": [[17, "pythainlp.ulmfit.replace_wrep_post_nonum"]], "rm_brackets() (in module pythainlp.ulmfit)": [[17, "pythainlp.ulmfit.rm_brackets"]], "rm_useless_newlines() (in module pythainlp.ulmfit)": [[17, "pythainlp.ulmfit.rm_useless_newlines"]], "rm_useless_spaces() (in module pythainlp.ulmfit)": [[17, "pythainlp.ulmfit.rm_useless_spaces"]], "spec_add_spaces() (in module pythainlp.ulmfit)": [[17, "pythainlp.ulmfit.spec_add_spaces"]], "tokenizer() (pythainlp.ulmfit.thaitokenizer static method)": [[17, "pythainlp.ulmfit.ThaiTokenizer.tokenizer"]], "ungroup_emoji() (in module pythainlp.ulmfit)": [[17, "pythainlp.ulmfit.ungroup_emoji"]], "trie (class in pythainlp.util)": [[18, "pythainlp.util.Trie"]], "trie.node (class in pythainlp.util)": [[18, "pythainlp.util.Trie.Node"]], "__init__() (pythainlp.util.trie method)": [[18, "pythainlp.util.Trie.__init__"]], "__init__() (pythainlp.util.trie.node method)": [[18, "pythainlp.util.Trie.Node.__init__"]], "add() (pythainlp.util.trie method)": [[18, "pythainlp.util.Trie.add"]], "arabic_digit_to_thai_digit() (in module pythainlp.util)": [[18, "pythainlp.util.arabic_digit_to_thai_digit"]], "bahttext() (in module pythainlp.util)": [[18, "pythainlp.util.bahttext"]], "children (pythainlp.util.trie.node attribute)": [[18, "pythainlp.util.Trie.Node.children"]], "collate() (in module pythainlp.util)": [[18, "pythainlp.util.collate"]], "convert_years() (in module pythainlp.util)": [[18, "pythainlp.util.convert_years"]], "count_thai_chars() (in module pythainlp.util)": [[18, "pythainlp.util.count_thai_chars"]], "countthai() (in module pythainlp.util)": [[18, "pythainlp.util.countthai"]], "dict_trie() (in module pythainlp.util)": [[18, "pythainlp.util.dict_trie"]], "digit_to_text() (in module pythainlp.util)": [[18, "pythainlp.util.digit_to_text"]], "display_thai_char() (in module pythainlp.util)": [[18, "pythainlp.util.display_thai_char"]], "emoji_to_thai() (in module pythainlp.util)": [[18, "pythainlp.util.emoji_to_thai"]], "end (pythainlp.util.trie.node attribute)": [[18, "pythainlp.util.Trie.Node.end"]], "eng_to_thai() (in module pythainlp.util)": [[18, "pythainlp.util.eng_to_thai"]], "find_keyword() (in module pythainlp.util)": [[18, "pythainlp.util.find_keyword"]], "ipa_to_rtgs() (in module pythainlp.util)": [[18, "pythainlp.util.ipa_to_rtgs"]], "is_native_thai() (in module pythainlp.util)": [[18, "pythainlp.util.is_native_thai"]], "isthai() (in module pythainlp.util)": [[18, "pythainlp.util.isthai"]], "isthaichar() (in module pythainlp.util)": [[18, "pythainlp.util.isthaichar"]], "maiyamok() (in module pythainlp.util)": [[18, "pythainlp.util.maiyamok"]], "nectec_to_ipa() (in module pythainlp.util)": [[18, "pythainlp.util.nectec_to_ipa"]], "normalize() (in module pythainlp.util)": [[18, "pythainlp.util.normalize"]], "now_reign_year() (in module pythainlp.util)": [[18, "pythainlp.util.now_reign_year"]], "num_to_thaiword() (in module pythainlp.util)": [[18, "pythainlp.util.num_to_thaiword"]], "prefixes() (pythainlp.util.trie method)": [[18, "pythainlp.util.Trie.prefixes"]], "rank() (in module pythainlp.util)": [[18, "pythainlp.util.rank"]], "reign_year_to_ad() (in module pythainlp.util)": [[18, "pythainlp.util.reign_year_to_ad"]], "remove() (pythainlp.util.trie method)": [[18, "pythainlp.util.Trie.remove"]], "remove_dangling() (in module pythainlp.util)": [[18, "pythainlp.util.remove_dangling"]], "remove_dup_spaces() (in module pythainlp.util)": [[18, "pythainlp.util.remove_dup_spaces"]], "remove_repeat_vowels() (in module pythainlp.util)": [[18, "pythainlp.util.remove_repeat_vowels"]], "remove_tone_ipa() (in module pythainlp.util)": [[18, "pythainlp.util.remove_tone_ipa"]], "remove_tonemark() (in module pythainlp.util)": [[18, "pythainlp.util.remove_tonemark"]], "remove_zw() (in module pythainlp.util)": [[18, "pythainlp.util.remove_zw"]], "reorder_vowels() (in module pythainlp.util)": [[18, "pythainlp.util.reorder_vowels"]], "sound_syllable() (in module pythainlp.util)": [[18, "pythainlp.util.sound_syllable"]], "spell_syllable() (in module pythainlp.util.spell_words)": [[18, "pythainlp.util.spell_words.spell_syllable"]], "spell_word() (in module pythainlp.util.spell_words)": [[18, "pythainlp.util.spell_words.spell_word"]], "syllable_length() (in module pythainlp.util)": [[18, "pythainlp.util.syllable_length"]], "syllable_open_close_detector() (in module pythainlp.util)": [[18, "pythainlp.util.syllable_open_close_detector"]], "text_to_arabic_digit() (in module pythainlp.util)": [[18, "pythainlp.util.text_to_arabic_digit"]], "text_to_num() (in module pythainlp.util)": [[18, "pythainlp.util.text_to_num"]], "text_to_thai_digit() (in module pythainlp.util)": [[18, "pythainlp.util.text_to_thai_digit"]], "thai_digit_to_arabic_digit() (in module pythainlp.util)": [[18, "pythainlp.util.thai_digit_to_arabic_digit"]], "thai_strftime() (in module pythainlp.util)": [[18, "pythainlp.util.thai_strftime"]], "thai_strptime() (in module pythainlp.util)": [[18, "pythainlp.util.thai_strptime"]], "thai_to_eng() (in module pythainlp.util)": [[18, "pythainlp.util.thai_to_eng"]], "thai_word_tone_detector() (in module pythainlp.util)": [[18, "pythainlp.util.thai_word_tone_detector"]], "thaiword_to_date() (in module pythainlp.util)": [[18, "pythainlp.util.thaiword_to_date"]], "thaiword_to_num() (in module pythainlp.util)": [[18, "pythainlp.util.thaiword_to_num"]], "thaiword_to_time() (in module pythainlp.util)": [[18, "pythainlp.util.thaiword_to_time"]], "time_to_thaiword() (in module pythainlp.util)": [[18, "pythainlp.util.time_to_thaiword"]], "tis620_to_utf8() (in module pythainlp.util)": [[18, "pythainlp.util.tis620_to_utf8"]], "tone_detector() (in module pythainlp.util)": [[18, "pythainlp.util.tone_detector"]], "words_to_num() (in module pythainlp.util)": [[18, "pythainlp.util.words_to_num"]], "segment() (in module pythainlp.wangchanberta)": [[19, "pythainlp.wangchanberta.segment"]], "wordvector (class in pythainlp.word_vector)": [[20, "pythainlp.word_vector.WordVector"]], "__init__() (pythainlp.word_vector.wordvector method)": [[20, "pythainlp.word_vector.WordVector.__init__"]], "doesnt_match() (pythainlp.word_vector.wordvector method)": [[20, "pythainlp.word_vector.WordVector.doesnt_match"]], "get_model() (pythainlp.word_vector.wordvector method)": [[20, "pythainlp.word_vector.WordVector.get_model"]], "load_wordvector() (pythainlp.word_vector.wordvector method)": [[20, "pythainlp.word_vector.WordVector.load_wordvector"]], "most_similar_cosmul() (pythainlp.word_vector.wordvector method)": [[20, "pythainlp.word_vector.WordVector.most_similar_cosmul"]], "sentence_vectorizer() (pythainlp.word_vector.wordvector method)": [[20, "pythainlp.word_vector.WordVector.sentence_vectorizer"]], "similarity() (pythainlp.word_vector.wordvector method)": [[20, "pythainlp.word_vector.WordVector.similarity"]], "get_sense() (in module pythainlp.wsd)": [[21, "pythainlp.wsd.get_sense"]], "pythainlp_read_mode": [[26, "envvar-PYTHAINLP_READ_MODE"]]}})